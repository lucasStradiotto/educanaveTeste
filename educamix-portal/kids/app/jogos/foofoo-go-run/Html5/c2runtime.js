// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.nextHighestPowerOfTwo = function(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		if (x >= 0)
			return x | 0;
		else
			return (x | 0) - 1;		// correctly round down when negative
	};
	cr.ceil = function (x)
	{
		var f = x | 0;
		return (f === x ? f : f + 1);
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		var max_ax, min_ax, max_ay, min_ay, max_bx, min_bx, max_by, min_by;
		if (a1x < a2x)
		{
			min_ax = a1x;
			max_ax = a2x;
		}
		else
		{
			min_ax = a2x;
			max_ax = a1x;
		}
		if (b1x < b2x)
		{
			min_bx = b1x;
			max_bx = b2x;
		}
		else
		{
			min_bx = b2x;
			max_bx = b1x;
		}
		if (max_ax < min_bx || min_ax > max_bx)
			return false;
		if (a1y < a2y)
		{
			min_ay = a1y;
			max_ay = a2y;
		}
		else
		{
			min_ay = a2y;
			max_ay = a1y;
		}
		if (b1y < b2y)
		{
			min_by = b1y;
			max_by = b2y;
		}
		else
		{
			min_by = b2y;
			max_by = b1y;
		}
		if (max_ay < min_by || min_ay > max_by)
			return false;
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		if (cr.abs(la) > d)
			return false;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.copy = function (r)
	{
		this.left = r.left;
		this.top = r.top;
		this.right = r.right;
		this.bottom = r.bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.normalize = function ()
	{
		var temp = 0;
		if (this.left > this.right)
		{
			temp = this.left;
			this.left = this.right;
			this.right = temp;
		}
		if (this.top > this.bottom)
		{
			temp = this.top;
			this.top = this.bottom;
			this.bottom = temp;
		}
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.intersects_rect_off = function (rc, ox, oy)
	{
		return !(rc.right + ox < this.left || rc.bottom + oy < this.top || rc.left + ox > this.right || rc.top + oy > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	Rect.prototype.equals = function (r)
	{
		return this.left === r.left && this.top === r.top && this.right === r.right && this.bottom === r.bottom;
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	var minresult = 0;
	var maxresult = 0;
	function minmax4(a, b, c, d)
	{
		if (a < b)
		{
			if (c < d)
			{
				if (a < c)
					minresult = a;
				else
					minresult = c;
				if (b > d)
					maxresult = b;
				else
					maxresult = d;
			}
			else
			{
				if (a < d)
					minresult = a;
				else
					minresult = d;
				if (b > c)
					maxresult = b;
				else
					maxresult = c;
			}
		}
		else
		{
			if (c < d)
			{
				if (b < c)
					minresult = b;
				else
					minresult = c;
				if (a > d)
					maxresult = a;
				else
					maxresult = d;
			}
			else
			{
				if (b < d)
					minresult = b;
				else
					minresult = d;
				if (a > c)
					maxresult = a;
				else
					maxresult = c;
			}
		}
	};
	Quad.prototype.bounding_box = function (rc)
	{
		minmax4(this.tlx, this.trx, this.brx, this.blx);
		rc.left = minresult;
		rc.right = maxresult;
		minmax4(this.tly, this.try_, this.bry, this.bly);
		rc.top = minresult;
		rc.bottom = maxresult;
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		if (xory)
		{
			switch (i)
			{
				case 0: return this.tlx;
				case 1: return this.trx;
				case 2: return this.brx;
				case 3: return this.blx;
				case 4: return this.tlx;
				default: return this.tlx;
			}
		}
		else
		{
			switch (i)
			{
				case 0: return this.tly;
				case 1: return this.try_;
				case 2: return this.bry;
				case 3: return this.bly;
				case 4: return this.tly;
				default: return this.tly;
			}
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_segment = function (x1, y1, x2, y2)
	{
		if (this.contains_pt(x1, y1) || this.contains_pt(x2, y2))
			return true;
		var a1x, a1y, a2x, a2y;
		var i;
		for (i = 0; i < 4; i++)
		{
			a1x = this.at(i, true);
			a1y = this.at(i, false);
			a2x = this.at(i + 1, true);
			a2y = this.at(i + 1, false);
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		if (index === 0)					// removing first item
			arr.shift();
		else if (index === arr.length - 1)	// removing last item
			arr.pop();
		else
		{
			for (i = index, len = arr.length - 1; i < len; i++)
				arr[i] = arr[i + 1];
			arr.length = len;
		}
	};
	cr.shallowAssignArray = function (dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.appendArray = function (a, b)
	{
		a.push.apply(a, b);
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = arr.indexOf(item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.rotatePtAround = function (px, py, a, ox, oy, getx)
	{
		if (a === 0)
			return getx ? px : py;
		var sin_a = Math.sin(a);
		var cos_a = Math.cos(a);
		px -= ox;
		py -= oy;
		var left_sin_a = px * sin_a;
		var top_sin_a = py * sin_a;
		var left_cos_a = px * cos_a;
		var top_cos_a = py * cos_a;
		px = left_cos_a - top_sin_a;
		py = top_cos_a + left_sin_a;
		px += ox;
		py += oy;
		return getx ? px : py;
	}
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	var startup_time = +(new Date());
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["mozNow"] !== "undefined")
				return winperf["mozNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now() - startup_time;
	};
	var supports_set = (typeof Set !== "undefined" && typeof Set.prototype["forEach"] !== "undefined");
	function ObjectSet_()
	{
		this.s = null;
		this.items = null;
		this.item_count = 0;
		if (supports_set)
		{
			this.s = new Set();
		}
		else
		{
			this.items = {};
		}
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		if (supports_set)
			return this.s["has"](x);
		else
			return this.items.hasOwnProperty(x.toString());
	};
	ObjectSet_.prototype.add = function (x)
	{
		if (supports_set)
		{
			if (!this.s["has"](x))
			{
				this.s["add"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			if (!this.items.hasOwnProperty(str))
			{
				this.items[str] = x;
				this.item_count++;
				this.cache_valid = false;
			}
		}
		return this;
	};
	ObjectSet_.prototype.remove = function (x)
	{
		if (supports_set)
		{
			if (this.s["has"](x))
			{
				this.s["delete"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			if (this.items.hasOwnProperty(str))
			{
				delete this.items[str];
				this.item_count--;
				this.cache_valid = false;
			}
		}
		return this;
	};
	ObjectSet_.prototype.clear = function ()
	{
		if (supports_set)
		{
			this.s["clear"]();
		}
		else
		{
			this.items = {};
			this.item_count = 0;
		}
		this.values_cache.length = 0;
		this.cache_valid = true;
		return this;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		if (supports_set)
			return this.s["size"] === 0;
		else
			return this.item_count === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		if (supports_set)
			return this.s["size"];
		else
			return this.item_count;
	};
	var current_arr = null;
	var current_index = 0;
	function set_append_to_arr(x)
	{
		current_arr[current_index++] = x;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		if (supports_set)
		{
			this.values_cache.length = this.s["size"];
			current_arr = this.values_cache;
			current_index = 0;
			this.s["forEach"](set_append_to_arr);
;
			current_arr = null;
			current_index = 0;
		}
		else
		{
			this.values_cache.length = this.item_count;
			var p, n = 0;
			for (p in this.items)
			{
				if (this.items.hasOwnProperty(p))
					this.values_cache[n++] = this.items[p];
			}
;
		}
		this.cache_valid = true;
	};
	ObjectSet_.prototype.values = function ()
	{
		this.update_cache();
		return this.values_cache.slice(0);
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.bboxLeft = 0;
		this.bboxTop = 0;
		this.bboxRight = 0;
		this.bboxBottom = 0;
		this.convexpolys = null;		// for physics behavior to cache separated polys
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.update_bbox = function ()
	{
		var myptscache = this.pts_cache;
		var bboxLeft_ = myptscache[0];
		var bboxRight_ = bboxLeft_;
		var bboxTop_ = myptscache[1];
		var bboxBottom_ = bboxTop_;
		var x, y, i = 1, i2, len = this.pts_count;
		for ( ; i < len; ++i)
		{
			i2 = i*2;
			x = myptscache[i2];
			y = myptscache[i2+1];
			if (x < bboxLeft_)
				bboxLeft_ = x;
			if (x > bboxRight_)
				bboxRight_ = x;
			if (y < bboxTop_)
				bboxTop_ = y;
			if (y > bboxBottom_)
				bboxBottom_ = y;
		}
		this.bboxLeft = bboxLeft_;
		this.bboxRight = bboxRight_;
		this.bboxTop = bboxTop_;
		this.bboxBottom = bboxBottom_;
	};
	CollisionPoly_.prototype.set_from_rect = function(rc, offx, offy)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = rc.left - offx;
		myptscache[1] = rc.top - offy;
		myptscache[2] = rc.right - offx;
		myptscache[3] = rc.top - offy;
		myptscache[4] = rc.right - offx;
		myptscache[5] = rc.bottom - offy;
		myptscache[6] = rc.left - offx;
		myptscache[7] = rc.bottom - offy;
		this.cache_width = rc.right - rc.left;
		this.cache_height = rc.bottom - rc.top;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
		this.update_bbox();
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
		this.bboxLeft = r.bboxLeft;
		this.bboxTop - r.bboxTop;
		this.bboxRight = r.bboxRight;
		this.bboxBottom = r.bboxBottom;
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, i2, i21, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			i2 = i*2;
			i21 = i2+1;
			x = myptsarray[i2] * w;
			y = myptsarray[i21] * h;
			myptscache[i2] = (x * cosa) - (y * sina);
			myptscache[i21] = (y * cosa) + (x * sina);
		}
		this.update_bbox();
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var i, i2, imod, len = this.pts_count;
		var a1x = this.bboxLeft - 110;
		var a1y = this.bboxTop - 101;
		var a3x = this.bboxRight + 131
		var a3y = this.bboxBottom + 120;
		var b1x, b1y, b2x, b2y;
		var count1 = 0, count2 = 0;
		for (i = 0; i < len; i++)
		{
			i2 = i*2;
			imod = ((i+1)%len)*2;
			b1x = myptscache[i2];
			b1y = myptscache[i2+1];
			b2x = myptscache[imod];
			b2y = myptscache[imod+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, i2, imod, leni, j, j2, jmod, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2];
			a1y = mypts[i2+1];
			a2x = mypts[imod];
			a2y = mypts[imod+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				j2 = j*2;
				jmod = ((j+1)%lenj)*2;
				b1x = rhspts[j2] + offx;
				b1y = rhspts[j2+1] + offy;
				b2x = rhspts[jmod] + offx;
				b2y = rhspts[jmod+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	CollisionPoly_.prototype.intersects_segment = function (offx, offy, x1, y1, x2, y2)
	{
		var mypts = this.pts_cache;
		if (this.contains_pt(x1 - offx, y1 - offy))
			return true;
		var i, leni, i2, imod;
		var a1x, a1y, a2x, a2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			i2 = i*2;
			imod = ((i+1)%leni)*2;
			a1x = mypts[i2] + offx;
			a1y = mypts[i2+1] + offy;
			a2x = mypts[imod] + offx;
			a2y = mypts[imod+1] + offy;
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	CollisionPoly_.prototype.mirror = function (px)
	{
		var i, leni, i2;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			this.pts_cache[i2] = px * 2 - this.pts_cache[i2];
		}
	};
	CollisionPoly_.prototype.flip = function (py)
	{
		var i, leni, i21;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i21 = i*2+1;
			this.pts_cache[i21] = py * 2 - this.pts_cache[i21];
		}
	};
	CollisionPoly_.prototype.diag = function ()
	{
		var i, leni, i2, i21, temp;
		for (i = 0, leni = this.pts_count; i < leni; ++i)
		{
			i2 = i*2;
			i21 = i2+1;
			temp = this.pts_cache[i2];
			this.pts_cache[i2] = this.pts_cache[i21];
			this.pts_cache[i21] = temp;
		}
	};
	cr.CollisionPoly = CollisionPoly_;
	function SparseGrid_(cellwidth_, cellheight_)
	{
		this.cellwidth = cellwidth_;
		this.cellheight = cellheight_;
		this.cells = {};
	};
	SparseGrid_.prototype.totalCellCount = 0;
	SparseGrid_.prototype.getCell = function (x_, y_, create_if_missing)
	{
		var ret;
		var col = this.cells[x_];
		if (!col)
		{
			if (create_if_missing)
			{
				ret = allocGridCell(this, x_, y_);
				this.cells[x_] = {};
				this.cells[x_][y_] = ret;
				return ret;
			}
			else
				return null;
		}
		ret = col[y_];
		if (ret)
			return ret;
		else if (create_if_missing)
		{
			ret = allocGridCell(this, x_, y_);
			this.cells[x_][y_] = ret;
			return ret;
		}
		else
			return null;
	};
	SparseGrid_.prototype.XToCell = function (x_)
	{
		return cr.floor(x_ / this.cellwidth);
	};
	SparseGrid_.prototype.YToCell = function (y_)
	{
		return cr.floor(y_ / this.cellheight);
	};
	SparseGrid_.prototype.update = function (inst, oldrange, newrange)
	{
		var x, lenx, y, leny, cell;
		if (oldrange)
		{
			for (x = oldrange.left, lenx = oldrange.right; x <= lenx; ++x)
			{
				for (y = oldrange.top, leny = oldrange.bottom; y <= leny; ++y)
				{
					if (newrange && newrange.contains_pt(x, y))
						continue;	// is still in this cell
					cell = this.getCell(x, y, false);	// don't create if missing
					if (!cell)
						continue;	// cell does not exist yet
					cell.remove(inst);
					if (cell.isEmpty())
					{
						freeGridCell(cell);
						this.cells[x][y] = null;
					}
				}
			}
		}
		if (newrange)
		{
			for (x = newrange.left, lenx = newrange.right; x <= lenx; ++x)
			{
				for (y = newrange.top, leny = newrange.bottom; y <= leny; ++y)
				{
					if (oldrange && oldrange.contains_pt(x, y))
						continue;	// is still in this cell
					this.getCell(x, y, true).insert(inst);
				}
			}
		}
	};
	SparseGrid_.prototype.queryRange = function (rc, result)
	{
		var x, lenx, ystart, y, leny, cell;
		x = this.XToCell(rc.left);
		ystart = this.YToCell(rc.top);
		lenx = this.XToCell(rc.right);
		leny = this.YToCell(rc.bottom);
		for ( ; x <= lenx; ++x)
		{
			for (y = ystart; y <= leny; ++y)
			{
				cell = this.getCell(x, y, false);
				if (!cell)
					continue;
				cell.dump(result);
			}
		}
	};
	cr.SparseGrid = SparseGrid_;
	var gridcellcache = [];
	function allocGridCell(grid_, x_, y_)
	{
		var ret;
		SparseGrid_.prototype.totalCellCount++;
		if (gridcellcache.length)
		{
			ret = gridcellcache.pop();
			ret.grid = grid_;
			ret.x = x_;
			ret.y = y_;
			return ret;
		}
		else
			return new cr.GridCell(grid_, x_, y_);
	};
	function freeGridCell(c)
	{
		SparseGrid_.prototype.totalCellCount--;
		c.objects.clear();
		if (gridcellcache.length < 1000)
			gridcellcache.push(c);
	};
	function GridCell_(grid_, x_, y_)
	{
		this.grid = grid_;
		this.x = x_;
		this.y = y_;
		this.objects = new cr.ObjectSet();
	};
	GridCell_.prototype.isEmpty = function ()
	{
		return this.objects.isEmpty();
	};
	GridCell_.prototype.insert = function (inst)
	{
		this.objects.add(inst);
	};
	GridCell_.prototype.remove = function (inst)
	{
		this.objects.remove(inst);
	};
	GridCell_.prototype.dump = function (result)
	{
		cr.appendArray(result, this.objects.valuesRef());
	};
	cr.GridCell = GridCell_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return cr.round(x * 1000000) / 1000000;
	};
	/*
	var localeCompare_options = {
		"usage": "search",
		"sensitivity": "accent"
	};
	var has_localeCompare = !!"a".localeCompare;
	var localeCompare_works1 = (has_localeCompare && "a".localeCompare("A", undefined, localeCompare_options) === 0);
	var localeCompare_works2 = (has_localeCompare && "a".localeCompare("á", undefined, localeCompare_options) !== 0);
	var supports_localeCompare = (has_localeCompare && localeCompare_works1 && localeCompare_works2);
	*/
	cr.equals_nocase = function (a, b)
	{
		if (typeof a !== "string" || typeof b !== "string")
			return false;
		if (a.length !== b.length)
			return false;
		if (a === b)
			return true;
		/*
		if (supports_localeCompare)
		{
			return (a.localeCompare(b, undefined, localeCompare_options) === 0);
		}
		else
		{
		*/
			return a.toLowerCase() === b.toLowerCase();
	};
}());
var MatrixArray=typeof Float32Array!=="undefined"?Float32Array:Array,glMatrixArrayType=MatrixArray,vec3={},mat3={},mat4={},quat4={};vec3.create=function(a){var b=new MatrixArray(3);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2]);return b};vec3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];return b};vec3.add=function(a,b,c){if(!c||a===c)return a[0]+=b[0],a[1]+=b[1],a[2]+=b[2],a;c[0]=a[0]+b[0];c[1]=a[1]+b[1];c[2]=a[2]+b[2];return c};
vec3.subtract=function(a,b,c){if(!c||a===c)return a[0]-=b[0],a[1]-=b[1],a[2]-=b[2],a;c[0]=a[0]-b[0];c[1]=a[1]-b[1];c[2]=a[2]-b[2];return c};vec3.negate=function(a,b){b||(b=a);b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];return b};vec3.scale=function(a,b,c){if(!c||a===c)return a[0]*=b,a[1]*=b,a[2]*=b,a;c[0]=a[0]*b;c[1]=a[1]*b;c[2]=a[2]*b;return c};
vec3.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=Math.sqrt(c*c+d*d+e*e);if(g){if(g===1)return b[0]=c,b[1]=d,b[2]=e,b}else return b[0]=0,b[1]=0,b[2]=0,b;g=1/g;b[0]=c*g;b[1]=d*g;b[2]=e*g;return b};vec3.cross=function(a,b,c){c||(c=a);var d=a[0],e=a[1],a=a[2],g=b[0],f=b[1],b=b[2];c[0]=e*b-a*f;c[1]=a*g-d*b;c[2]=d*f-e*g;return c};vec3.length=function(a){var b=a[0],c=a[1],a=a[2];return Math.sqrt(b*b+c*c+a*a)};vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};
vec3.direction=function(a,b,c){c||(c=a);var d=a[0]-b[0],e=a[1]-b[1],a=a[2]-b[2],b=Math.sqrt(d*d+e*e+a*a);if(!b)return c[0]=0,c[1]=0,c[2]=0,c;b=1/b;c[0]=d*b;c[1]=e*b;c[2]=a*b;return c};vec3.lerp=function(a,b,c,d){d||(d=a);d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);return d};vec3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+"]"};
mat3.create=function(a){var b=new MatrixArray(9);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8]);return b};mat3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b};mat3.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};
mat3.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[5];a[1]=a[3];a[2]=a[6];a[3]=c;a[5]=a[7];a[6]=d;a[7]=e;return a}b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return b};mat3.toMat4=function(a,b){b||(b=mat4.create());b[15]=1;b[14]=0;b[13]=0;b[12]=0;b[11]=0;b[10]=a[8];b[9]=a[7];b[8]=a[6];b[7]=0;b[6]=a[5];b[5]=a[4];b[4]=a[3];b[3]=0;b[2]=a[2];b[1]=a[1];b[0]=a[0];return b};
mat3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+"]"};mat4.create=function(a){var b=new MatrixArray(16);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15]);return b};
mat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b};mat4.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1;return a};
mat4.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[3],g=a[6],f=a[7],h=a[11];a[1]=a[4];a[2]=a[8];a[3]=a[12];a[4]=c;a[6]=a[9];a[7]=a[13];a[8]=d;a[9]=g;a[11]=a[14];a[12]=e;a[13]=f;a[14]=h;return a}b[0]=a[0];b[1]=a[4];b[2]=a[8];b[3]=a[12];b[4]=a[1];b[5]=a[5];b[6]=a[9];b[7]=a[13];b[8]=a[2];b[9]=a[6];b[10]=a[10];b[11]=a[14];b[12]=a[3];b[13]=a[7];b[14]=a[11];b[15]=a[15];return b};
mat4.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],n=a[11],o=a[12],m=a[13],p=a[14],a=a[15];return o*k*h*e-j*m*h*e-o*f*l*e+g*m*l*e+j*f*p*e-g*k*p*e-o*k*d*i+j*m*d*i+o*c*l*i-b*m*l*i-j*c*p*i+b*k*p*i+o*f*d*n-g*m*d*n-o*c*h*n+b*m*h*n+g*c*p*n-b*f*p*n-j*f*d*a+g*k*d*a+j*c*h*a-b*k*h*a-g*c*l*a+b*f*l*a};
mat4.inverse=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],n=a[10],o=a[11],m=a[12],p=a[13],r=a[14],s=a[15],A=c*h-d*f,B=c*i-e*f,t=c*j-g*f,u=d*i-e*h,v=d*j-g*h,w=e*j-g*i,x=k*p-l*m,y=k*r-n*m,z=k*s-o*m,C=l*r-n*p,D=l*s-o*p,E=n*s-o*r,q=1/(A*E-B*D+t*C+u*z-v*y+w*x);b[0]=(h*E-i*D+j*C)*q;b[1]=(-d*E+e*D-g*C)*q;b[2]=(p*w-r*v+s*u)*q;b[3]=(-l*w+n*v-o*u)*q;b[4]=(-f*E+i*z-j*y)*q;b[5]=(c*E-e*z+g*y)*q;b[6]=(-m*w+r*t-s*B)*q;b[7]=(k*w-n*t+o*B)*q;b[8]=(f*D-h*z+j*x)*q;
b[9]=(-c*D+d*z-g*x)*q;b[10]=(m*v-p*t+s*A)*q;b[11]=(-k*v+l*t-o*A)*q;b[12]=(-f*C+h*y-i*x)*q;b[13]=(c*C-d*y+e*x)*q;b[14]=(-m*u+p*B-r*A)*q;b[15]=(k*u-l*B+n*A)*q;return b};mat4.toRotationMat=function(a,b){b||(b=mat4.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
mat4.toMat3=function(a,b){b||(b=mat3.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[4];b[4]=a[5];b[5]=a[6];b[6]=a[8];b[7]=a[9];b[8]=a[10];return b};mat4.toInverseMat3=function(a,b){var c=a[0],d=a[1],e=a[2],g=a[4],f=a[5],h=a[6],i=a[8],j=a[9],k=a[10],l=k*f-h*j,n=-k*g+h*i,o=j*g-f*i,m=c*l+d*n+e*o;if(!m)return null;m=1/m;b||(b=mat3.create());b[0]=l*m;b[1]=(-k*d+e*j)*m;b[2]=(h*d-e*f)*m;b[3]=n*m;b[4]=(k*c-e*i)*m;b[5]=(-h*c+e*g)*m;b[6]=o*m;b[7]=(-j*c+d*i)*m;b[8]=(f*c-d*g)*m;return b};
mat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],f=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],n=a[9],o=a[10],m=a[11],p=a[12],r=a[13],s=a[14],a=a[15],A=b[0],B=b[1],t=b[2],u=b[3],v=b[4],w=b[5],x=b[6],y=b[7],z=b[8],C=b[9],D=b[10],E=b[11],q=b[12],F=b[13],G=b[14],b=b[15];c[0]=A*d+B*h+t*l+u*p;c[1]=A*e+B*i+t*n+u*r;c[2]=A*g+B*j+t*o+u*s;c[3]=A*f+B*k+t*m+u*a;c[4]=v*d+w*h+x*l+y*p;c[5]=v*e+w*i+x*n+y*r;c[6]=v*g+w*j+x*o+y*s;c[7]=v*f+w*k+x*m+y*a;c[8]=z*d+C*h+D*l+E*p;c[9]=z*e+C*i+D*n+E*r;c[10]=z*g+C*
j+D*o+E*s;c[11]=z*f+C*k+D*m+E*a;c[12]=q*d+F*h+G*l+b*p;c[13]=q*e+F*i+G*n+b*r;c[14]=q*g+F*j+G*o+b*s;c[15]=q*f+F*k+G*m+b*a;return c};mat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],b=b[2];c[0]=a[0]*d+a[4]*e+a[8]*b+a[12];c[1]=a[1]*d+a[5]*e+a[9]*b+a[13];c[2]=a[2]*d+a[6]*e+a[10]*b+a[14];return c};
mat4.multiplyVec4=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=b[3];c[0]=a[0]*d+a[4]*e+a[8]*g+a[12]*b;c[1]=a[1]*d+a[5]*e+a[9]*g+a[13]*b;c[2]=a[2]*d+a[6]*e+a[10]*g+a[14]*b;c[3]=a[3]*d+a[7]*e+a[11]*g+a[15]*b;return c};
mat4.translate=function(a,b,c){var d=b[0],e=b[1],b=b[2],g,f,h,i,j,k,l,n,o,m,p,r;if(!c||a===c)return a[12]=a[0]*d+a[4]*e+a[8]*b+a[12],a[13]=a[1]*d+a[5]*e+a[9]*b+a[13],a[14]=a[2]*d+a[6]*e+a[10]*b+a[14],a[15]=a[3]*d+a[7]*e+a[11]*b+a[15],a;g=a[0];f=a[1];h=a[2];i=a[3];j=a[4];k=a[5];l=a[6];n=a[7];o=a[8];m=a[9];p=a[10];r=a[11];c[0]=g;c[1]=f;c[2]=h;c[3]=i;c[4]=j;c[5]=k;c[6]=l;c[7]=n;c[8]=o;c[9]=m;c[10]=p;c[11]=r;c[12]=g*d+j*e+o*b+a[12];c[13]=f*d+k*e+m*b+a[13];c[14]=h*d+l*e+p*b+a[14];c[15]=i*d+n*e+r*b+a[15];
return c};mat4.scale=function(a,b,c){var d=b[0],e=b[1],b=b[2];if(!c||a===c)return a[0]*=d,a[1]*=d,a[2]*=d,a[3]*=d,a[4]*=e,a[5]*=e,a[6]*=e,a[7]*=e,a[8]*=b,a[9]*=b,a[10]*=b,a[11]*=b,a;c[0]=a[0]*d;c[1]=a[1]*d;c[2]=a[2]*d;c[3]=a[3]*d;c[4]=a[4]*e;c[5]=a[5]*e;c[6]=a[6]*e;c[7]=a[7]*e;c[8]=a[8]*b;c[9]=a[9]*b;c[10]=a[10]*b;c[11]=a[11]*b;c[12]=a[12];c[13]=a[13];c[14]=a[14];c[15]=a[15];return c};
mat4.rotate=function(a,b,c,d){var e=c[0],g=c[1],c=c[2],f=Math.sqrt(e*e+g*g+c*c),h,i,j,k,l,n,o,m,p,r,s,A,B,t,u,v,w,x,y,z;if(!f)return null;f!==1&&(f=1/f,e*=f,g*=f,c*=f);h=Math.sin(b);i=Math.cos(b);j=1-i;b=a[0];f=a[1];k=a[2];l=a[3];n=a[4];o=a[5];m=a[6];p=a[7];r=a[8];s=a[9];A=a[10];B=a[11];t=e*e*j+i;u=g*e*j+c*h;v=c*e*j-g*h;w=e*g*j-c*h;x=g*g*j+i;y=c*g*j+e*h;z=e*c*j+g*h;e=g*c*j-e*h;g=c*c*j+i;d?a!==d&&(d[12]=a[12],d[13]=a[13],d[14]=a[14],d[15]=a[15]):d=a;d[0]=b*t+n*u+r*v;d[1]=f*t+o*u+s*v;d[2]=k*t+m*u+A*
v;d[3]=l*t+p*u+B*v;d[4]=b*w+n*x+r*y;d[5]=f*w+o*x+s*y;d[6]=k*w+m*x+A*y;d[7]=l*w+p*x+B*y;d[8]=b*z+n*e+r*g;d[9]=f*z+o*e+s*g;d[10]=k*z+m*e+A*g;d[11]=l*z+p*e+B*g;return d};mat4.rotateX=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[4],g=a[5],f=a[6],h=a[7],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[4]=e*b+i*d;c[5]=g*b+j*d;c[6]=f*b+k*d;c[7]=h*b+l*d;c[8]=e*-d+i*b;c[9]=g*-d+j*b;c[10]=f*-d+k*b;c[11]=h*-d+l*b;return c};
mat4.rotateY=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[4]=a[4],c[5]=a[5],c[6]=a[6],c[7]=a[7],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*-d;c[1]=g*b+j*-d;c[2]=f*b+k*-d;c[3]=h*b+l*-d;c[8]=e*d+i*b;c[9]=g*d+j*b;c[10]=f*d+k*b;c[11]=h*d+l*b;return c};
mat4.rotateZ=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[4],j=a[5],k=a[6],l=a[7];c?a!==c&&(c[8]=a[8],c[9]=a[9],c[10]=a[10],c[11]=a[11],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*d;c[1]=g*b+j*d;c[2]=f*b+k*d;c[3]=h*b+l*d;c[4]=e*-d+i*b;c[5]=g*-d+j*b;c[6]=f*-d+k*b;c[7]=h*-d+l*b;return c};
mat4.frustum=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=e*2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=e*2/i;f[6]=0;f[7]=0;f[8]=(b+a)/h;f[9]=(d+c)/i;f[10]=-(g+e)/j;f[11]=-1;f[12]=0;f[13]=0;f[14]=-(g*e*2)/j;f[15]=0;return f};mat4.perspective=function(a,b,c,d,e){a=c*Math.tan(a*Math.PI/360);b*=a;return mat4.frustum(-b,b,-a,a,c,d,e)};
mat4.ortho=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=2/i;f[6]=0;f[7]=0;f[8]=0;f[9]=0;f[10]=-2/j;f[11]=0;f[12]=-(a+b)/h;f[13]=-(d+c)/i;f[14]=-(g+e)/j;f[15]=1;return f};
mat4.lookAt=function(a,b,c,d){d||(d=mat4.create());var e,g,f,h,i,j,k,l,n=a[0],o=a[1],a=a[2];g=c[0];f=c[1];e=c[2];c=b[1];j=b[2];if(n===b[0]&&o===c&&a===j)return mat4.identity(d);c=n-b[0];j=o-b[1];k=a-b[2];l=1/Math.sqrt(c*c+j*j+k*k);c*=l;j*=l;k*=l;b=f*k-e*j;e=e*c-g*k;g=g*j-f*c;(l=Math.sqrt(b*b+e*e+g*g))?(l=1/l,b*=l,e*=l,g*=l):g=e=b=0;f=j*g-k*e;h=k*b-c*g;i=c*e-j*b;(l=Math.sqrt(f*f+h*h+i*i))?(l=1/l,f*=l,h*=l,i*=l):i=h=f=0;d[0]=b;d[1]=f;d[2]=c;d[3]=0;d[4]=e;d[5]=h;d[6]=j;d[7]=0;d[8]=g;d[9]=i;d[10]=k;d[11]=
0;d[12]=-(b*n+e*o+g*a);d[13]=-(f*n+h*o+i*a);d[14]=-(c*n+j*o+k*a);d[15]=1;return d};mat4.fromRotationTranslation=function(a,b,c){c||(c=mat4.create());var d=a[0],e=a[1],g=a[2],f=a[3],h=d+d,i=e+e,j=g+g,a=d*h,k=d*i;d*=j;var l=e*i;e*=j;g*=j;h*=f;i*=f;f*=j;c[0]=1-(l+g);c[1]=k+f;c[2]=d-i;c[3]=0;c[4]=k-f;c[5]=1-(a+g);c[6]=e+h;c[7]=0;c[8]=d+i;c[9]=e-h;c[10]=1-(a+l);c[11]=0;c[12]=b[0];c[13]=b[1];c[14]=b[2];c[15]=1;return c};
mat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+"]"};quat4.create=function(a){var b=new MatrixArray(4);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3]);return b};quat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return b};
quat4.calculateW=function(a,b){var c=a[0],d=a[1],e=a[2];if(!b||a===b)return a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a;b[0]=c;b[1]=d;b[2]=e;b[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e));return b};quat4.inverse=function(a,b){if(!b||a===b)return a[0]*=-1,a[1]*=-1,a[2]*=-1,a;b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=a[3];return b};quat4.length=function(a){var b=a[0],c=a[1],d=a[2],a=a[3];return Math.sqrt(b*b+c*c+d*d+a*a)};
quat4.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=Math.sqrt(c*c+d*d+e*e+g*g);if(f===0)return b[0]=0,b[1]=0,b[2]=0,b[3]=0,b;f=1/f;b[0]=c*f;b[1]=d*f;b[2]=e*f;b[3]=g*f;return b};quat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],a=a[3],f=b[0],h=b[1],i=b[2],b=b[3];c[0]=d*b+a*f+e*i-g*h;c[1]=e*b+a*h+g*f-d*i;c[2]=g*b+a*i+d*h-e*f;c[3]=a*b-d*f-e*h-g*i;return c};
quat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=a[0],f=a[1],h=a[2],a=a[3],i=a*d+f*g-h*e,j=a*e+h*d-b*g,k=a*g+b*e-f*d,d=-b*d-f*e-h*g;c[0]=i*a+d*-b+j*-h-k*-f;c[1]=j*a+d*-f+k*-b-i*-h;c[2]=k*a+d*-h+i*-f-j*-b;return c};quat4.toMat3=function(a,b){b||(b=mat3.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=k-g;b[4]=1-(j+e);b[5]=d+f;b[6]=c+h;b[7]=d-f;b[8]=1-(j+l);return b};
quat4.toMat4=function(a,b){b||(b=mat4.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=0;b[4]=k-g;b[5]=1-(j+e);b[6]=d+f;b[7]=0;b[8]=c+h;b[9]=d-f;b[10]=1-(j+l);b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
quat4.slerp=function(a,b,c,d){d||(d=a);var e=a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3],g,f;if(Math.abs(e)>=1)return d!==a&&(d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=a[3]),d;g=Math.acos(e);f=Math.sqrt(1-e*e);if(Math.abs(f)<0.001)return d[0]=a[0]*0.5+b[0]*0.5,d[1]=a[1]*0.5+b[1]*0.5,d[2]=a[2]*0.5+b[2]*0.5,d[3]=a[3]*0.5+b[3]*0.5,d;e=Math.sin((1-c)*g)/f;c=Math.sin(c*g)/f;d[0]=a[0]*e+b[0]*c;d[1]=a[1]*e+b[1]*c;d[2]=a[2]*e+b[2]*c;d[3]=a[3]*e+b[3]*c;return d};
quat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"]"};
(function()
{
	var MAX_VERTICES = 8000;						// equates to 2500 objects being drawn
	var MAX_INDICES = (MAX_VERTICES / 2) * 3;		// 6 indices for every 4 vertices
	var MAX_POINTS = 8000;
	var MULTI_BUFFERS = 4;							// cycle 4 buffers to try and avoid blocking
	var BATCH_NULL = 0;
	var BATCH_QUAD = 1;
	var BATCH_SETTEXTURE = 2;
	var BATCH_SETOPACITY = 3;
	var BATCH_SETBLEND = 4;
	var BATCH_UPDATEMODELVIEW = 5;
	var BATCH_RENDERTOTEXTURE = 6;
	var BATCH_CLEAR = 7;
	var BATCH_POINTS = 8;
	var BATCH_SETPROGRAM = 9;
	var BATCH_SETPROGRAMPARAMETERS = 10;
	var BATCH_SETTEXTURE1 = 11;
	function GLWrap_(gl, isMobile)
	{
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.width = 0;		// not yet known, wait for call to setSize()
		this.height = 0;
		this.cam = vec3.create([0, 0, 100]);			// camera position
		this.look = vec3.create([0, 0, 0]);				// lookat position
		this.up = vec3.create([0, 1, 0]);				// up vector
		this.worldScale = vec3.create([1, 1, 1]);		// world scaling factor
		this.matP = mat4.create();						// perspective matrix
		this.matMV = mat4.create();						// model view matrix
		this.lastMV = mat4.create();
		this.currentMV = mat4.create();
		this.gl = gl;
		this.initState();
	};
	GLWrap_.prototype.initState = function ()
	{
		var gl = this.gl;
		var i, len;
		this.lastOpacity = 1;
		this.lastTexture0 = null;			// last bound to TEXTURE0
		this.lastTexture1 = null;			// last bound to TEXTURE1
		this.currentOpacity = 1;
		gl.clearColor(0, 0, 0, 0);
		gl.clear(gl.COLOR_BUFFER_BIT);
		gl.enable(gl.BLEND);
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
		gl.disable(gl.CULL_FACE);
		gl.disable(gl.DEPTH_TEST);
		this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);
		this.lastSrcBlend = gl.ONE;
		this.lastDestBlend = gl.ONE_MINUS_SRC_ALPHA;
		this.pointBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
		this.vertexBuffers = new Array(MULTI_BUFFERS);
		this.texcoordBuffers = new Array(MULTI_BUFFERS);
		for (i = 0; i < MULTI_BUFFERS; i++)
		{
			this.vertexBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[i]);
			this.texcoordBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[i]);
		}
		this.curBuffer = 0;
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
		this.vertexData = new Float32Array(MAX_VERTICES * 2);
		this.texcoordData = new Float32Array(MAX_VERTICES * 2);
		this.pointData = new Float32Array(MAX_POINTS * 4);
		var indexData = new Uint16Array(MAX_INDICES);
		i = 0, len = MAX_INDICES;
		var fv = 0;
		while (i < len)
		{
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 1;	// top right
			indexData[i++] = fv + 2;	// bottom right (first tri)
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 2;	// bottom right
			indexData[i++] = fv + 3;	// bottom left
			fv += 4;
		}
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexData, gl.STATIC_DRAW);
		this.vertexPtr = 0;
		this.pointPtr = 0;
		var fsSource, vsSource;
		this.shaderPrograms = [];
		fsSource = [
			"varying mediump vec2 vTex;",
			"uniform lowp float opacity;",
			"uniform lowp sampler2D samplerFront;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, vTex);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		vsSource = [
			"attribute highp vec2 aPos;",
			"attribute mediump vec2 aTex;",
			"varying mediump vec2 vTex;",
			"uniform highp mat4 matP;",
			"uniform highp mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	vTex = aTex;",
			"}"
		].join("\n");
		var shaderProg = this.createShaderProgram({src: fsSource}, vsSource, "<default>");
;
		this.shaderPrograms.push(shaderProg);		// Default shader is always shader 0
		fsSource = [
			"uniform mediump sampler2D samplerFront;",
			"varying lowp float opacity;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, gl_PointCoord);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		var pointVsSource = [
			"attribute vec4 aPos;",
			"varying float opacity;",
			"uniform mat4 matP;",
			"uniform mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	gl_PointSize = aPos.z;",
			"	opacity = aPos.w;",
			"}"
		].join("\n");
		shaderProg = this.createShaderProgram({src: fsSource}, pointVsSource, "<point>");
;
		this.shaderPrograms.push(shaderProg);		// Point shader is always shader 1
		for (var shader_name in cr.shaders)
		{
			if (cr.shaders.hasOwnProperty(shader_name))
				this.shaderPrograms.push(this.createShaderProgram(cr.shaders[shader_name], vsSource, shader_name));
		}
		gl.activeTexture(gl.TEXTURE0);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.batch = [];
		this.batchPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.lastProgram = -1;				// start -1 so first switchProgram can do work
		this.currentProgram = -1;			// current program during batch execution
		this.currentShader = null;
		this.fbo = gl.createFramebuffer();
		this.renderToTex = null;
		this.tmpVec3 = vec3.create([0, 0, 0]);
;
;
		var pointsizes = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
		this.minPointSize = pointsizes[0];
		this.maxPointSize = pointsizes[1];
;
		this.switchProgram(0);
		cr.seal(this);
	};
	function GLShaderProgram(gl, shaderProgram, name)
	{
		this.gl = gl;
		this.shaderProgram = shaderProgram;
		this.name = name;
		this.locAPos = gl.getAttribLocation(shaderProgram, "aPos");
		this.locATex = gl.getAttribLocation(shaderProgram, "aTex");
		this.locMatP = gl.getUniformLocation(shaderProgram, "matP");
		this.locMatMV = gl.getUniformLocation(shaderProgram, "matMV");
		this.locOpacity = gl.getUniformLocation(shaderProgram, "opacity");
		this.locSamplerFront = gl.getUniformLocation(shaderProgram, "samplerFront");
		this.locSamplerBack = gl.getUniformLocation(shaderProgram, "samplerBack");
		this.locDestStart = gl.getUniformLocation(shaderProgram, "destStart");
		this.locDestEnd = gl.getUniformLocation(shaderProgram, "destEnd");
		this.locSeconds = gl.getUniformLocation(shaderProgram, "seconds");
		this.locPixelWidth = gl.getUniformLocation(shaderProgram, "pixelWidth");
		this.locPixelHeight = gl.getUniformLocation(shaderProgram, "pixelHeight");
		this.locLayerScale = gl.getUniformLocation(shaderProgram, "layerScale");
		if (this.locOpacity)
			gl.uniform1f(this.locOpacity, 1);
		if (this.locSamplerFront)
			gl.uniform1i(this.locSamplerFront, 0);
		if (this.locSamplerBack)
			gl.uniform1i(this.locSamplerBack, 1);
		if (this.locDestStart)
			gl.uniform2f(this.locDestStart, 0.0, 0.0);
		if (this.locDestEnd)
			gl.uniform2f(this.locDestEnd, 1.0, 1.0);
		this.hasCurrentMatMV = false;		// matMV needs updating
	};
	GLWrap_.prototype.createShaderProgram = function(shaderEntry, vsSource, name)
	{
		var gl = this.gl;
		var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
		gl.shaderSource(fragmentShader, shaderEntry.src);
		gl.compileShader(fragmentShader);
		if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			return null;
		}
		var vertexShader = gl.createShader(gl.VERTEX_SHADER);
		gl.shaderSource(vertexShader, vsSource);
		gl.compileShader(vertexShader);
		if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			return null;
		}
		var shaderProgram = gl.createProgram();
		gl.attachShader(shaderProgram, fragmentShader);
		gl.attachShader(shaderProgram, vertexShader);
		gl.linkProgram(shaderProgram);
		if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			gl.deleteProgram(shaderProgram);
			return null;
		}
		gl.useProgram(shaderProgram);
;
		gl.deleteShader(fragmentShader);
		gl.deleteShader(vertexShader);
		var ret = new GLShaderProgram(gl, shaderProgram, name);
		ret.extendBoxHorizontal = shaderEntry.extendBoxHorizontal || 0;
		ret.extendBoxVertical = shaderEntry.extendBoxVertical || 0;
		ret.crossSampling = !!shaderEntry.crossSampling;
		ret.animated = !!shaderEntry.animated;
		ret.parameters = shaderEntry.parameters || [];
		var i, len;
		for (i = 0, len = ret.parameters.length; i < len; i++)
		{
			ret.parameters[i][1] = gl.getUniformLocation(shaderProgram, ret.parameters[i][0]);
			gl.uniform1f(ret.parameters[i][1], 0);
		}
		cr.seal(ret);
		return ret;
	};
	GLWrap_.prototype.getShaderIndex = function(name_)
	{
		var i, len;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			if (this.shaderPrograms[i].name === name_)
				return i;
		}
		return -1;
	};
	GLWrap_.prototype.project = function (x, y, out)
	{
		var mv = this.matMV;
		var proj = this.matP;
		var fTempo = [0, 0, 0, 0, 0, 0, 0, 0];
		fTempo[0] = mv[0]*x+mv[4]*y+mv[12];
		fTempo[1] = mv[1]*x+mv[5]*y+mv[13];
		fTempo[2] = mv[2]*x+mv[6]*y+mv[14];
		fTempo[3] = mv[3]*x+mv[7]*y+mv[15];
		fTempo[4] = proj[0]*fTempo[0]+proj[4]*fTempo[1]+proj[8]*fTempo[2]+proj[12]*fTempo[3];
		fTempo[5] = proj[1]*fTempo[0]+proj[5]*fTempo[1]+proj[9]*fTempo[2]+proj[13]*fTempo[3];
		fTempo[6] = proj[2]*fTempo[0]+proj[6]*fTempo[1]+proj[10]*fTempo[2]+proj[14]*fTempo[3];
		fTempo[7] = -fTempo[2];
		if(fTempo[7]===0.0)	//The w value
			return;
		fTempo[7]=1.0/fTempo[7];
		fTempo[4]*=fTempo[7];
		fTempo[5]*=fTempo[7];
		fTempo[6]*=fTempo[7];
		out[0]=(fTempo[4]*0.5+0.5)*this.width;
		out[1]=(fTempo[5]*0.5+0.5)*this.height;
	};
	GLWrap_.prototype.setSize = function(w, h, force)
	{
		if (this.width === w && this.height === h && !force)
			return;
		this.endBatch();
		this.width = w;
		this.height = h;
		this.gl.viewport(0, 0, w, h);
		mat4.perspective(45, w / h, 1, 1000, this.matP);
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		var tl = [0, 0];
		var br = [0, 0];
		this.project(0, 0, tl);
		this.project(1, 1, br);
		this.worldScale[0] = 1 / (br[0] - tl[0]);
		this.worldScale[1] = -1 / (br[1] - tl[1]);
		var i, len, s;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			s = this.shaderPrograms[i];
			s.hasCurrentMatMV = false;
			if (s.locMatP)
			{
				this.gl.useProgram(s.shaderProgram);
				this.gl.uniformMatrix4fv(s.locMatP, false, this.matP);
			}
		}
		this.gl.useProgram(this.shaderPrograms[this.lastProgram].shaderProgram);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE1);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.gl.activeTexture(this.gl.TEXTURE0);
		this.lastTexture0 = null;
		this.lastTexture1 = null;
	};
	GLWrap_.prototype.resetModelView = function ()
	{
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		mat4.scale(this.matMV, this.worldScale);
	};
	GLWrap_.prototype.translate = function (x, y)
	{
		if (x === 0 && y === 0)
			return;
		this.tmpVec3[0] = x;// * this.worldScale[0];
		this.tmpVec3[1] = y;// * this.worldScale[1];
		this.tmpVec3[2] = 0;
		mat4.translate(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.scale = function (x, y)
	{
		if (x === 1 && y === 1)
			return;
		this.tmpVec3[0] = x;
		this.tmpVec3[1] = y;
		this.tmpVec3[2] = 1;
		mat4.scale(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.rotateZ = function (a)
	{
		if (a === 0)
			return;
		mat4.rotateZ(this.matMV, a);
	};
	GLWrap_.prototype.updateModelView = function()
	{
		var anydiff = false;
		for (var i = 0; i < 16; i++)
		{
			if (this.lastMV[i] !== this.matMV[i])
			{
				anydiff = true;
				break;
			}
		}
		if (!anydiff)
			return;
		var b = this.pushBatch();
		b.type = BATCH_UPDATEMODELVIEW;
		if (b.mat4param)
			mat4.set(this.matMV, b.mat4param);
		else
			b.mat4param = mat4.create(this.matMV);
		mat4.set(this.matMV, this.lastMV);
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	/*
	var debugBatch = false;
	jQuery(document).mousedown(
		function(info) {
			if (info.which === 2)
				debugBatch = true;
		}
	);
	*/
	function GLBatchJob(type_, glwrap_)
	{
		this.type = type_;
		this.glwrap = glwrap_;
		this.gl = glwrap_.gl;
		this.opacityParam = 0;		// for setOpacity()
		this.startIndex = 0;		// for quad()
		this.indexCount = 0;		// "
		this.texParam = null;		// for setTexture()
		this.mat4param = null;		// for updateModelView()
		this.shaderParams = [];		// for user parameters
		cr.seal(this);
	};
	GLBatchJob.prototype.doSetTexture = function ()
	{
		this.gl.bindTexture(this.gl.TEXTURE_2D, this.texParam);
	};
	GLBatchJob.prototype.doSetTexture1 = function ()
	{
		var gl = this.gl;
		gl.activeTexture(gl.TEXTURE1);
		gl.bindTexture(gl.TEXTURE_2D, this.texParam);
		gl.activeTexture(gl.TEXTURE0);
	};
	GLBatchJob.prototype.doSetOpacity = function ()
	{
		var o = this.opacityParam;
		var glwrap = this.glwrap;
		glwrap.currentOpacity = o;
		var curProg = glwrap.currentShader;
		if (curProg.locOpacity)
			this.gl.uniform1f(curProg.locOpacity, o);
	};
	GLBatchJob.prototype.doQuad = function ()
	{
		this.gl.drawElements(this.gl.TRIANGLES, this.indexCount, this.gl.UNSIGNED_SHORT, this.startIndex * 2);
	};
	GLBatchJob.prototype.doSetBlend = function ()
	{
		this.gl.blendFunc(this.startIndex, this.indexCount);
	};
	GLBatchJob.prototype.doUpdateModelView = function ()
	{
		var i, len, s, shaderPrograms = this.glwrap.shaderPrograms, currentProgram = this.glwrap.currentProgram;
		for (i = 0, len = shaderPrograms.length; i < len; i++)
		{
			s = shaderPrograms[i];
			if (i === currentProgram && s.locMatMV)
			{
				this.gl.uniformMatrix4fv(s.locMatMV, false, this.mat4param);
				s.hasCurrentMatMV = true;
			}
			else
				s.hasCurrentMatMV = false;
		}
		mat4.set(this.mat4param, this.glwrap.currentMV);
	};
	GLBatchJob.prototype.doRenderToTexture = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		if (this.texParam)
		{
			if (glwrap.lastTexture1 === this.texParam)
			{
				gl.activeTexture(gl.TEXTURE1);
				gl.bindTexture(gl.TEXTURE_2D, null);
				glwrap.lastTexture1 = null;
				gl.activeTexture(gl.TEXTURE0);
			}
			gl.bindFramebuffer(gl.FRAMEBUFFER, glwrap.fbo);
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texParam, 0);
		}
		else
		{
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0);
			gl.bindFramebuffer(gl.FRAMEBUFFER, null);
		}
	};
	GLBatchJob.prototype.doClear = function ()
	{
		var gl = this.gl;
		if (this.startIndex === 0)		// clear whole surface
		{
			gl.clearColor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clear(gl.COLOR_BUFFER_BIT);
		}
		else							// clear rectangle
		{
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clearColor(0, 0, 0, 0);
			gl.clear(this.gl.COLOR_BUFFER_BIT);
			gl.disable(gl.SCISSOR_TEST);
		}
	};
	GLBatchJob.prototype.doPoints = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[1];
		gl.useProgram(s.shaderProgram);
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		gl.enableVertexAttribArray(s.locAPos);
		gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.pointBuffer);
		gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		gl.drawArrays(gl.POINTS, this.startIndex / 4, this.indexCount);
		s = glwrap.currentShader;
		gl.useProgram(s.shaderProgram);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	};
	GLBatchJob.prototype.doSetProgram = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[this.startIndex];		// recycled param to save memory
		glwrap.currentProgram = this.startIndex;			// current batch program
		glwrap.currentShader = s;
		gl.useProgram(s.shaderProgram);						// switch to
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		if (s.locOpacity)
			gl.uniform1f(s.locOpacity, glwrap.currentOpacity);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	}
	GLBatchJob.prototype.doSetProgramParameters = function ()
	{
		var i, len, s = this.glwrap.currentShader;
		var gl = this.gl;
		if (s.locSamplerBack && this.glwrap.lastTexture1 !== this.texParam)
		{
			gl.activeTexture(gl.TEXTURE1);
			gl.bindTexture(gl.TEXTURE_2D, this.texParam);
			this.glwrap.lastTexture1 = this.texParam;
			gl.activeTexture(gl.TEXTURE0);
		}
		if (s.locPixelWidth)
			gl.uniform1f(s.locPixelWidth, this.mat4param[0]);
		if (s.locPixelHeight)
			gl.uniform1f(s.locPixelHeight, this.mat4param[1]);
		if (s.locDestStart)
			gl.uniform2f(s.locDestStart, this.mat4param[2], this.mat4param[3]);
		if (s.locDestEnd)
			gl.uniform2f(s.locDestEnd, this.mat4param[4], this.mat4param[5]);
		if (s.locLayerScale)
			gl.uniform1f(s.locLayerScale, this.mat4param[6]);
		if (s.locSeconds)
			gl.uniform1f(s.locSeconds, cr.performance_now() / 1000.0);
		if (s.parameters.length)
		{
			for (i = 0, len = s.parameters.length; i < len; i++)
			{
				gl.uniform1f(s.parameters[i][1], this.shaderParams[i]);
			}
		}
	};
	GLWrap_.prototype.pushBatch = function ()
	{
		if (this.batchPtr === this.batch.length)
			this.batch.push(new GLBatchJob(BATCH_NULL, this));
		return this.batch[this.batchPtr++];
	};
	GLWrap_.prototype.endBatch = function ()
	{
		if (this.batchPtr === 0)
			return;
		if (this.gl.isContextLost())
			return;
		var gl = this.gl;
		if (this.pointPtr > 0)
		{
			gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
			gl.bufferData(gl.ARRAY_BUFFER, this.pointData.subarray(0, this.pointPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name === "<point>")
				gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		}
		if (this.vertexPtr > 0)
		{
			var s = this.currentShader;
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.vertexData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.texcoordData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locATex >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
		var i, len, b;
		for (i = 0, len = this.batchPtr; i < len; i++)
		{
			b = this.batch[i];
			switch (b.type) {
			case BATCH_QUAD:
				b.doQuad();
				break;
			case BATCH_SETTEXTURE:
				b.doSetTexture();
				break;
			case BATCH_SETOPACITY:
				b.doSetOpacity();
				break;
			case BATCH_SETBLEND:
				b.doSetBlend();
				break;
			case BATCH_UPDATEMODELVIEW:
				b.doUpdateModelView();
				break;
			case BATCH_RENDERTOTEXTURE:
				b.doRenderToTexture();
				break;
			case BATCH_CLEAR:
				b.doClear();
				break;
			case BATCH_POINTS:
				b.doPoints();
				break;
			case BATCH_SETPROGRAM:
				b.doSetProgram();
				break;
			case BATCH_SETPROGRAMPARAMETERS:
				b.doSetProgramParameters();
				break;
			case BATCH_SETTEXTURE1:
				b.doSetTexture1();
				break;
			}
		}
		this.batchPtr = 0;
		this.vertexPtr = 0;
		this.pointPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.curBuffer++;
		if (this.curBuffer >= MULTI_BUFFERS)
			this.curBuffer = 0;
	};
	GLWrap_.prototype.setOpacity = function (op)
	{
		if (op === this.lastOpacity)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETOPACITY;
		b.opacityParam = op;
		this.lastOpacity = op;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setTexture = function (tex)
	{
		if (tex === this.lastTexture0)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_SETTEXTURE;
		b.texParam = tex;
		this.lastTexture0 = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setBlend = function (s, d)
	{
		if (s === this.lastSrcBlend && d === this.lastDestBlend)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETBLEND;
		b.startIndex = s;		// recycle params to save memory
		b.indexCount = d;
		this.lastSrcBlend = s;
		this.lastDestBlend = d;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setAlphaBlend = function ()
	{
		this.setBlend(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	var LAST_VERTEX = MAX_VERTICES * 2 - 8;
	GLWrap_.prototype.quad = function(tlx, tly, trx, try_, brx, bry, blx, bly)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = 0;
		vd[v] = tly;
		td[v++] = 0;
		vd[v] = trx;
		td[v++] = 1;
		vd[v] = try_;
		td[v++] = 0;
		vd[v] = brx;
		td[v++] = 1;
		vd[v] = bry;
		td[v++] = 1;
		vd[v] = blx;
		td[v++] = 0;
		vd[v] = bly;
		td[v++] = 1;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTex = function(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		var rc_left = rcTex.left;
		var rc_top = rcTex.top;
		var rc_right = rcTex.right;
		var rc_bottom = rcTex.bottom;
		vd[v] = tlx;
		td[v++] = rc_left;
		vd[v] = tly;
		td[v++] = rc_top;
		vd[v] = trx;
		td[v++] = rc_right;
		vd[v] = try_;
		td[v++] = rc_top;
		vd[v] = brx;
		td[v++] = rc_right;
		vd[v] = bry;
		td[v++] = rc_bottom;
		vd[v] = blx;
		td[v++] = rc_left;
		vd[v] = bly;
		td[v++] = rc_bottom;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTexUV = function(tlx, tly, trx, try_, brx, bry, blx, bly, tlu, tlv, tru, trv, bru, brv, blu, blv)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = tlu;
		vd[v] = tly;
		td[v++] = tlv;
		vd[v] = trx;
		td[v++] = tru;
		vd[v] = try_;
		td[v++] = trv;
		vd[v] = brx;
		td[v++] = bru;
		vd[v] = bry;
		td[v++] = brv;
		vd[v] = blx;
		td[v++] = blu;
		vd[v] = bly;
		td[v++] = blv;
		this.vertexPtr = v;
	};
	var LAST_POINT = MAX_POINTS - 4;
	GLWrap_.prototype.point = function(x_, y_, size_, opacity_)
	{
		if (this.pointPtr >= LAST_POINT)
			this.endBatch();
		var p = this.pointPtr;			// point cursor
		var pd = this.pointData;		// point data array
		if (this.hasPointBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount++;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_POINTS;
			b.startIndex = p;
			b.indexCount = 1;
			this.hasPointBatchTop = true;
			this.hasQuadBatchTop = false;
		}
		pd[p++] = x_;
		pd[p++] = y_;
		pd[p++] = size_;
		pd[p++] = opacity_;
		this.pointPtr = p;
	};
	GLWrap_.prototype.switchProgram = function (progIndex)
	{
		if (this.lastProgram === progIndex)
			return;			// no change
		var shaderProg = this.shaderPrograms[progIndex];
		if (!shaderProg)
		{
			if (this.lastProgram === 0)
				return;								// already on default shader
			progIndex = 0;
			shaderProg = this.shaderPrograms[0];
		}
		var b = this.pushBatch();
		b.type = BATCH_SETPROGRAM;
		b.startIndex = progIndex;
		this.lastProgram = progIndex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.programUsesDest = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd);
	};
	GLWrap_.prototype.programUsesCrossSampling = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd || s.crossSampling);
	};
	GLWrap_.prototype.programExtendsBox = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return s.extendBoxHorizontal !== 0 || s.extendBoxVertical !== 0;
	};
	GLWrap_.prototype.getProgramBoxExtendHorizontal = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxHorizontal;
	};
	GLWrap_.prototype.getProgramBoxExtendVertical = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxVertical;
	};
	GLWrap_.prototype.getProgramParameterType = function (progIndex, paramIndex)
	{
		return this.shaderPrograms[progIndex].parameters[paramIndex][2];
	};
	GLWrap_.prototype.programIsAnimated = function (progIndex)
	{
		return this.shaderPrograms[progIndex].animated;
	};
	GLWrap_.prototype.setProgramParameters = function (backTex, pixelWidth, pixelHeight, destStartX, destStartY, destEndX, destEndY, layerScale, params)
	{
		var i, len, s = this.shaderPrograms[this.lastProgram];
		if (s.locPixelWidth || s.locPixelHeight || s.locSeconds || s.locSamplerBack ||
			s.locDestStart || s.locDestEnd || s.locLayerScale || params.length)
		{
			var b = this.pushBatch();
			b.type = BATCH_SETPROGRAMPARAMETERS;
			if (b.mat4param)
				mat4.set(this.matMV, b.mat4param);
			else
				b.mat4param = mat4.create();
			b.mat4param[0] = pixelWidth;
			b.mat4param[1] = pixelHeight;
			b.mat4param[2] = destStartX;
			b.mat4param[3] = destStartY;
			b.mat4param[4] = destEndX;
			b.mat4param[5] = destEndY;
			b.mat4param[6] = layerScale;
			if (s.locSamplerBack)
			{
;
				b.texParam = backTex;
			}
			else
				b.texParam = null;
			if (params.length)
			{
				b.shaderParams.length = params.length;
				for (i = 0, len = params.length; i < len; i++)
					b.shaderParams[i] = params[i];
			}
			this.hasQuadBatchTop = false;
			this.hasPointBatchTop = false;
		}
	};
	GLWrap_.prototype.clear = function (r, g, b_, a)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 0;					// clear all mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = r;
		b.mat4param[1] = g;
		b.mat4param[2] = b_;
		b.mat4param[3] = a;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.clearRect = function (x, y, w, h)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 1;					// clear rect mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = x;
		b.mat4param[1] = y;
		b.mat4param[2] = w;
		b.mat4param[3] = h;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.present = function ()
	{
		this.endBatch();
		this.gl.flush();
		/*
		if (debugBatch)
		{
;
			debugBatch = false;
		}
		*/
	};
	function nextHighestPowerOfTwo(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	var all_textures = [];
	var textures_by_src = {};
	var BF_RGBA8 = 0;
	var BF_RGB8 = 1;
	var BF_RGBA4 = 2;
	var BF_RGB5_A1 = 3;
	var BF_RGB565 = 4;
	GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat, tiletype)
	{
		tiling = !!tiling;
		linearsampling = !!linearsampling;
		var tex_key = img.src + "," + tiling + "," + linearsampling + (tiling ? ("," + tiletype) : "");
		var webGL_texture = null;
		if (typeof img.src !== "undefined" && textures_by_src.hasOwnProperty(tex_key))
		{
			webGL_texture = textures_by_src[tex_key];
			webGL_texture.c2refcount++;
			return webGL_texture;
		}
		this.endBatch();
;
		var gl = this.gl;
		var isPOT = (cr.isPOT(img.width) && cr.isPOT(img.height));
		webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		var internalformat = gl.RGBA;
		var format = gl.RGBA;
		var type = gl.UNSIGNED_BYTE;
		if (pixelformat && !this.isIE)
		{
			switch (pixelformat) {
			case BF_RGB8:
				internalformat = gl.RGB;
				format = gl.RGB;
				break;
			case BF_RGBA4:
				type = gl.UNSIGNED_SHORT_4_4_4_4;
				break;
			case BF_RGB5_A1:
				type = gl.UNSIGNED_SHORT_5_5_5_1;
				break;
			case BF_RGB565:
				internalformat = gl.RGB;
				format = gl.RGB;
				type = gl.UNSIGNED_SHORT_5_6_5;
				break;
			}
		}
		if (!isPOT && tiling)
		{
			var canvas = document.createElement("canvas");
			canvas.width = cr.nextHighestPowerOfTwo(img.width);
			canvas.height = cr.nextHighestPowerOfTwo(img.height);
			var ctx = canvas.getContext("2d");
			ctx.drawImage(img,
						  0, 0, img.width, img.height,
						  0, 0, canvas.width, canvas.height);
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, canvas);
		}
		else
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, img);
		if (tiling)
		{
			if (tiletype === "repeat-x")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
			}
			else if (tiletype === "repeat-y")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
			else
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		if (linearsampling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
			if (isPOT)
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);
				gl.generateMipmap(gl.TEXTURE_2D);
			}
			else
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
		}
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = img.width;
		webGL_texture.c2height = img.height;
		webGL_texture.c2refcount = 1;
		webGL_texture.c2texkey = tex_key;
		all_textures.push(webGL_texture);
		textures_by_src[tex_key] = webGL_texture;
		return webGL_texture;
	};
	GLWrap_.prototype.createEmptyTexture = function (w, h, linearsampling, _16bit, tiling)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		var webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, null);
		if (tiling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
		webGL_texture.c2width = w;
		webGL_texture.c2height = h;
		all_textures.push(webGL_texture);
		return webGL_texture;
	};
	GLWrap_.prototype.videoToTexture = function (video_, texture_, _16bit)
	{
		this.endBatch();
		var gl = this.gl;
		if (this.isIE)
			_16bit = false;
		gl.bindTexture(gl.TEXTURE_2D, texture_);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, video_);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture0 = null;
	};
	GLWrap_.prototype.deleteTexture = function (tex)
	{
		if (!tex)
			return;
		if (typeof tex.c2refcount !== "undefined" && tex.c2refcount > 1)
		{
			tex.c2refcount--;
			return;
		}
		this.endBatch();
		if (tex === this.lastTexture0)
		{
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.lastTexture0 = null;
		}
		if (tex === this.lastTexture1)
		{
			this.gl.activeTexture(this.gl.TEXTURE1);
			this.gl.bindTexture(this.gl.TEXTURE_2D, null);
			this.gl.activeTexture(this.gl.TEXTURE0);
			this.lastTexture1 = null;
		}
		cr.arrayFindRemove(all_textures, tex);
		if (typeof tex.c2texkey !== "undefined")
			delete textures_by_src[tex.c2texkey];
		this.gl.deleteTexture(tex);
	};
	GLWrap_.prototype.estimateVRAM = function ()
	{
		var total = this.width * this.height * 4 * 2;
		var i, len, t;
		for (i = 0, len = all_textures.length; i < len; i++)
		{
			t = all_textures[i];
			total += (t.c2width * t.c2height * 4);
		}
		return total;
	};
	GLWrap_.prototype.textureCount = function ()
	{
		return all_textures.length;
	};
	GLWrap_.prototype.setRenderingToTexture = function (tex)
	{
		if (tex === this.renderToTex)
			return;
;
		var b = this.pushBatch();
		b.type = BATCH_RENDERTOTEXTURE;
		b.texParam = tex;
		this.renderToTex = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	cr.GLWrap = GLWrap_;
}());
;
(function()
{
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isCrosswalk = /crosswalk/i.test(navigator.userAgent) || /xwalk/i.test(navigator.userAgent) || !!(typeof window["c2isCrosswalk"] !== "undefined" && window["c2isCrosswalk"]);
		this.isPhoneGap = (!this.isCrosswalk && (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined")));
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		this.isDomFree = this.isDirectCanvas || this.isCocoonJs;
		this.isTizen = /tizen/i.test(navigator.userAgent);
		this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen;		// tizen says "like Android"
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.isiPhone = /iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent);	// treat ipod as an iphone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad;
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		this.isAmazonWebApp = /amazonwebappplatform/i.test(navigator.userAgent);
		this.isFirefox = /firefox/i.test(navigator.userAgent);
		this.isSafari = !this.isChrome && /safari/i.test(navigator.userAgent);		// Chrome includes Safari in UA
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined" || /nodewebkit/i.test(navigator.userAgent));
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.isWindows8App = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.isWindowsPhone8 = !!(typeof window["c2isWindowsPhone8"] !== "undefined" && window["c2isWindowsPhone8"]);
		this.isBlackberry10 = !!(typeof window["c2isBlackberry10"] !== "undefined" && window["c2isBlackberry10"]);
		this.isAndroidStockBrowser = (this.isAndroid && !this.isChrome && !this.isFirefox && !this.isAmazonWebApp && !this.isDomFree);
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isCrosswalk || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isBlackberry10 || this.isTizen);
		if (!this.isMobile)
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet)/i.test(navigator.userAgent);
		if (typeof cr_is_preview !== "undefined" && !this.isNodeWebkit && (window.location.search === "?nw" || /nodewebkit/i.test(navigator.userAgent)))
		{
			this.isNodeWebkit = true;
		}
		this.isDebug = (typeof cr_is_preview !== "undefined" && window.location.search.indexOf("debug") > -1)
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.fullscreenOldMarginCss = "";
		this.firstInFullscreen = false;
		this.oldWidth = 0;		// for restoring non-fullscreen canvas after fullscreen
		this.oldHeight = 0;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		if (this.isNodeWebkit)
		{
			window.ondragover = function(e) { e.preventDefault(); return false; };
			window.ondrop = function(e) { e.preventDefault(); return false; };
			require("nw.gui")["App"]["clearCache"]();
		}
		this.width = canvas.width;
		this.height = canvas.height;
		this.draw_width = this.width;
		this.draw_height = this.height;
		this.cssWidth = this.width;
		this.cssHeight = this.height;
		this.lastWindowWidth = window.innerWidth;
		this.lastWindowHeight = window.innerHeight;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.all_local_vars = [];
		this.solidBehavior = null;
		this.jumpthruBehavior = null;
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = 0;
		this.timeout_id = 0;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.halfFramerateMode = false;
		this.lastRafTime = 0;		// time of last requestAnimationFrame call
		this.ranLastRaf = false;	// false if last requestAnimationFrame was skipped for half framerate mode
		this.had_a_click = false;
		this.isInUserInputEvent = false;
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.activeGroups = {};				// event group activation states
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.layout_canvas = null;
		this.layout_ctx = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		this.isRetina = (!this.isDomFree && this.useHighDpi && !this.isAndroidStockBrowser);
		this.devicePixelRatio = (this.isRetina ? (window["devicePixelRatio"] || window["webkitDevicePixelRatio"] || window["mozDevicePixelRatio"] || window["msDevicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		var alpha_canvas = this.alphaBackground && !(this.isNodeWebkit || this.isWindows8App || this.isWindowsPhone8);
		if (this.fullscreen_mode > 0)
			this["setSize"](window.innerWidth, window.innerHeight, true);
		try {
			if (this.enableWebGL && (this.isCocoonJs || !this.isDomFree))
			{
				attribs = {
					"alpha": alpha_canvas,
					"depth": false,
					"antialias": false,
					"failIfMajorPerformanceCaveat": true
				};
				this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
;
			if (!this.isDomFree)
			{
				this.overlay_canvas = document.createElement("canvas");
				jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
				this.overlay_canvas.oncontextmenu = function (e) { return false; };
				this.overlay_canvas.onselectstart = function (e) { return false; };
				this.overlay_canvas.width = this.cssWidth;
				this.overlay_canvas.height = this.cssHeight;
				jQuery(this.overlay_canvas).css({"width": this.cssWidth + "px",
												"height": this.cssHeight + "px"});
				this.positionOverlayCanvas();
				this.overlay_ctx = this.overlay_canvas.getContext("2d");
			}
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				console.log("[Construct 2] WebGL context lost");
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				console.log("[Construct 2] WebGL context restored");
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
					this.ctx["imageSmoothingEnabled"] = this.linearSampling;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = {
						"antialias": !!this.linearSampling,
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
				{
					attribs = {
						"alpha": alpha_canvas
					};
					this.ctx = canvas.getContext("2d", attribs);
				}
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(); };
		if (window != window.top && !this.isDomFree && !this.isWindows8App)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (this.isCocoonJs)
				console.log("[Construct 2] In preview-over-wifi via CocoonJS mode");
			if (window.location.search.indexOf("continuous") > -1)
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		if (this.fullscreen_mode === 0 && this.isRetina && this.devicePixelRatio > 1)
		{
			this["setSize"](this.original_width, this.original_height, true);
		}
		this.tryLockOrientation();
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h, force)
	{
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		if (this.lastWindowWidth === w && this.lastWindowHeight === h && !force)
			return;
		this.lastWindowWidth = w;
		this.lastWindowHeight = h;
		var mode = this.fullscreen_mode;
		var orig_aspect, cur_aspect;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (!isfullscreen && this.fullscreen_mode === 0 && !force)
			return;			// ignore size events when not fullscreen and not using a fullscreen-in-browser mode
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		if (mode >= 4)
		{
			orig_aspect = this.original_width / this.original_height;
			cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = neww / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = newh / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
			offx = Math.floor(offx);
			offy = Math.floor(offy);
			w = Math.floor(w);
			h = Math.floor(h);
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		if (mode < 2)
			this.aspect_scale = this.devicePixelRatio;
		if (this.isRetina && this.isiPad && this.devicePixelRatio > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		var multiplier = this.devicePixelRatio;
		this.cssWidth = w;
		this.cssHeight = h;
		this.width = Math.round(w * multiplier);
		this.height = Math.round(h * multiplier);
		this.redraw = true;
		if (this.wantFullscreenScalingQuality)
		{
			this.draw_width = this.width;
			this.draw_height = this.height;
			this.fullscreenScalingQuality = true;
		}
		else
		{
			if ((this.width < this.original_width && this.height < this.original_height) || mode === 1)
			{
				this.draw_width = this.width;
				this.draw_height = this.height;
				this.fullscreenScalingQuality = true;
			}
			else
			{
				this.draw_width = this.original_width;
				this.draw_height = this.original_height;
				this.fullscreenScalingQuality = false;
				/*var orig_aspect = this.original_width / this.original_height;
				var cur_aspect = this.width / this.height;
				if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
					this.aspect_scale = this.height / this.original_height;
				else
					this.aspect_scale = this.width / this.original_width;*/
				if (mode === 2)		// scale inner
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect < orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect > orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
				else if (mode === 3)
				{
					orig_aspect = this.original_width / this.original_height;
					cur_aspect = this.lastWindowWidth / this.lastWindowHeight;
					if (cur_aspect > orig_aspect)
						this.draw_width = this.draw_height * cur_aspect;
					else if (cur_aspect < orig_aspect)
						this.draw_height = this.draw_width / cur_aspect;
				}
			}
		}
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": w + "px",
										"height": h + "px",
										"margin-left": offx,
										"margin-top": offy});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": w + "px",
											"height": h + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = Math.round(w * multiplier);
			this.canvas.height = Math.round(h * multiplier);
			if (this.isRetina)
			{
				jQuery(this.canvas).css({"width": w + "px",
										"height": h + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = w;
			this.overlay_canvas.height = h;
			jQuery(this.overlay_canvas).css({"width": w + "px",
											"height": h + "px"});
		}
		if (this.glwrap)
		{
			this.glwrap.setSize(Math.round(w * multiplier), Math.round(h * multiplier));
		}
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = w;
			this.ctx.height = h;
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		this.tryLockOrientation();
	};
	Runtime.prototype.tryLockOrientation = function ()
	{
		if (!this.autoLockOrientation || this.orientations === 0)
			return;
		var orientation = "portrait";
		if (this.orientations === 2)
			orientation = "landscape";
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		if (this.isDomFree)
			return;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen);
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			cr.logexport("[Construct 2] Suspending");
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== 0 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== 0)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			cr.logexport("[Construct 2] Resuming");
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			this.logictime = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick();						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[11];	// 0 = off, 1 = crop, 2 = scale inner, 3 = scale outer, 4 = letterbox scale, 5 = integer letterbox scale
		this.fullscreen_mode_set = pm[11];
		this.original_width = pm[9];
		this.original_height = pm[10];
		this.parallax_x_origin = this.original_width / 2;
		this.parallax_y_origin = this.original_height / 2;
		if (this.isDomFree && (pm[11] >= 4 || pm[11] === 0))
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'");
			this.fullscreen_mode = 3;
			this.fullscreen_mode_set = 3;
		}
		this.uses_loader_layout = pm[17];
		this.loaderstyle = pm[18];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "loading-logo.png";
		}
		this.next_uid = pm[20];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.getInstanceByIID = cr.type_getInstanceByIID;
			type_inst.collision_grid = new cr.SparseGrid(this.original_width, this.original_height);
			type_inst.any_bbox_changed = true;
			type_inst.any_instance_parallaxed = false;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_types = [];						// types using this behavior
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
					if (cr.behaviors.solid && behavior_plugin instanceof cr.behaviors.solid)
						this.solidBehavior = behavior_plugin;
					if (cr.behaviors.jumpthru && behavior_plugin instanceof cr.behaviors.jumpthru)
						this.jumpthruBehavior = behavior_plugin;
				}
				if (behavior_plugin.my_types.indexOf(type_inst) === -1)
					behavior_plugin.my_types.push(type_inst);
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			type_inst.tile_poly_data = m[13];
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[14];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
				this.objectsByUid[instance.uid.toString()] = instance;
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[23].length; i < len; i++)
		{
			var containerdata = pm[23][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.files_subfolder = pm[7];
		this.pixel_rounding = pm[8];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[12];
		this.linearSampling = pm[13];
		this.alphaBackground = pm[14];
		this.versionstr = pm[15];
		this.useHighDpi = pm[16];
		this.orientations = pm[19];		// 0 = any, 1 = portrait, 2 = landscape
		this.autoLockOrientation = (this.orientations > 0);
		this.pauseOnBlur = pm[21];
		this.wantFullscreenScalingQuality = pm[22];		// false = low quality, true = high quality
		this.fullscreenScalingQuality = this.wantFullscreenScalingQuality;
		this.start_time = Date.now();
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	Runtime.prototype.areAllTexturesLoaded = function ()
	{
		var totalsize = 0;
		var completedsize = 0;
		var ret = true;
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			var filesize = this.wait_for_textures[i].cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if (this.wait_for_textures[i].complete || this.wait_for_textures[i]["loaded"])
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesLoaded())
			this.go_textures_done();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			if (ctx)
			{
				var overlay_width = this.width;
				var overlay_height = this.height;
				var multiplier = this.devicePixelRatio;
				if (this.overlay_canvas)
				{
					overlay_width = this.cssWidth;
					overlay_height = this.cssHeight;
					multiplier = 1;
				}
				if (this.loaderstyle !== 3 && ms_elapsed >= 500 && this.last_progress != this.progress)
				{
					ctx.clearRect(0, 0, overlay_width, overlay_height);
					var mx = overlay_width / 2;
					var my = overlay_height / 2;
					var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
					var hlw = 40 * multiplier;
					var hlh = 0;
					var logowidth = 80 * multiplier;
					var logoheight;
					if (haslogo)
					{
						logowidth = this.loaderlogo.width * multiplier;
						logoheight = this.loaderlogo.height * multiplier;
						hlw = logowidth / 2;
						hlh = logoheight / 2;
						ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh), logowidth, logoheight);
					}
					if (this.loaderstyle <= 1)
					{
						my += hlh + (haslogo ? 12 * multiplier : 0);
						mx -= hlw;
						mx = cr.floor(mx) + 0.5;
						my = cr.floor(my) + 0.5;
						ctx.fillStyle = "DodgerBlue";
						ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6 * multiplier);
						ctx.strokeStyle = "black";
						ctx.strokeRect(mx, my, logowidth, 6 * multiplier);
						ctx.strokeStyle = "white";
						ctx.strokeRect(mx - 1 * multiplier, my - 1 * multiplier, logowidth + 2 * multiplier, 8 * multiplier);
					}
					else if (this.loaderstyle === 2)
					{
						ctx.font = "12pt Arial";
						ctx.fillStyle = "#999";
						ctx.textBaseLine = "middle";
						var percent_text = Math.round(this.progress * 100) + "%";
						var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
						var text_width = text_dim ? text_dim.width : 0;
						ctx.fillText(percent_text, mx - (text_width / 2), my);
					}
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), 100);
		}
	};
	Runtime.prototype.go_textures_done = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		if (navigator["splashscreen"] && navigator["splashscreen"]["hide"])
			navigator["splashscreen"]["hide"]();
		this.tick();
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function ()
	{
		if (!this.running_layout)
			return;
		var logic_start = cr.performance_now();
		if (this.halfFramerateMode && this.ranLastRaf)
		{
			if (logic_start - this.lastRafTime < 29)
			{
				this.ranLastRaf = false;
				this.lastRafTime = logic_start;
				if (raf)
					this.raf_id = raf(this.tickFunc, this.canvas);
				else	// no idea if this works without raf/hi res timers but let's hope for the best
					this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
				return;		// skipped this frame
			}
		}
		this.ranLastRaf = true;
		this.lastRafTime = logic_start;
		var fsmode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"]);
		if ((isfullscreen || this.isNodeFullscreen) && this.fullscreen_scaling > 0)
			fsmode = this.fullscreen_scaling;
		if (fsmode > 0 && !this.isiPhone)
		{
			var curwidth = window.innerWidth;
			var curheight = window.innerHeight;
			if (this.lastWindowWidth !== curwidth || this.lastWindowHeight !== curheight)
			{
					this["setSize"](curwidth, curheight);
			}
		}
		if (!this.isDomFree)
		{
			if (isfullscreen)
			{
				if (!this.firstInFullscreen)
				{
					this.fullscreenOldMarginCss = jQuery(this.canvas).css("margin") || "0";
					this.firstInFullscreen = true;
				}
				if (!this.isChrome && !this.isNodeWebkit)
				{
					jQuery(this.canvas).css({
						"margin-left": "" + Math.floor((screen.width - (this.width / this.devicePixelRatio)) / 2) + "px",
						"margin-top": "" + Math.floor((screen.height - (this.height / this.devicePixelRatio)) / 2) + "px"
					});
				}
			}
			else
			{
				if (this.firstInFullscreen)
				{
					if (!this.isChrome && !this.isNodeWebkit)
					{
						jQuery(this.canvas).css("margin", this.fullscreenOldMarginCss);
					}
					this.fullscreenOldMarginCss = "";
					this.firstInFullscreen = false;
					if (this.fullscreen_mode === 0)
					{
						this["setSize"](Math.round(this.oldWidth / this.devicePixelRatio), Math.round(this.oldHeight / this.devicePixelRatio), true);
					}
				}
				else
				{
					this.oldWidth = this.width;
					this.oldHeight = this.height;
				}
			}
		}
		if (this.isloading)
		{
			var done = this.areAllTexturesLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		if (!this.hit_breakpoint)
		{
			this.tickcount++;
			this.execcount++;
			this.framecount++;
		}
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0 && !this.isDebug)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen);
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			var mode = this.fullscreen_mode;
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if ((mode !== 2 && cur_aspect > orig_aspect) || (mode === 2 && cur_aspect < orig_aspect))
			{
				this.aspect_scale = this.height / this.original_height;
			}
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = (this.isRetina ? this.devicePixelRatio : 1);
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        var tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		var prev_layout = this.running_layout;
		this.running_layout.stopRunning();
		var i, len, j, lenj, k, lenk, type, inst, binst;
		if (this.glwrap)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				type = this.types_by_index[i];
				if (type.is_family)
					continue;
				if (type.unloadTextures && (!type.global || type.instances.length === 0) && changeToLayout.initial_types.indexOf(type) === -1)
				{
					type.unloadTextures();
				}
			}
		}
		if (prev_layout == changeToLayout)
			this.system.waits.length = 0;
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.onLayoutChange)
							binst.onLayoutChange();
					}
				}
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
		this.glwrap.present();
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		return this.objectsByUid[uid_.toString()];
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (instances.length === 0)
				type.any_instance_parallaxed = false;
			if (inst.collcells)
			{
				type.collision_grid.update(inst, inst.collcells, null);
			}
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		var original_layer = layer;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = type.instances.length;
		for (i = 0, len = this.createRow.length; i < len; ++i)
		{
			if (this.createRow[i].type === type)
				inst.iid++;
		}
		inst.get_iid = cr.inst_get_iid;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			cr.wipe(inst.extra);
		}
		else
		{
			inst.extra = {};
			if (typeof cr_is_preview !== "undefined")
			{
				inst.instance_var_names = [];
				inst.instance_var_names.length = initial_vars.length;
				for (i = 0, len = initial_vars.length; i < len; i++)
					inst.instance_var_names[i] = initial_vars[i][1];
			}
			inst.instance_vars = [];
			inst.instance_vars.length = initial_vars.length;
		}
		for (i = 0, len = initial_vars.length; i < len; i++)
			inst.instance_vars[i] = initial_vars[i][0];
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.collcells.set(0, 0, -1, -1);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.collcells = new cr.rect(0, 0, -1, -1);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.get_zindex = cr.inst_get_zindex;
			}
			inst.tilemap_exists = false;
			inst.tilemap_width = 0;
			inst.tilemap_height = 0;
			inst.tilemap_data = null;
			if (wm.length === 14)
			{
				inst.tilemap_exists = true;
				inst.tilemap_width = wm[13][0];
				inst.tilemap_height = wm[13][1];
				inst.tilemap_data = wm[13][2];
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			type.any_bbox_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
			if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
				type.any_instance_parallaxed = true;
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, original_layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (cr.equals_nocase(layer.name, layer_name))
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.updateAllBBoxes = function (type)
	{
		if (!type.any_bbox_changed)
			return;		// all instances must already be up-to-date
		var i, len, instances = type.instances;
		for (i = 0, len = instances.length; i < len; ++i)
		{
			instances[i].update_bbox();
		}
		type.any_bbox_changed = false;
	};
	Runtime.prototype.getCollisionCandidates = function (layer, rtype, bbox, candidates)
	{
		var i, len, t;
		var is_parallaxed = (layer ? (layer.parallaxX !== 1 || layer.parallaxY !== 1) : false);
		if (rtype.is_family)
		{
			for (i = 0, len = rtype.members.length; i < len; ++i)
			{
				t = rtype.members[i];
				if (is_parallaxed || t.any_instance_parallaxed)
				{
					cr.appendArray(candidates, t.instances);
				}
				else
				{
					this.updateAllBBoxes(t);
					t.collision_grid.queryRange(bbox, candidates);
				}
			}
		}
		else
		{
			if (is_parallaxed || rtype.any_instance_parallaxed)
			{
				cr.appendArray(candidates, rtype.instances);
			}
			else
			{
				this.updateAllBBoxes(rtype);
				rtype.collision_grid.queryRange(bbox, candidates);
			}
		}
	};
	Runtime.prototype.getTypesCollisionCandidates = function (layer, types, bbox, candidates)
	{
		var i, len;
		for (i = 0, len = types.length; i < len; ++i)
		{
			this.getCollisionCandidates(layer, types[i], bbox, candidates);
		}
	};
	Runtime.prototype.getSolidCollisionCandidates = function (layer, bbox, candidates)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		this.getTypesCollisionCandidates(layer, solid.my_types, bbox, candidates);
	};
	Runtime.prototype.getJumpthruCollisionCandidates = function (layer, bbox, candidates)
	{
		var jumpthru = this.getJumpthruBehavior();
		if (!jumpthru)
			return null;
		this.getTypesCollisionCandidates(layer, jumpthru.my_types, bbox, candidates);
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, i2, i21, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			if (a.tilemap_exists && b.tilemap_exists)
				return false;
			if (a.tilemap_exists)
				return this.testTilemapOverlap(a, b);
			if (b.tilemap_exists)
				return this.testTilemapOverlap(b, a);
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polya.pts_cache[i2];
				y = polya.pts_cache[i21];
				polya.pts_cache[i2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i21] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			polya.update_bbox();
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				i2 = i * 2;
				i21 = i2 + 1;
				x = polyb.pts_cache[i2];
				y = polyb.pts_cache[i21];
				polyb.pts_cache[i2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i21] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			polyb.update_bbox();
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	var tmpRect = new cr.rect(0, 0, 0, 0);
	Runtime.prototype.testTilemapOverlap = function (tm, a)
	{
		var collrects = tm.collision_rects;
		var i, len, c, rc;
		var bbox = a.bbox;
		var tmx = tm.x;
		var tmy = tm.y;
		var haspolya = (a.collision_poly && !a.collision_poly.is_empty());
		for (i = 0, len = collrects.length; i < len; ++i)
		{
			c = collrects[i];
			rc = c.rc;
			if (bbox.intersects_rect_off(rc, tmx, tmy))
			{
				tmpQuad.set_from_rect(rc);
				tmpQuad.offset(tmx, tmy);
				if (tmpQuad.intersects_quad(a.bquad))
				{
					if (haspolya)
					{
						a.collision_poly.cache_poly(a.width, a.height, a.angle);
						if (c.poly)
						{
							if (c.poly.intersects_poly(a.collision_poly, a.x - (tmx + rc.left), a.y - (tmy + rc.top)))
							{
								return true;
							}
						}
						else
						{
							this.temp_poly.set_from_quad(tmpQuad, 0, 0, rc.right - rc.left, rc.bottom - rc.top);
							if (this.temp_poly.intersects_poly(a.collision_poly, a.x, a.y))
								return true;
						}
					}
					else
					{
						if (c.poly)
						{
							this.temp_poly.set_from_quad(a.bquad, 0, 0, a.width, a.height);
							if (c.poly.intersects_poly(this.temp_poly, -(tmx + rc.left), -(tmy + rc.top)))
							{
								return true;
							}
						}
						else
							return true;
					}
				}
			}
		}
		return false;
	};
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		if (b.tilemap_exists)
		{
			var collrects = b.collision_rects;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (r.intersects_rect_off(tilerc, tmx, tmy))
				{
					if (c.poly)
					{
						this.temp_poly.set_from_rect(r, 0, 0);
						if (c.poly.intersects_poly(this.temp_poly, -(tmx + tilerc.left), -(tmy + tilerc.top)))
							return true;
					}
					else
						return true;
				}
			}
			return false;
		}
		else
		{
			tmpQuad.set_from_rect(r);
			if (!b.bquad.intersects_quad(tmpQuad))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			tmpQuad.offset(-r.left, -r.top);
			this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
			return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
		}
	};
	Runtime.prototype.testSegmentOverlap = function (x1, y1, x2, y2, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		tmpRect.set(cr.min(x1, x2), cr.min(y1, y2), cr.max(x1, x2), cr.max(y1, y2));
		if (!b.bbox.intersects_rect(tmpRect))
			return false;
		if (b.tilemap_exists)
		{
			var collrects = b.collision_rects;
			var i, len, c, tilerc;
			var tmx = b.x;
			var tmy = b.y;
			for (i = 0, len = collrects.length; i < len; ++i)
			{
				c = collrects[i];
				tilerc = c.rc;
				if (tmpRect.intersects_rect_off(tilerc, tmx, tmy))
				{
					tmpQuad.set_from_rect(tilerc);
					tmpQuad.offset(tmx, tmy);
					if (tmpQuad.intersects_segment(x1, y1, x2, y2))
					{
						if (c.poly)
						{
							if (c.poly.intersects_segment(tmx + tilerc.left, tmy + tilerc.top, x1, y1, x2, y2))
							{
								return true;
							}
						}
						else
							return true;
					}
				}
			}
			return false;
		}
		else
		{
			if (!b.bquad.intersects_segment(x1, y1, x2, y2))
				return false;
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolyb)
				return true;
			b.collision_poly.cache_poly(b.width, b.height, b.angle);
			return b.collision_poly.intersects_segment(b.x, b.y, x1, y1, x2, y2);
		}
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		return this.solidBehavior;
	};
	Runtime.prototype.getJumpthruBehavior = function ()
	{
		return this.jumpthruBehavior;
	};
	var candidates = [];
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var i, len, s;
		inst.update_bbox();
		this.getSolidCollisionCandidates(inst.layer, inst.bbox, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testOverlap(inst, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var i, len, s;
		this.getSolidCollisionCandidates(null, r, candidates);
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			s = candidates[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testRectOverlap(r, s))
			{
				candidates.length = 0;
				return s;
			}
		}
		candidates.length = 0;
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		inst.update_bbox();
		this.getJumpthruCollisionCandidates(inst.layer, inst.bbox, candidates);
		var i, len, j;
		for (i = 0, len = candidates.length; i < len; ++i)
		{
			j = candidates[i];
			if (!j.extra.jumpthruEnabled)
				continue;
			if (this.testOverlap(inst, j))
			{
				if (all)
					ret.push(j);
				else
				{
					candidates.length = 0;
					return j;
				}
			}
		}
		candidates.length = 0;
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = this.testOverlapSolid(inst);
		if (!last_overlapped)
			return true;		// already clear of solids
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetStack = [];
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		triggerSheetIndex++;
		if (triggerSheetIndex === triggerSheetStack.length)
			triggerSheetStack.push(new cr.ObjectSet());
		else
			triggerSheetStack[triggerSheetIndex].clear();
        var ret = this.triggerOnSheet(method, inst, sheet, value);
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
		var alreadyTriggeredSheets = triggerSheetStack[triggerSheetIndex];
        if (alreadyTriggeredSheets.contains(sheet))
            return false;
        alreadyTriggeredSheets.add(sheet);
        var includes = sheet.includes.valuesRef();
        var ret = false;
		var i, leni, r;
        for (i = 0, leni = includes.length; i < leni; i++)
        {
			if (includes[i].isActive())
			{
				r = this.triggerOnSheet(method, inst, includes[i].include_sheet, value);
				ret = ret || r;
			}
        }
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			for (i = 0, leni = inst.type.families.length; i < leni; i++)
			{
				r = this.triggerOnSheetForTypeName(method, inst, inst.type.families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; i++)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (!!window["c2cocoonjs"])
		{
			CocoonJS["App"]["reload"]();
		}
		else
		{
			if (window.location.search.indexOf("continuous") > -1)
				window.location.reload(true);
			else
				window.location = window.location + "?continuous";
		}
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + savingToSlot, savingJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + savingToSlot, savingJson);
					cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (extra[p] && typeof extra[p].c2userdata !== "undefined")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = !!this.activeGroups[g.group_name];
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": CopyExtraObject(c.extra) };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.refreshUidMap = function ()
	{
		var i, len, type, j, lenj, inst;
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.execcount = rt["execcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.refreshUidMap();
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g)
					this.activeGroups[g.group_name] = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst, state_only)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {};
		if (state_only)
			o["c2"] = true;		// mark as known json data from Construct 2
		else
			o["uid"] = inst.uid;
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o, state_only)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		if (state_only)
		{
			if (!o["c2"])
				return;
		}
		else
			inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas") || document.createElement("canvas");
		canvas.screencanvas = true;
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		var layer;
		created_instances.length = 0;
		this.boundScrolling();
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true, true);
			var py = layer.canvasToLayer(0, 0, false, true);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = (px + 0.5) | 0;
				py = (py + 0.5) | 0;
			}
			layer.rotateViewport(px, py, null);
		}
		var uids_changed = false;
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						uids_changed = true;
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sortInstanceByZIndex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		if (uids_changed)
		{
			this.runtime.ClearDeathRow();
			this.runtime.refreshUidMap();
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
	};
	Layout.prototype.draw = function (ctx)
	{
		var layout_canvas;
		var layout_ctx = ctx;
		var ctx_changed = false;
		var render_offscreen = !this.runtime.fullscreenScalingQuality;
		if (render_offscreen)
		{
			if (!this.runtime.layout_canvas)
			{
				this.runtime.layout_canvas = document.createElement("canvas");
				layout_canvas = this.runtime.layout_canvas;
				layout_canvas.width = this.runtime.draw_width;
				layout_canvas.height = this.runtime.draw_height;
				this.runtime.layout_ctx = layout_canvas.getContext("2d");
				ctx_changed = true;
			}
			layout_canvas = this.runtime.layout_canvas;
			layout_ctx = this.runtime.layout_ctx;
			if (layout_canvas.width !== this.runtime.draw_width)
			{
				layout_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layout_canvas.height !== this.runtime.draw_height)
			{
				layout_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layout_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layout_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
		}
		layout_ctx.globalAlpha = 1;
		layout_ctx.globalCompositeOperation = "source-over";
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			layout_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(layout_ctx);
		}
		if (render_offscreen)
		{
			ctx.drawImage(layout_canvas, 0, 0, this.runtime.width, this.runtime.height);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 ||
								 this.runtime.uses_background_blending ||
								 !this.runtime.fullscreenScalingQuality);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.draw_width || this.runtime.layout_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
			if (!this.runtime.fullscreenScalingQuality)
			{
				glw.setSize(this.runtime.draw_width, this.runtime.draw_height);
			}
		}
		else
		{
			if (this.runtime.layout_tex)
			{
				glw.setRenderingToTexture(null);
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = null;
			}
		}
		if (this.runtime.alphaBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length === 0 ||
				(this.active_effect_types.length === 1 && this.runtime.fullscreenScalingQuality))
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
				}
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 ||
				this.runtime.uses_background_blending ||
				!this.runtime.fullscreenScalingQuality) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.draw_width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.draw_height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.boundScrolling = function ()
	{
		this.scrollToX(this.scrollX);
		this.scrollToY(this.scrollY);
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = inst ? inst.layer.getScale() :
							layer ? layer.getScale() : 1;
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false, true);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false, true);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false, true);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false, true);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = cr.floor(screenleft);
			cleartop = screentop = cr.floor(screentop);
			clearright = screenright = cr.ceil(screenright);
			clearbottom = screenbottom = cr.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex) ||
						(!layer && !inst && !this.runtime.fullscreenScalingQuality);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				glw.setTexture(null);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			else
			{
				if (!this.runtime.fullscreenScalingQuality)
				{
					glw.setSize(this.runtime.width, this.runtime.height);
					halfw = this.runtime.width / 2;
					halfh = this.runtime.height / 2;
					screenleft = 0;
					screentop = 0;
					screenright = this.runtime.width;
					screenbottom = this.runtime.height;
				}
			}
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"fv": this.first_visit,			// added r127
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		if (typeof o["fv"] !== "undefined")
			this.first_visit = o["fv"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst, initial_inst, type, keep, hasPersistBehavior;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			initial_inst = this.initial_instances[i];
			type = this.runtime.types_by_index[initial_inst[1]];
;
			hasPersistBehavior = this.runtime.typeHasPersistBehavior(type);
			keep = true;
			if (!hasPersistBehavior || this.layout.first_visit)
			{
				inst = this.runtime.createInstanceFromInit(initial_inst, this, true);
;
				created_instances.push(inst);
				if (inst.type.global)
					keep = false;
			}
			if (keep)
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function (include_aspect)
	{
		return this.getNormalScale() * (this.runtime.fullscreenScalingQuality || include_aspect ? this.runtime.aspect_scale : 1);
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		var ctx_changed = false;
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.draw_width;
				layer_canvas.height = this.runtime.draw_height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
				ctx_changed = true;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.draw_width)
			{
				layer_canvas.width = this.runtime.draw_width;
				ctx_changed = true;
			}
			if (layer_canvas.height !== this.runtime.draw_height)
			{
				layer_canvas.height = this.runtime.draw_height;
				ctx_changed = true;
			}
			if (ctx_changed)
			{
				layer_ctx["webkitImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["mozImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["msImageSmoothingEnabled"] = this.runtime.linearSampling;
				layer_ctx["imageSmoothingEnabled"] = this.runtime.linearSampling;
			}
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.draw_width, this.runtime.draw_height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.draw_width * (1 / myscale));
		this.viewBottom = py + (this.runtime.draw_height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.draw_width / 2, this.runtime.draw_height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.draw_width / -2, this.runtime.draw_height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.draw_width;
		var windowHeight = this.runtime.draw_height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.draw_width || this.runtime.layer_tex.c2height !== this.runtime.draw_height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.draw_width, this.runtime.draw_height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true, true);
		var py = this.canvasToLayer(0, 0, false, true);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false, true);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false, true);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.draw_width,		// pixelWidth
											 1.0 / this.runtime.draw_height,	// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.draw_width / 2;
				var halfh = this.runtime.draw_height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx, using_draw_area)
	{
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx, using_draw_area)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = this.runtime.parallax_x_origin;
		var oy = this.runtime.parallax_y_origin;
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale(!using_draw_area);
		if (using_draw_area)
		{
			x -= (this.runtime.draw_width * invScale) / 2;
			y -= (this.runtime.draw_height * invScale) / 2;
		}
		else
		{
			x -= (this.runtime.width * invScale) / 2;
			y -= (this.runtime.height * invScale) / 2;
		}
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.rotatePt = function (x_, y_, getx)
	{
		if (this.getAngle() === 0)
			return getx ? x_ : y_;
		var nx = this.layerToCanvas(x_, y_, true);
		var ny = this.layerToCanvas(x_, y_, false);
		this.disableAngle = true;
		var px = this.canvasToLayer(nx, ny, true);
		var py = this.canvasToLayer(nx, ny, true);
		this.disableAngle = false;
		return getx ? px : py;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	function sortInstanceByZIndex(a, b)
	{
		return a.zindex - b.zindex;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sortInstanceByZIndex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); // all event sheets included by this sheet, at first-level indirection only
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.run = function (from_include)
	{
		if (!this.runtime.resuming_breakpoint)
		{
			this.hasRun = true;
			if (!from_include)
				this.runtime.isRunningEvents = true;
		}
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
				this.runtime.clearSol(ev.solModifiers);
				if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
					this.runtime.ClearDeathRow();
		}
			if (!from_include)
				this.runtime.isRunningEvents = false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.runtime.allGroups.push(this);
            this.runtime.activeGroups[(/*this.sheet.name + "|" + */this.group_name).toLowerCase()] = this.initially_activated;
        }
		else
		{
			this.group_name = "";
			this.group = false;
			this.initially_activated = false;
		}
		this.orblock = m[2];
		this.sid = m[4];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[5];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cnd.index = i;
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[6];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			act.index = i;
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 8)
		{
			var em = m[7];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
		{
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
		}
	};
	window["_c2hh_"] = "5368D1D7463C144AC1FA6F1538A4A8C6B2F460D6";
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	}
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false, cnd_result;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
			if (!this.is_else_block)
				evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (this.conditions.length === 0)
				any_true = true;		// be sure to run if empty block
				evinfo.cndindex = 0
			for (len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (this.conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				cnd_result = this.conditions[evinfo.cndindex].run();
				if (cnd_result)			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
				evinfo.cndindex = 0
			for (len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				cnd_result = this.conditions[evinfo.cndindex].run();
				if (!cnd_result)    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
						this.runtime.ClearDeathRow();
					return;		// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		this.end_run(evinfo);
	};
	EventBlock.prototype.end_run = function (evinfo)
	{
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
			this.runtime.getCurrentEventStack().last_event_true = true;
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
			this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
					pushpop = (!this.toplevelgroup || (!this.group && i < last));
					if (pushpop)
						this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
					if (pushpop)
						this.runtime.popSol(subev.solModifiers);
					else
						this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
			this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	EventBlock.prototype.isFirstConditionOfType = function (cnd)
	{
		var cndindex = cnd.index;
		if (cndindex === 0)
			return true;
		--cndindex;
		for ( ; cndindex >= 0; --cndindex)
		{
			if (this.conditions[cndindex].type === cnd.type)
				return false;
		}
		return true;
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 10)
		{
			var i, len;
			var em = m[9];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get(i);
		var ret = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, leni, lenj, ret, met, inst, s, sol2;
		var sol = this.type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = this.type.is_contained;
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			for (i = 0, leni = this.type.instances.length; i < leni; i++)
			{
				inst = this.type.instances[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				met = cr.xor(ret, this.inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (this.type.finish)
				this.type.finish(true);
			sol.select_all = false;
			this.type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			var k = 0;
			var using_else_instances = (is_orblock && !this.block.isFirstConditionOfType(this));
			var arr = (using_else_instances ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; i++)
			{
				inst = arr[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				if (cr.xor(ret, this.inverted))
				{
					any_true = true;
					if (using_else_instances)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (using_else_instances)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
					else if (is_orblock)
					{
						sol.else_instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances.push(s);
							}
						}
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				for (i = 0, leni = this.type.container.length; i < leni; i++)
				{
					sol2 = this.type.container[i].getCurrentSol();
					if (using_else_instances)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (using_else_instances && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					for (j = 0, lenj = this.parameters.length; j < lenj; j++)
						this.results[j] = this.parameters[j].get(i);
					if (this.beh_index > -1)
						ret = this.func.apply(inst.behavior_insts[this.beh_index], this.results);
					else
						ret = this.func.apply(inst, this.results);
					if (cr.xor(ret, this.inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (this.type.finish)
				this.type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 6)
		{
			var i, len;
			var em = m[5];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var i, j, leni, lenj, inst;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			inst = instances[i];
			for (j = 0, lenj = this.parameters.length; j < lenj; j++)
				this.results[j] = this.parameters[j].get(i);    // pass i to use as default SOL index
			if (this.beh_index > -1)
			{
				var offset = 0;
				if (this.type.is_family)
				{
					offset = inst.type.family_beh_map[this.type.family_index];
				}
				this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
			}
			else
				this.func.apply(inst, this.results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
					this.get = this.get_familyvar;
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex)
	{
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else
		{
;
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		}
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
			this.runtime.all_local_vars.push(this);
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
			if (this.parent && !this.is_static && !this.is_constant)
				this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
	};
	EventInclude.prototype.toString = function ()
	{
		return "include:" + this.include_sheet.toString();
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventInclude.prototype.run = function ()
	{
			if (this.parent)
				this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run(true);			// from include
			if (this.parent)
				this.runtime.popSol(this.runtime.types_by_index);
	};
	EventInclude.prototype.isActive = function ()
	{
		var p = this.parent;
		while (p)
		{
			if (p.group)
			{
				if (!this.runtime.activeGroups[p.group_name.toLowerCase()])
					return false;
			}
			p = p.parent;
		}
		return true;
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
		this.any_true_state = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra.CompareTime_executed)
            {
                if (elapsed >= t)
                {
                    cnd.extra.CompareTime_executed = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (end < start)
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
		else
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra.c2_foreachordered_val;
		var vb = b.extra.c2_foreachordered_val;
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra.c2_foreachordered_val = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	SysCnds.prototype.PickByComparison = function (obj_, exp_, cmp_, val_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			val_ = current_condition.parameters[3].get(i);
			if (cr.do_cmp(exp_, cmp_, val_))
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
	SysCnds.prototype.PickByEvaluate = function (obj_, exp_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			if (exp_)
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra.TriggerOnce_lastTick === "undefined")
			cndextra.TriggerOnce_lastTick = -1;
        var last_tick = cndextra.TriggerOnce_lastTick;
        var cur_tick = this.runtime.tickcount;
        cndextra.TriggerOnce_lastTick = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra.Every_lastTime || 0;
        var cur_time = this.runtime.kahanTime.sum;
		if (typeof cnd.extra.Every_seconds === "undefined")
			cnd.extra.Every_seconds = seconds;
		var this_seconds = cnd.extra.Every_seconds;
        if (cur_time >= last_time + this_seconds)
        {
            cnd.extra.Every_lastTime = last_time + this_seconds;
			if (cur_time >= cnd.extra.Every_lastTime + this_seconds)
				cnd.extra.Every_lastTime = cur_time;
			cnd.extra.Every_seconds = seconds;
            return true;
        }
        else
            return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
        return this.runtime.activeGroups[(/*this.runtime.getCurrentCondition().sheet.name + "|" + */group).toLowerCase()];
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	SysCnds.prototype.ObjectUIDExists = function (u)
	{
		return !!this.runtime.getObjectByUID(u);
	};
	SysCnds.prototype.IsOnPlatform = function (p)
	{
		var rt = this.runtime;
		switch (p) {
		case 0:		// HTML5 website
			return !rt.isDomFree && !rt.isNodeWebkit && !rt.isPhoneGap && !rt.isCrosswalk && !rt.isWindows8App && !rt.isWindowsPhone8 && !rt.isBlackberry10 && !rt.isAmazonWebApp;
		case 1:		// iOS
			return rt.isiOS;
		case 2:		// Android
			return rt.isAndroid;
		case 3:		// Windows 8
			return rt.isWindows8App;
		case 4:		// Windows Phone 8
			return rt.isWindowsPhone8;
		case 5:		// Blackberry 10
			return rt.isBlackberry10;
		case 6:		// Tizen
			return rt.isTizen;
		case 7:		// CocoonJS
			return rt.isCocoonJs;
		case 8:		// PhoneGap
			return rt.isPhoneGap;
		case 9:	// Scirra Arcade
			return rt.isArcade;
		case 10:	// node-webkit
			return rt.isNodeWebkit;
		case 11:	// crosswalk
			return rt.isCrosswalk;
		case 12:	// amazon webapp
			return rt.isAmazonWebApp;
		default:	// should not be possible
			return false;
		}
	};
	var cacheRegex = null;
	var lastRegex = "";
	var lastFlags = "";
	function getRegex(regex_, flags_)
	{
		if (!cacheRegex || regex_ !== lastRegex || flags_ !== lastFlags)
		{
			cacheRegex = new RegExp(regex_, flags_);
			lastRegex = regex_;
			lastFlags = flags_;
		}
		cacheRegex.lastIndex = 0;		// reset
		return cacheRegex;
	};
	SysCnds.prototype.RegexTest = function (str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		return regex.test(str_);
	};
	var tmp_arr = [];
	SysCnds.prototype.PickOverlappingPoint = function (obj_, x_, y_)
	{
		if (!obj_)
            return false;
        var sol = obj_.getCurrentSol();
        var instances = sol.getObjects();
		var current_event = this.runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		var cnd = this.runtime.getCurrentCondition();
		var i, len, inst, pick;
		if (sol.select_all)
		{
			cr.shallowAssignArray(tmp_arr, instances);
			sol.else_instances.length = 0;
			sol.select_all = false;
			sol.instances.length = 0;
		}
		else
		{
			if (orblock)
			{
				cr.shallowAssignArray(tmp_arr, sol.else_instances);
				sol.else_instances.length = 0;
			}
			else
			{
				cr.shallowAssignArray(tmp_arr, instances);
				sol.instances.length = 0;
			}
		}
		for (i = 0, len = tmp_arr.length; i < len; ++i)
		{
			inst = tmp_arr[i];
			pick = cr.xor(inst.contains_pt(x_, y_), cnd.inverted);
			if (pick)
				sol.instances.push(inst);
			else
				sol.else_instances.push(inst);
		}
		obj_.applySolToContainer();
		return cr.xor(!!sol.instances.length, cnd.inverted);
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function(to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.running_layout.boundScrolling();
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var activeGroups = this.runtime.activeGroups;
		var groupkey = (/*this.runtime.getCurrentAction().sheet.name + "|" + */group).toLowerCase();
		switch (active) {
		case 0:
			activeGroups[groupkey] = false;
			break;
		case 1:
			activeGroups[groupkey] = true;
			break;
		case 2:
			activeGroups[groupkey] = !activeGroups[groupkey];
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
		if (layer.parallaxX !== 1 || layer.parallaxY !== 1)
		{
			var i, len, instances = layer.instances;
			for (i = 0, len = instances.length; i < len; ++i)
			{
				instances[i].type.any_instance_parallaxed = true;
			}
		}
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && cr.equals_nocase(l, layoutname))
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			this.runtime.activeGroups[g.group_name.toLowerCase()] = g.initially_activated;
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		var mode = this.runtime.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
		if (isfullscreen && this.runtime.fullscreen_scaling > 0)
			mode = this.runtime.fullscreen_scaling;
		if (mode === 0)
		{
			this.runtime["setSize"](w, h, true);
		}
		else
		{
			this.runtime.original_width = w;
			this.runtime.original_height = h;
			this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
		}
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	SysActs.prototype.SetHalfFramerateMode = function (set_)
	{
		this.runtime.halfFramerateMode = (set_ !== 0);
	};
	SysActs.prototype.SetFullscreenQuality = function (q)
	{
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (!isfullscreen && this.runtime.fullscreen_mode === 0)
			return;
		this.runtime.wantFullscreenScalingQuality = (q !== 0);
		this.runtime["setSize"](this.runtime.lastWindowWidth, this.runtime.lastWindowHeight, true);
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (max_ < arguments[i])
				max_ = arguments[i];
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (min_ > arguments[i])
				min_ = arguments[i];
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layerparallaxx = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxX * 100);
	};
	SysExps.prototype.layerparallaxy = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxY * 100);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float((y - a) / (b - a));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	SysExps.prototype.imagememoryusage = function (ret)
	{
		if (this.runtime.glwrap)
			ret.set_float(Math.round(100 * this.runtime.glwrap.estimateVRAM() / (1024 * 1024)) / 100);
		else
			ret.set_float(0);
	};
	SysExps.prototype.regexsearch = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_int(str_ ? str_.search(regex) : -1);
	};
	SysExps.prototype.regexreplace = function (ret, str_, regex_, flags_, replace_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_string(str_ ? str_.replace(regex, replace_) : "");
	};
	var regexMatches = [];
	var lastMatchesStr = "";
	var lastMatchesRegex = "";
	var lastMatchesFlags = "";
	function updateRegexMatches(str_, regex_, flags_)
	{
		if (str_ === lastMatchesStr && regex_ === lastMatchesRegex && flags_ === lastMatchesFlags)
			return;
		var regex = getRegex(regex_, flags_);
		regexMatches = str_.match(regex);
		lastMatchesStr = str_;
		lastMatchesRegex = regex_;
		lastMatchesFlags = flags_;
	};
	SysExps.prototype.regexmatchcount = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		ret.set_int(regexMatches ? regexMatches.length : 0);
	};
	SysExps.prototype.regexmatchat = function (ret, str_, regex_, flags_, index_)
	{
		index_ = Math.floor(index_);
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		if (!regexMatches || index_ < 0 || index_ >= regexMatches.length)
			ret.set_string("");
		else
			ret.set_string(regexMatches[index_]);
	};
	SysExps.prototype.infinity = function (ret)
	{
		ret.set_float(Infinity);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time > this.runtime.kahanTime.sum)
				continue;
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
(function () {
	cr.add_common_aces = function (m)
	{
		var pluginProto = m[0].prototype;
		var singleglobal_ = m[1];
		var position_aces = m[3];
		var size_aces = m[4];
		var angle_aces = m[5];
		var appearance_aces = m[6];
		var zorder_aces = m[7];
		var effects_aces = m[8];
		if (!pluginProto.cnds)
			pluginProto.cnds = {};
		if (!pluginProto.acts)
			pluginProto.acts = {};
		if (!pluginProto.exps)
			pluginProto.exps = {};
		var cnds = pluginProto.cnds;
		var acts = pluginProto.acts;
		var exps = pluginProto.exps;
		if (position_aces)
		{
			cnds.CompareX = function (cmp, x)
			{
				return cr.do_cmp(this.x, cmp, x);
			};
			cnds.CompareY = function (cmp, y)
			{
				return cr.do_cmp(this.y, cmp, y);
			};
			cnds.IsOnScreen = function ()
			{
				var layer = this.layer;
				this.update_bbox();
				var bbox = this.bbox;
				return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
			};
			cnds.IsOutsideLayout = function ()
			{
				this.update_bbox();
				var bbox = this.bbox;
				var layout = this.runtime.running_layout;
				return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
			};
			cnds.PickDistance = function (which, x, y)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var dist = cr.distanceTo(inst.x, inst.y, x, y);
				var i, len, d;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					d = cr.distanceTo(inst.x, inst.y, x, y);
					if ((which === 0 && d < dist) || (which === 1 && d > dist))
					{
						dist = d;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.SetX = function (x)
			{
				if (this.x !== x)
				{
					this.x = x;
					this.set_bbox_changed();
				}
			};
			acts.SetY = function (y)
			{
				if (this.y !== y)
				{
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPos = function (x, y)
			{
				if (this.x !== x || this.y !== y)
				{
					this.x = x;
					this.y = y;
					this.set_bbox_changed();
				}
			};
			acts.SetPosToObject = function (obj, imgpt)
			{
				var inst = obj.getPairedInstance(this);
				if (!inst)
					return;
				var newx, newy;
				if (inst.getImagePoint)
				{
					newx = inst.getImagePoint(imgpt, true);
					newy = inst.getImagePoint(imgpt, false);
				}
				else
				{
					newx = inst.x;
					newy = inst.y;
				}
				if (this.x !== newx || this.y !== newy)
				{
					this.x = newx;
					this.y = newy;
					this.set_bbox_changed();
				}
			};
			acts.MoveForward = function (dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(this.angle) * dist;
					this.y += Math.sin(this.angle) * dist;
					this.set_bbox_changed();
				}
			};
			acts.MoveAtAngle = function (a, dist)
			{
				if (dist !== 0)
				{
					this.x += Math.cos(cr.to_radians(a)) * dist;
					this.y += Math.sin(cr.to_radians(a)) * dist;
					this.set_bbox_changed();
				}
			};
			exps.X = function (ret)
			{
				ret.set_float(this.x);
			};
			exps.Y = function (ret)
			{
				ret.set_float(this.y);
			};
			exps.dt = function (ret)
			{
				ret.set_float(this.runtime.getDt(this));
			};
		}
		if (size_aces)
		{
			cnds.CompareWidth = function (cmp, w)
			{
				return cr.do_cmp(this.width, cmp, w);
			};
			cnds.CompareHeight = function (cmp, h)
			{
				return cr.do_cmp(this.height, cmp, h);
			};
			acts.SetWidth = function (w)
			{
				if (this.width !== w)
				{
					this.width = w;
					this.set_bbox_changed();
				}
			};
			acts.SetHeight = function (h)
			{
				if (this.height !== h)
				{
					this.height = h;
					this.set_bbox_changed();
				}
			};
			acts.SetSize = function (w, h)
			{
				if (this.width !== w || this.height !== h)
				{
					this.width = w;
					this.height = h;
					this.set_bbox_changed();
				}
			};
			exps.Width = function (ret)
			{
				ret.set_float(this.width);
			};
			exps.Height = function (ret)
			{
				ret.set_float(this.height);
			};
			exps.BBoxLeft = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.left);
			};
			exps.BBoxTop = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.top);
			};
			exps.BBoxRight = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.right);
			};
			exps.BBoxBottom = function (ret)
			{
				this.update_bbox();
				ret.set_float(this.bbox.bottom);
			};
		}
		if (angle_aces)
		{
			cnds.AngleWithin = function (within, a)
			{
				return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
			};
			cnds.IsClockwiseFrom = function (a)
			{
				return cr.angleClockwise(this.angle, cr.to_radians(a));
			};
			cnds.IsBetweenAngles = function (a, b)
			{
				var lower = cr.to_clamped_radians(a);
				var upper = cr.to_clamped_radians(b);
				var angle = cr.clamp_angle(this.angle);
				var obtuse = (!cr.angleClockwise(upper, lower));
				if (obtuse)
					return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
				else
					return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
			};
			acts.SetAngle = function (a)
			{
				var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateClockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle += cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateCounterclockwise = function (a)
			{
				if (a !== 0 && !isNaN(a))
				{
					this.angle -= cr.to_radians(a);
					this.angle = cr.clamp_angle(this.angle);
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardAngle = function (amt, target)
			{
				var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.RotateTowardPosition = function (amt, x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var target = Math.atan2(dy, dx);
				var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			acts.SetTowardPosition = function (x, y)
			{
				var dx = x - this.x;
				var dy = y - this.y;
				var newangle = Math.atan2(dy, dx);
				if (isNaN(newangle))
					return;
				if (this.angle !== newangle)
				{
					this.angle = newangle;
					this.set_bbox_changed();
				}
			};
			exps.Angle = function (ret)
			{
				ret.set_float(cr.to_clamped_degrees(this.angle));
			};
		}
		if (!singleglobal_)
		{
			cnds.CompareInstanceVar = function (iv, cmp, val)
			{
				return cr.do_cmp(this.instance_vars[iv], cmp, val);
			};
			cnds.IsBoolInstanceVarSet = function (iv)
			{
				return this.instance_vars[iv];
			};
			cnds.PickInstVarHiLow = function (which, iv)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var val = inst.instance_vars[iv];
				var i, len, v;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					v = inst.instance_vars[iv];
					if ((which === 0 && v < val) || (which === 1 && v > val))
					{
						val = v;
						pickme = inst;
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			cnds.PickByUID = function (u)
			{
				var i, len, j, inst, families, instances, sol;
				var cnd = this.runtime.getCurrentCondition();
				if (cnd.inverted)
				{
					sol = this.getCurrentSol();
					if (sol.select_all)
					{
						sol.select_all = false;
						sol.instances.length = 0;
						sol.else_instances.length = 0;
						instances = this.instances;
						for (i = 0, len = instances.length; i < len; i++)
						{
							inst = instances[i];
							if (inst.uid === u)
								sol.else_instances.push(inst);
							else
								sol.instances.push(inst);
						}
						this.applySolToContainer();
						return !!sol.instances.length;
					}
					else
					{
						for (i = 0, j = 0, len = sol.instances.length; i < len; i++)
						{
							inst = sol.instances[i];
							sol.instances[j] = inst;
							if (inst.uid === u)
							{
								sol.else_instances.push(inst);
							}
							else
								j++;
						}
						sol.instances.length = j;
						this.applySolToContainer();
						return !!sol.instances.length;
					}
				}
				else
				{
					inst = this.runtime.getObjectByUID(u);
					if (!inst)
						return false;
					sol = this.getCurrentSol();
					if (!sol.select_all && sol.instances.indexOf(inst) === -1)
						return false;		// not picked
					if (this.is_family)
					{
						families = inst.type.families;
						for (i = 0, len = families.length; i < len; i++)
						{
							if (families[i] === this)
							{
								sol.pick_one(inst);
								this.applySolToContainer();
								return true;
							}
						}
					}
					else if (inst.type === this)
					{
						sol.pick_one(inst);
						this.applySolToContainer();
						return true;
					}
					return false;
				}
			};
			cnds.OnCreated = function ()
			{
				return true;
			};
			cnds.OnDestroyed = function ()
			{
				return true;
			};
			acts.SetInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] = val;
					else
						myinstvars[iv] = val.toString();
				}
				else
;
			};
			acts.AddInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += parseFloat(val);
				}
				else if (cr.is_string(myinstvars[iv]))
				{
					if (cr.is_string(val))
						myinstvars[iv] += val;
					else
						myinstvars[iv] += val.toString();
				}
				else
;
			};
			acts.SubInstanceVar = function (iv, val)
			{
				var myinstvars = this.instance_vars;
				if (cr.is_number(myinstvars[iv]))
				{
					if (cr.is_number(val))
						myinstvars[iv] -= val;
					else
						myinstvars[iv] -= parseFloat(val);
				}
				else
;
			};
			acts.SetBoolInstanceVar = function (iv, val)
			{
				this.instance_vars[iv] = val ? 1 : 0;
			};
			acts.ToggleBoolInstanceVar = function (iv)
			{
				this.instance_vars[iv] = 1 - this.instance_vars[iv];
			};
			acts.Destroy = function ()
			{
				this.runtime.DestroyInstance(this);
			};
			if (!acts.LoadFromJsonString)
			{
				acts.LoadFromJsonString = function (str_)
				{
					var o, i, len, binst;
					try {
						o = JSON.parse(str_);
					}
					catch (e) {
						return;
					}
					this.runtime.loadInstanceFromJSON(this, o, true);
					if (this.afterLoad)
						this.afterLoad();
					if (this.behavior_insts)
					{
						for (i = 0, len = this.behavior_insts.length; i < len; ++i)
						{
							binst = this.behavior_insts[i];
							if (binst.afterLoad)
								binst.afterLoad();
						}
					}
				};
			}
			exps.Count = function (ret)
			{
				var count = ret.object_class.instances.length;
				var i, len, inst;
				for (i = 0, len = this.runtime.createRow.length; i < len; i++)
				{
					inst = this.runtime.createRow[i];
					if (ret.object_class.is_family)
					{
						if (inst.type.families.indexOf(ret.object_class) >= 0)
							count++;
					}
					else
					{
						if (inst.type === ret.object_class)
							count++;
					}
				}
				ret.set_int(count);
			};
			exps.PickedCount = function (ret)
			{
				ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
			};
			exps.UID = function (ret)
			{
				ret.set_int(this.uid);
			};
			exps.IID = function (ret)
			{
				ret.set_int(this.get_iid());
			};
			if (!exps.AsJSON)
			{
				exps.AsJSON = function (ret)
				{
					ret.set_string(JSON.stringify(this.runtime.saveInstanceToJSON(this, true)));
				};
			}
		}
		if (appearance_aces)
		{
			cnds.IsVisible = function ()
			{
				return this.visible;
			};
			acts.SetVisible = function (v)
			{
				if (!v !== !this.visible)
				{
					this.visible = v;
					this.runtime.redraw = true;
				}
			};
			cnds.CompareOpacity = function (cmp, x)
			{
				return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
			};
			acts.SetOpacity = function (x)
			{
				var new_opacity = x / 100.0;
				if (new_opacity < 0)
					new_opacity = 0;
				else if (new_opacity > 1)
					new_opacity = 1;
				if (new_opacity !== this.opacity)
				{
					this.opacity = new_opacity;
					this.runtime.redraw = true;
				}
			};
			exps.Opacity = function (ret)
			{
				ret.set_float(cr.round6dp(this.opacity * 100.0));
			};
		}
		if (zorder_aces)
		{
			cnds.IsOnLayer = function (layer_)
			{
				if (!layer_)
					return false;
				return this.layer === layer_;
			};
			cnds.PickTopBottom = function (which_)
			{
				var sol = this.getCurrentSol();
				var instances = sol.getObjects();
				if (!instances.length)
					return false;
				var inst = instances[0];
				var pickme = inst;
				var i, len;
				for (i = 1, len = instances.length; i < len; i++)
				{
					inst = instances[i];
					if (which_ === 0)
					{
						if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
					else
					{
						if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
						{
							pickme = inst;
						}
					}
				}
				sol.pick_one(pickme);
				return true;
			};
			acts.MoveToTop = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === this.layer.instances.length - 1)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.push(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToBottom = function ()
			{
				var zindex = this.get_zindex();
				if (zindex === 0)
					return;
				cr.arrayRemove(this.layer.instances, zindex);
				this.layer.instances.unshift(this);
				this.runtime.redraw = true;
				this.layer.zindices_stale = true;
			};
			acts.MoveToLayer = function (layerMove)
			{
				if (!layerMove || layerMove == this.layer)
					return;
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = layerMove;
				this.zindex = layerMove.instances.length;
				layerMove.instances.push(this);
				this.runtime.redraw = true;
			};
			acts.ZMoveToObject = function (where_, obj_)
			{
				var isafter = (where_ === 0);
				if (!obj_)
					return;
				var other = obj_.getFirstPicked(this);
				if (!other || other.uid === this.uid)
					return;
				if (this.layer.index !== other.layer.index)
				{
					cr.arrayRemove(this.layer.instances, this.get_zindex());
					this.layer.zindices_stale = true;
					this.layer = other.layer;
					this.zindex = other.layer.instances.length;
					other.layer.instances.push(this);
				}
				var myZ = this.get_zindex();
				var insertZ = other.get_zindex();
				cr.arrayRemove(this.layer.instances, myZ);
				if (myZ < insertZ)
					insertZ--;
				if (isafter)
					insertZ++;
				if (insertZ === this.layer.instances.length)
					this.layer.instances.push(this);
				else
					this.layer.instances.splice(insertZ, 0, this);
				this.layer.zindices_stale = true;
				this.runtime.redraw = true;
			};
			exps.LayerNumber = function (ret)
			{
				ret.set_int(this.layer.number);
			};
			exps.LayerName = function (ret)
			{
				ret.set_string(this.layer.name);
			};
			exps.ZIndex = function (ret)
			{
				ret.set_int(this.get_zindex());
			};
		}
		if (effects_aces)
		{
			acts.SetEffectEnabled = function (enable_, effectname_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var enable = (enable_ === 1);
				if (this.active_effect_flags[i] === enable)
					return;		// no change
				this.active_effect_flags[i] = enable;
				this.updateActiveEffects();
				this.runtime.redraw = true;
			};
			acts.SetEffectParam = function (effectname_, index_, value_)
			{
				if (!this.runtime.glwrap)
					return;
				var i = this.type.getEffectIndexByName(effectname_);
				if (i < 0)
					return;		// effect name not found
				var et = this.type.effect_types[i];
				var params = this.effect_params[i];
				index_ = Math.floor(index_);
				if (index_ < 0 || index_ >= params.length)
					return;		// effect index out of bounds
				if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
					value_ /= 100.0;
				if (params[index_] === value_)
					return;		// no change
				params[index_] = value_;
				if (et.active)
					this.runtime.redraw = true;
			};
		}
	};
	cr.set_bbox_changed = function ()
	{
		this.bbox_changed = true;      		// will recreate next time box requested
		this.type.any_bbox_changed = true;	// avoid unnecessary updateAllBBox() calls
		this.runtime.redraw = true;     	// assume runtime needs to redraw
		var i, len, callbacks = this.bbox_changed_callbacks;
		for (i = 0, len = callbacks.length; i < len; ++i)
		{
			callbacks[i](this);
		}
	};
	cr.add_bbox_changed_callback = function (f)
	{
		if (f)
		{
			this.bbox_changed_callbacks.push(f);
		}
	};
	var tmprc = new cr.rect(0, 0, 0, 0);
	cr.update_bbox = function ()
	{
		if (!this.bbox_changed)
			return;                 // bounding box not changed
		var bbox = this.bbox;
		var bquad = this.bquad;
		bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
		bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
		if (!this.angle)
		{
			bquad.set_from_rect(bbox);    // make bounding quad from box
		}
		else
		{
			bbox.offset(-this.x, -this.y);       			// translate to origin
			bquad.set_from_rotated_rect(bbox, this.angle);	// rotate around origin
			bquad.offset(this.x, this.y);      				// translate back to original position
			bquad.bounding_box(bbox);
		}
		bbox.normalize();
		this.bbox_changed = false;  // bounding box up to date
		if (this.collisionsEnabled)
		{
			var mygrid = this.type.collision_grid;
			var collcells = this.collcells;
			tmprc.set(mygrid.XToCell(bbox.left), mygrid.YToCell(bbox.top), mygrid.XToCell(bbox.right), mygrid.YToCell(bbox.bottom));
			if (!collcells.equals(tmprc))
			{
				if (collcells.right < collcells.left)
					mygrid.update(this, null, tmprc);		// first insertion with invalid rect: don't provide old range
				else
					mygrid.update(this, collcells, tmprc);
				collcells.copy(tmprc);
			}
		}
	};
	cr.inst_contains_pt = function (x, y)
	{
		if (!this.bbox.contains_pt(x, y))
			return false;
		if (!this.bquad.contains_pt(x, y))
			return false;
		if (this.collision_poly && !this.collision_poly.is_empty())
		{
			this.collision_poly.cache_poly(this.width, this.height, this.angle);
			return this.collision_poly.contains_pt(x - this.x, y - this.y);
		}
		else
			return true;
	};
	cr.inst_get_iid = function ()
	{
		this.type.updateIIDs();
		return this.iid;
	};
	cr.inst_get_zindex = function ()
	{
		this.layer.updateZIndices();
		return this.zindex;
	};
	cr.inst_updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et, inst;
		for (i = 0, len = this.active_effect_flags.length; i < len; i++)
		{
			if (this.active_effect_flags[i])
				this.active_effect_types.push(this.type.effect_types[i]);
		}
		this.uses_shaders = !!this.active_effect_types.length;
	};
	cr.inst_toString = function ()
	{
		return "Inst" + this.puid;
	};
	cr.type_getFirstPicked = function (frominst)
	{
		if (frominst && frominst.is_contained && frominst.type != this)
		{
			var i, len, s;
			for (i = 0, len = frominst.siblings.length; i < len; i++)
			{
				s = frominst.siblings[i];
				if (s.type == this)
					return s;
			}
		}
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[0];
		else
			return null;
	};
	cr.type_getPairedInstance = function (inst)
	{
		var instances = this.getCurrentSol().getObjects();
		if (instances.length)
			return instances[inst.get_iid() % instances.length];
		else
			return null;
	};
	cr.type_updateIIDs = function ()
	{
		if (!this.stale_iids || this.is_family)
			return;		// up to date or is family - don't want family to overwrite IIDs
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].iid = i;
		var next_iid = i;
		var createRow = this.runtime.createRow;
		for (i = 0, len = createRow.length; i < len; ++i)
		{
			if (createRow[i].type === this)
				createRow[i].iid = next_iid++;
		}
		this.stale_iids = false;
	};
	cr.type_getInstanceByIID = function (i)
	{
		if (i < this.instances.length)
			return this.instances[i];
		i -= this.instances.length;
		var createRow = this.runtime.createRow;
		var j, lenj;
		for (j = 0, lenj = createRow.length; j < lenj; ++j)
		{
			if (createRow[j].type === this)
			{
				if (i === 0)
					return createRow[j];
				--i;
			}
		}
;
		return null;
	};
	cr.type_getCurrentSol = function ()
	{
		return this.solstack[this.cur_sol];
	};
	cr.type_pushCleanSol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		else
			this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
	};
	cr.type_pushCopySol = function ()
	{
		this.cur_sol++;
		if (this.cur_sol === this.solstack.length)
			this.solstack.push(new cr.selection(this));
		var clonesol = this.solstack[this.cur_sol];
		var prevsol = this.solstack[this.cur_sol - 1];
		if (prevsol.select_all)
			clonesol.select_all = true;
		else
		{
			clonesol.select_all = false;
			cr.shallowAssignArray(clonesol.instances, prevsol.instances);
			cr.shallowAssignArray(clonesol.else_instances, prevsol.else_instances);
		}
	};
	cr.type_popSol = function ()
	{
;
		this.cur_sol--;
	};
	cr.type_getBehaviorByName = function (behname)
	{
		var i, len, j, lenj, f, index = 0;
		if (!this.is_family)
		{
			for (i = 0, len = this.families.length; i < len; i++)
			{
				f = this.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (behname === f.behaviors[j].name)
					{
						this.extra.lastBehIndex = index;
						return f.behaviors[j];
					}
					index++;
				}
			}
		}
		for (i = 0, len = this.behaviors.length; i < len; i++) {
			if (behname === this.behaviors[i].name)
			{
				this.extra.lastBehIndex = index;
				return this.behaviors[i];
			}
			index++;
		}
		return null;
	};
	cr.type_getBehaviorIndexByName = function (behname)
	{
		var b = this.getBehaviorByName(behname);
		if (b)
			return this.extra.lastBehIndex;
		else
			return -1;
	};
	cr.type_getEffectIndexByName = function (name_)
	{
		var i, len;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			if (this.effect_types[i].name === name_)
				return i;
		}
		return -1;
	};
	cr.type_applySolToContainer = function ()
	{
		if (!this.is_contained || this.is_family)
			return;
		var i, len, j, lenj, t, sol, sol2;
		this.updateIIDs();
		sol = this.getCurrentSol();
		var select_all = sol.select_all;
		var es = this.runtime.getCurrentEventStack();
		var orblock = es && es.current_event && es.current_event.orblock;
		for (i = 0, len = this.container.length; i < len; i++)
		{
			t = this.container[i];
			if (t === this)
				continue;
			t.updateIIDs();
			sol2 = t.getCurrentSol();
			sol2.select_all = select_all;
			if (!select_all)
			{
				sol2.instances.length = sol.instances.length;
				for (j = 0, lenj = sol.instances.length; j < lenj; j++)
					sol2.instances[j] = t.getInstanceByIID(sol.instances[j].iid);
				if (orblock)
				{
					sol2.else_instances.length = sol.else_instances.length;
					for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
						sol2.else_instances[j] = t.getInstanceByIID(sol.else_instances[j].iid);
				}
			}
		}
	};
	cr.type_toString = function ()
	{
		return "Type" + this.sid;
	};
	cr.do_cmp = function (x, cmp, y)
	{
		if (typeof x === "undefined" || typeof y === "undefined")
			return false;
		switch (cmp)
		{
			case 0:     // equal
				return x === y;
			case 1:     // not equal
				return x !== y;
			case 2:     // less
				return x < y;
			case 3:     // less/equal
				return x <= y;
			case 4:     // greater
				return x > y;
			case 5:     // greater/equal
				return x >= y;
			default:
;
				return false;
		}
	};
})();
cr.shaders = {};
cr.shaders["gamma"] = {src: ["varying mediump vec2 vTex;",
"uniform lowp sampler2D samplerFront;",
"uniform mediump float gamma;",
"void main(void)",
"{",
"lowp vec4 front = texture2D(samplerFront, vTex);",
"gl_FragColor = vec4(pow(front.rgb, vec3(gamma)), front.a);",
"}"
].join("\n"),
	extendBoxHorizontal: 0,
	extendBoxVertical: 0,
	crossSampling: false,
	animated: false,
	parameters: [["gamma", 0, 0]] }
cr.shaders["noise"] = {src: ["varying mediump vec2 vTex;",
"uniform lowp sampler2D samplerFront;",
"uniform mediump float seconds;",
"uniform lowp float intensity;",
"uniform lowp float color;",
"void main(void)",
"{",
"lowp vec4 front = texture2D(samplerFront, vTex);",
"front.rgb /= front.a;",
"mediump float seconds_mod = mod(seconds, 10.0);",
"mediump vec3 noise = vec3(fract(sin(dot(vTex.xy, vec2(12.9898,78.233)) + seconds_mod) * 43758.5453),",
"fract(sin(dot(vTex.yx, vec2(12.9898,-78.233)) + seconds_mod) * 43758.5453),",
"fract(sin(dot(vTex.xy, vec2(-12.9898,-78.233)) + seconds_mod) * 43758.5453));",
"noise = mix(vec3(noise.r), noise, color);",
"front.rgb += (noise * intensity) - (intensity / 2.0);",
"front.rgb *= front.a;",
"gl_FragColor = front;",
"}"
].join("\n"),
	extendBoxHorizontal: 0,
	extendBoxVertical: 0,
	crossSampling: false,
	animated: true,
	parameters: [["intensity", 0, 1], ["color", 0, 1]] }
cr.shaders["setcolor"] = {src: ["varying mediump vec2 vTex;",
"uniform lowp sampler2D samplerFront;",
"uniform lowp float red;",
"uniform lowp float green;",
"uniform lowp float blue;",
"void main(void)",
"{",
"lowp float a = texture2D(samplerFront, vTex).a;",
"gl_FragColor = vec4(vec3(red, green, blue) * a, a);",
"}"
].join("\n"),
	extendBoxHorizontal: 0,
	extendBoxVertical: 0,
	crossSampling: false,
	animated: false,
	parameters: [["red", 0, 1], ["green", 0, 1], ["blue", 0, 1]] }
;
;
cr.plugins_.Arr = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Arr.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var arrCache = [];
	function allocArray()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [];
	};
	if (!Array.isArray)
	{
		Array.isArray = function (vArg) {
			return Object.prototype.toString.call(vArg) === "[object Array]";
		};
	}
	function freeArray(a)
	{
		var i, len;
		for (i = 0, len = a.length; i < len; i++)
		{
			if (Array.isArray(a[i]))
				freeArray(a[i]);
		}
		a.length = 0;
		arrCache.push(a);
	};
	instanceProto.onCreate = function()
	{
		this.cx = this.properties[0];
		this.cy = this.properties[1];
		this.cz = this.properties[2];
		if (!this.recycled)
			this.arr = allocArray();
		var a = this.arr;
		a.length = this.cx;
		var x, y, z;
		for (x = 0; x < this.cx; x++)
		{
			if (!a[x])
				a[x] = allocArray();
			a[x].length = this.cy;
			for (y = 0; y < this.cy; y++)
			{
				if (!a[x][y])
					a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = 0;
			}
		}
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
	};
	instanceProto.onDestroy = function ()
	{
		var x;
		for (x = 0; x < this.cx; x++)
			freeArray(this.arr[x]);		// will recurse down and recycle other arrays
		this.arr.length = 0;
	};
	instanceProto.at = function (x, y, z)
	{
		x = Math.floor(x);
		y = Math.floor(y);
		z = Math.floor(z);
		if (isNaN(x) || x < 0 || x > this.cx - 1)
			return 0;
		if (isNaN(y) || y < 0 || y > this.cy - 1)
			return 0;
		if (isNaN(z) || z < 0 || z > this.cz - 1)
			return 0;
		return this.arr[x][y][z];
	};
	instanceProto.set = function (x, y, z, val)
	{
		x = Math.floor(x);
		y = Math.floor(y);
		z = Math.floor(z);
		if (isNaN(x) || x < 0 || x > this.cx - 1)
			return;
		if (isNaN(y) || y < 0 || y > this.cy - 1)
			return;
		if (isNaN(z) || z < 0 || z > this.cz - 1)
			return;
		this.arr[x][y][z] = val;
	};
	instanceProto.getAsJSON = function ()
	{
		return JSON.stringify({
			"c2array": true,
			"size": [this.cx, this.cy, this.cz],
			"data": this.arr
		});
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"size": [this.cx, this.cy, this.cz],
			"data": this.arr
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		var sz = o["size"];
		this.cx = sz[0];
		this.cy = sz[1];
		this.cz = sz[2];
		this.arr = o["data"];
	};
	instanceProto.setSize = function (w, h, d)
	{
		if (w < 0) w = 0;
		if (h < 0) h = 0;
		if (d < 0) d = 0;
		if (this.cx === w && this.cy === h && this.cz === d)
			return;		// no change
		this.cx = w;
		this.cy = h;
		this.cz = d;
		var x, y, z;
		var a = this.arr;
		a.length = w;
		for (x = 0; x < this.cx; x++)
		{
			if (cr.is_undefined(a[x]))
				a[x] = allocArray();
			a[x].length = h;
			for (y = 0; y < this.cy; y++)
			{
				if (cr.is_undefined(a[x][y]))
					a[x][y] = allocArray();
				a[x][y].length = d;
				for (z = 0; z < this.cz; z++)
				{
					if (cr.is_undefined(a[x][y][z]))
						a[x][y][z] = 0;
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareX = function (x, cmp, val)
	{
		return cr.do_cmp(this.at(x, 0, 0), cmp, val);
	};
	Cnds.prototype.CompareXY = function (x, y, cmp, val)
	{
		return cr.do_cmp(this.at(x, y, 0), cmp, val);
	};
	Cnds.prototype.CompareXYZ = function (x, y, z, cmp, val)
	{
		return cr.do_cmp(this.at(x, y, z), cmp, val);
	};
	instanceProto.doForEachTrigger = function (current_event)
	{
		this.runtime.pushCopySol(current_event.solModifiers);
		current_event.retrigger();
		this.runtime.popSol(current_event.solModifiers);
	};
	Cnds.prototype.ArrForEach = function (dims)
	{
        var current_event = this.runtime.getCurrentEventStack().current_event;
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
		switch (dims) {
		case 0:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				for (this.forY = 0; this.forY < this.cy; this.forY++)
				{
					for (this.forZ = 0; this.forZ < this.cz; this.forZ++)
					{
						this.doForEachTrigger(current_event);
					}
				}
			}
			break;
		case 1:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				for (this.forY = 0; this.forY < this.cy; this.forY++)
				{
					this.doForEachTrigger(current_event);
				}
			}
			break;
		case 2:
			for (this.forX = 0; this.forX < this.cx; this.forX++)
			{
				this.doForEachTrigger(current_event);
			}
			break;
		}
		this.forX = 0;
		this.forY = 0;
		this.forZ = 0;
		return false;
	};
	Cnds.prototype.CompareCurrent = function (cmp, val)
	{
		return cr.do_cmp(this.at(this.forX, this.forY, this.forZ), cmp, val);
	};
	Cnds.prototype.Contains = function(val)
	{
		var x, y, z;
		for (x = 0; x < this.cx; x++)
		{
			for (y = 0; y < this.cy; y++)
			{
				for (z = 0; z < this.cz; z++)
				{
					if (this.arr[x][y][z] === val)
						return true;
				}
			}
		}
		return false;
	};
	Cnds.prototype.IsEmpty = function ()
	{
		return this.cx === 0 || this.cy === 0 || this.cz === 0;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Clear = function ()
	{
		var x, y, z;
		for (x = 0; x < this.cx; x++)
			for (y = 0; y < this.cy; y++)
				for (z = 0; z < this.cz; z++)
					this.arr[x][y][z] = 0;
	};
	Acts.prototype.SetSize = function (w, h, d)
	{
		this.setSize(w, h, d);
	};
	Acts.prototype.SetX = function (x, val)
	{
		this.set(x, 0, 0, val);
	};
	Acts.prototype.SetXY = function (x, y, val)
	{
		this.set(x, y, 0, val);
	};
	Acts.prototype.SetXYZ = function (x, y, z, val)
	{
		this.set(x, y, z, val);
	};
	Acts.prototype.Push = function (where, value, axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		switch (axis) {
		case 0:	// X axis
			if (where === 0)	// back
			{
				x = a.length;
				a.push(allocArray());
			}
			else				// front
			{
				x = 0;
				a.unshift(allocArray());
			}
			a[x].length = this.cy;
			for ( ; y < this.cy; y++)
			{
				a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cx++;
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
			{
				if (where === 0)	// back
				{
					y = a[x].length;
					a[x].push(allocArray());
				}
				else				// front
				{
					y = 0;
					a[x].unshift(allocArray());
				}
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cy++;
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					if (where === 0)	// back
					{
						a[x][y].push(value);
					}
					else				// front
					{
						a[x][y].unshift(value);
					}
				}
			}
			this.cz++;
			break;
		}
	};
	Acts.prototype.Pop = function (where, axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		switch (axis) {
		case 0:	// X axis
			if (this.cx === 0)
				break;
			if (where === 0)	// back
			{
				freeArray(a.pop());
			}
			else				// front
			{
				freeArray(a.shift());
			}
			this.cx--;
			break;
		case 1: // Y axis
			if (this.cy === 0)
				break;
			for ( ; x < this.cx; x++)
			{
				if (where === 0)	// back
				{
					freeArray(a[x].pop());
				}
				else				// front
				{
					freeArray(a[x].shift());
				}
			}
			this.cy--;
			break;
		case 2:	// Z axis
			if (this.cz === 0)
				break;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					if (where === 0)	// back
					{
						a[x][y].pop();
					}
					else				// front
					{
						a[x][y].shift();
					}
				}
			}
			this.cz--;
			break;
		}
	};
	Acts.prototype.Reverse = function (axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		if (this.cx === 0 || this.cy === 0 || this.cz === 0)
			return;		// no point reversing empty array
		switch (axis) {
		case 0:	// X axis
			a.reverse();
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
				a[x].reverse();
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
				for (y = 0; y < this.cy; y++)
					a[x][y].reverse();
			this.cz--;
			break;
		}
	};
	function compareValues(va, vb)
	{
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			var sa = "" + va;
			var sb = "" + vb;
			if (sa < sb)
				return -1;
			else if (sa > sb)
				return 1;
			else
				return 0;
		}
	}
	Acts.prototype.Sort = function (axis)
	{
		var x = 0, y = 0, z = 0;
		var a = this.arr;
		if (this.cx === 0 || this.cy === 0 || this.cz === 0)
			return;		// no point sorting empty array
		switch (axis) {
		case 0:	// X axis
			a.sort(function (a, b) {
				return compareValues(a[0][0], b[0][0]);
			});
			break;
		case 1: // Y axis
			for ( ; x < this.cx; x++)
			{
				a[x].sort(function (a, b) {
					return compareValues(a[0], b[0]);
				});
			}
			break;
		case 2:	// Z axis
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].sort(compareValues);
				}
			}
			break;
		}
	};
	Acts.prototype.Delete = function (index, axis)
	{
		var x = 0, y = 0, z = 0;
		index = Math.floor(index);
		var a = this.arr;
		if (index < 0)
			return;
		switch (axis) {
		case 0:	// X axis
			if (index >= this.cx)
				break;
			freeArray(a[index]);
			a.splice(index, 1);
			this.cx--;
			break;
		case 1: // Y axis
			if (index >= this.cy)
				break;
			for ( ; x < this.cx; x++)
			{
				freeArray(a[x][index]);
				a[x].splice(index, 1);
			}
			this.cy--;
			break;
		case 2:	// Z axis
			if (index >= this.cz)
				break;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].splice(index, 1);
				}
			}
			this.cz--;
			break;
		}
	};
	Acts.prototype.Insert = function (value, index, axis)
	{
		var x = 0, y = 0, z = 0;
		index = Math.floor(index);
		var a = this.arr;
		if (index < 0)
			return;
		switch (axis) {
		case 0:	// X axis
			if (index > this.cx)
				return;
			x = index;
			a.splice(x, 0, allocArray());
			a[x].length = this.cy;
			for ( ; y < this.cy; y++)
			{
				a[x][y] = allocArray();
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cx++;
			break;
		case 1: // Y axis
			if (index > this.cy)
				return;
			for ( ; x < this.cx; x++)
			{
				y = index;
				a[x].splice(y, 0, allocArray());
				a[x][y].length = this.cz;
				for (z = 0; z < this.cz; z++)
					a[x][y][z] = value;
			}
			this.cy++;
			break;
		case 2:	// Z axis
			if (index > this.cz)
				return;
			for ( ; x < this.cx; x++)
			{
				for (y = 0; y < this.cy; y++)
				{
					a[x][y].splice(index, 0, value);
				}
			}
			this.cz++;
			break;
		}
	};
	Acts.prototype.JSONLoad = function (json_)
	{
		var o;
		try {
			o = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!o["c2array"])		// presumably not a c2array object
			return;
		var sz = o["size"];
		this.cx = sz[0];
		this.cy = sz[1];
		this.cz = sz[2];
		this.arr = o["data"];
	};
	Acts.prototype.JSONDownload = function (filename)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			var str = 'data:text/html,' + encodeURIComponent("<p><a download='" + filename + "' href=\"data:application/json,"
				+ encodeURIComponent(this.getAsJSON())
				+ "\">Download link</a></p>");
			window.open(str);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename;
			a.href = "data:application/json," + encodeURIComponent(this.getAsJSON());
			a.download = filename;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.At = function (ret, x, y_, z_)
	{
		var y = y_ || 0;
		var z = z_ || 0;
		ret.set_any(this.at(x, y, z));
	};
	Exps.prototype.Width = function (ret)
	{
		ret.set_int(this.cx);
	};
	Exps.prototype.Height = function (ret)
	{
		ret.set_int(this.cy);
	};
	Exps.prototype.Depth = function (ret)
	{
		ret.set_int(this.cz);
	};
	Exps.prototype.CurX = function (ret)
	{
		ret.set_int(this.forX);
	};
	Exps.prototype.CurY = function (ret)
	{
		ret.set_int(this.forY);
	};
	Exps.prototype.CurZ = function (ret)
	{
		ret.set_int(this.forZ);
	};
	Exps.prototype.CurValue = function (ret)
	{
		ret.set_any(this.at(this.forX, this.forY, this.forZ));
	};
	Exps.prototype.Front = function (ret)
	{
		ret.set_any(this.at(0, 0, 0));
	};
	Exps.prototype.Back = function (ret)
	{
		ret.set_any(this.at(this.cx - 1, 0, 0));
	};
	Exps.prototype.IndexOf = function (ret, v)
	{
		for (var i = 0; i < this.cx; i++)
		{
			if (this.arr[i][0][0] === v)
			{
				ret.set_int(i);
				return;
			}
		}
		ret.set_int(-1);
	};
	Exps.prototype.LastIndexOf = function (ret, v)
	{
		for (var i = this.cx - 1; i >= 0; i--)
		{
			if (this.arr[i][0][0] === v)
			{
				ret.set_int(i);
				return;
			}
		}
		ret.set_int(-1);
	};
	Exps.prototype.AsJSON = function (ret)
	{
		ret.set_string(this.getAsJSON());
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.CAMFTimeManager = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.CAMFTimeManager.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.CurrentInstanceToUse 	= null;
		this.m_OldTotalCheckValue	= 0;
		this.m_TimeManagerList 		= new Array();
	};
	instanceProto.onDestroy = function ()
	{
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"TimerList": this.m_TimeManagerList
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.m_TimeManagerList = o["TimerList"];
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
	/*
		TIME MANAGER
	*/
	instanceProto.ConvertHours			= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( ((Time/(60 * 1000))/60)%60);if(IntVariable < 0){IntVariable = 0;}if(IntVariable < 10 && ShowDouble){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.ConvertMinutes 		= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( (Time/(60 * 1000))%60);if(IntVariable < 0 ){IntVariable = 0;}if(IntVariable < 10 && ShowDouble){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.ConvertSeconds 		= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( (Time/1000)%60);if(IntVariable < 0){IntVariable = 0;}if(IntVariable < 10 && ShowDouble){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.ConvertMilliseconds	= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( Time%1000);if(IntVariable < 0){IntVariable = 0;}if(IntVariable < 100){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.GetHours			= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( ((Time/(this.CurrentInstanceToUse.SecondBaseValue * 1000))/this.CurrentInstanceToUse.MinuteBaseValue)%this.CurrentInstanceToUse.MinuteBaseValue);if(IntVariable < 0){IntVariable = 0;}if(IntVariable < 10 && ShowDouble){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.GetMinutes 		= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( (Time/(this.CurrentInstanceToUse.SecondBaseValue * 1000))%this.CurrentInstanceToUse.MinuteBaseValue);if(IntVariable < 0 ){IntVariable = 0;}if(IntVariable < 10 && ShowDouble){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.GetSeconds 		= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( (Time/this.CurrentInstanceToUse.MillisecondBaseValue)%this.CurrentInstanceToUse.SecondBaseValue);if(IntVariable < 0){IntVariable = 0;}if(IntVariable < 10 && ShowDouble){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.GetMilliseconds	= function(Time, ShowDouble)	{var ReturnString = "";var IntVariable = parseInt( Time%this.CurrentInstanceToUse.MillisecondBaseValue);if(IntVariable < 0){IntVariable = 0;}if(IntVariable < 100){ReturnString += "0";}ReturnString += IntVariable;return ReturnString;}
	instanceProto.CalculateTime		= function(CurrentInstance)
	{
		if(CurrentInstance.IsStopped == true){CurrentInstance.PauseValue = 0;return;}
		if(CurrentInstance.IsActive == false)
		{
			CurrentInstance.PauseValue	= (this.runtime.kahanTime.sum * 1000) - CurrentInstance.PauseStartValue;
			return;
		}
		var CurrentTime = (this.runtime.kahanTime.sum * 1000) - CurrentInstance.PauseTotal;
		if(CurrentInstance.CountDown == true)
		{
			CurrentInstance.TimeResult	= (CurrentInstance.TimeManagerEndTime) - CurrentTime;
			if(CurrentInstance.TimeResult <= 0)
			{
				CurrentInstance.TimeResult = 0;
			}
		}
		if(CurrentInstance.CountUp == true)
		{
			CurrentInstance.TimeResult = CurrentTime - CurrentInstance.TimeManagerStartTime;
			if(CurrentInstance.TimeResult >= CurrentInstance.TimeManagerEndTime && CurrentInstance.TimeManagerEndTime != 0)
			{
				CurrentInstance.TimeResult = CurrentInstance.TimeManagerEndTime;
			}
		}
		return;
	}
	instanceProto.GetInstance		= function(SearchString)		{this.CurrentInstanceToUse = null;for(var i = 0; i < this.m_TimeManagerList.length; i++){if(this.m_TimeManagerList[i].TimeManagerLabelName == SearchString){this.CurrentInstanceToUse = this.m_TimeManagerList[i];return;}}this.CurrentInstanceToUse = null;return;}
	instanceProto.ResetTimeManager	= function(CurrentInstance)
	{
		if(CurrentInstance == null){return;}
		if(CurrentInstance.CountDown == true)
		{
			var TempValue = CurrentInstance.TimeLimit;
			CurrentInstance.TimeManagerStartTime = (this.runtime.kahanTime.sum * 1000) - CurrentInstance.TimeManagerExtraStartTime;
			CurrentInstance.TimeManagerEndTime = (TempValue + CurrentInstance.TimeManagerStartTime);
			CurrentInstance.TimeResult = TempValue;
		}
		if(CurrentInstance.CountUp == true && CurrentInstance.TimeManagerEndTime == 0)
		{
			CurrentInstance.TimeManagerStartTime 	= (this.runtime.kahanTime.sum * 1000)  - CurrentInstance.TimeManagerExtraStartTime;
			CurrentInstance.TimeManagerEndTime = 0;
			CurrentInstance.TimeResult = 0;
		}
		if(CurrentInstance.CountUp == true && CurrentInstance.TimeManagerEndTime != 0)
		{
			CurrentInstance.TimeManagerStartTime = (this.runtime.kahanTime.sum * 1000) - CurrentInstance.TimeManagerExtraStartTime;
			CurrentInstance.TimeManagerEndTime = CurrentInstance.TimeLimit;
			CurrentInstance.TimeResult = 0;
		}
		CurrentInstance.PauseValue = 0;
		CurrentInstance.PauseTotal	= 0;
		CurrentInstance.PauseStartValue	= (this.runtime.kahanTime.sum * 1000)  - CurrentInstance.TimeManagerExtraStartTime;
	}
	instanceProto.TimeManager 		= function(LabelStr, StartTime, EndTime, TimeLimit, ExtraStartTime)
	{
		this.TimeManagerLabelName		= LabelStr;
		this.TimeManagerStartTime		= StartTime;
		this.TimeManagerEndTime			= EndTime;
		this.TimeManagerExtraStartTime	= ExtraStartTime;
		this.CountDown					= false;
		this.CountUp					= false;
		this.IsActive					= true;
		this.IsStopped					= false;
		this.TimeResult					= 0.0;
		this.TimeLimit					= TimeLimit;
		this.PauseStartValue			= 0.0;
		this.PauseValue					= 0.0;
		this.PauseTotal					= 0.0;
		this.MinuteBaseValue			= 60;
		this.SecondBaseValue			= 60;
		this.MillisecondBaseValue		= 1000;
	}
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.IsCounterRunning	= function(LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return false;}if(this.CurrentInstanceToUse.IsStopped == false){return true;}return false;}
	cnds.IsCounterPaused	= function(LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return false;}if(this.CurrentInstanceToUse.IsActive == true){return false;}return true;}
	cnds.IsCounterFinished 	= function (LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return false;}if(this.CurrentInstanceToUse.IsStopped == true || this.CurrentInstanceToUse.IsActive == false){return false;}this.CalculateTime(this.CurrentInstanceToUse);if(this.CurrentInstanceToUse.CountDown == true && this.CurrentInstanceToUse.TimeResult <= 0){return true;}if(this.CurrentInstanceToUse.CountUp == true && this.CurrentInstanceToUse.TimeManagerEndTime != 0){if(this.CurrentInstanceToUse.TimeResult >= this.CurrentInstanceToUse.TimeManagerEndTime){return true;}}return false;};
	cnds.IsCounterStopped	= function(LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return false;} return this.CurrentInstanceToUse.IsStopped;}
	cnds.CheckCounterValue	= function(LabelStr, CheckOption, Hours, Minutes, Seconds, Milliseconds)
	{
		this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return false;}
		var TotalCheckValue = (Hours * 3600000) + (Minutes * 60000) + (Seconds * 1000) + Milliseconds;
		this.CalculateTime(this.CurrentInstanceToUse)
		switch(CheckOption)
		{
			case 0:
				if(this.CurrentInstanceToUse.TimeResult < TotalCheckValue)
				{
					this.m_OldTotalCheckValue = TotalCheckValue;
					return true;
				}
				break;
			case 1:
				if(this.CurrentInstanceToUse.TimeResult > TotalCheckValue)
				{
					this.m_OldTotalCheckValue = TotalCheckValue;
					return true;
				}
				break;
			case 2:
				if(this.CurrentInstanceToUse.TimeResult != TotalCheckValue)
				{
					this.m_OldTotalCheckValue = TotalCheckValue;
					return true;
				}
				break;
			case 3:
				if(this.CurrentInstanceToUse.TimeResult == TotalCheckValue)
				{
					this.m_OldTotalCheckValue = TotalCheckValue;
					return true;
				}
				if(this.CurrentInstanceToUse.TimeResult > this.m_OldTotalCheckValue)
				{
					if(this.CurrentInstanceToUse.TimeResult > TotalCheckValue)
					{
						this.m_OldTotalCheckValue = TotalCheckValue;
						return true;
					}
				}
				break;
			case 4:
				if(this.CurrentInstanceToUse.TimeResult <= TotalCheckValue)
				{
					this.m_OldTotalCheckValue = TotalCheckValue;
					return true;
				}
				break;
			case 5:
				if(this.CurrentInstanceToUse.TimeResult >= TotalCheckValue)
				{
					this.m_OldTotalCheckValue = TotalCheckValue;
					return true;
				}
				break;
		}
		this.m_OldTotalCheckValue = TotalCheckValue;
		return false;
	}
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetMinuteBaseValue				= function(LabelStr, BaseValue)						{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}this.CurrentInstanceToUse.MinuteBaseValue = BaseValue;}
	acts.SetSecondBaseValue				= function(LabelStr, BaseValue)						{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}this.CurrentInstanceToUse.SecondBaseValue = BaseValue;}
	acts.SetMillisecondBaseValue		= function(LabelStr, BaseValue)						{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}this.CurrentInstanceToUse.MillisecondBaseValue = BaseValue;}
	acts.StopTimeCount					= function(LabelStr)								{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}this.ResetTimeManager(this.CurrentInstanceToUse);this.CurrentInstanceToUse.IsActive = true;this.CurrentInstanceToUse.IsStopped = true;return;}
	acts.StartTimeCount					= function(LabelStr)								{this.CurrentInstanceToUse = null;this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}this.ResetTimeManager(this.CurrentInstanceToUse);this.CurrentInstanceToUse.IsActive = true;this.CurrentInstanceToUse.IsStopped = false;return;}
	acts.DestroyTimeManagerInstances	= function()										{this.m_TimeManagerList.length = 0;return;}
	acts.PauseTimeCount					= function(LabelStr, CurrentChoice)					{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}if(CurrentChoice == 0 && this.CurrentInstanceToUse.IsActive == true){this.CurrentInstanceToUse.IsActive = false;this.CurrentInstanceToUse.PauseStartValue	 = (this.runtime.kahanTime.sum * 1000);}else if(CurrentChoice == 1 && this.CurrentInstanceToUse.IsActive == false){this.CurrentInstanceToUse.IsActive = true;this.CurrentInstanceToUse.PauseTotal += this.CurrentInstanceToUse.PauseValue;}this.CurrentInstanceToUse.PauseValue	= 0.0;return;}
	acts.ResetTimeCount					= function(LabelStr)								{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}this.ResetTimeManager(this.CurrentInstanceToUse);return;}
	acts.TimeCountDown 					= function (CountdownTime, LabelStr, ActiveState)	{/*First I need to check if its already in the array. If its there, I delete and remove if from the array and re-add it to the array.*/for(var i = 0; i < this.m_TimeManagerList.length; i++){if(this.m_TimeManagerList[i].TimeManagerLabelName == LabelStr){this.m_TimeManagerList.splice (i, 1);break;}}var StartTime = (this.runtime.kahanTime.sum * 1000);var EndTime = (CountdownTime + StartTime);var TempTimeManager = new this.TimeManager(LabelStr, StartTime, EndTime, CountdownTime, 0.0);TempTimeManager.CountDown = true;TempTimeManager.IsStopped 	= ActiveState;this.ResetTimeManager(TempTimeManager);this.m_TimeManagerList.push(TempTimeManager);  return;};
	acts.TimeCountUp 					= function (LabelStr, ActiveState)					{/*First I need to check if its already in the array. If its there, I delete and remove if from the array and re-add it to the array.*/for(var i = 0; i < this.m_TimeManagerList.length; i++){if(this.m_TimeManagerList[i].TimeManagerLabelName == LabelStr){this.m_TimeManagerList.splice (i, 1);break;}}var StartTime = (this.runtime.kahanTime.sum * 1000);var EndTime	= 0;var TempTimeManager = new this.TimeManager(LabelStr, StartTime, EndTime, 0.0, 0.0);TempTimeManager.CountUp	= true;TempTimeManager.IsStopped = ActiveState;this.ResetTimeManager(TempTimeManager);this.m_TimeManagerList.push(TempTimeManager);return;};
	acts.TimeCountUpWithStartValue		= function (LabelStr, ActiveState, StartValue)		{/*First I need to check if its already in the array. If its there, I delete and remove if from the array and re-add it to the array.*/for(var i = 0; i < this.m_TimeManagerList.length; i++){if(this.m_TimeManagerList[i].TimeManagerLabelName == LabelStr){this.m_TimeManagerList.splice (i, 1);break;}}var StartTime = ((this.runtime.kahanTime.sum * 1000) - StartValue);var EndTime = 0;var TempTimeManager = new this.TimeManager(LabelStr, StartTime, EndTime, 0.0, StartValue);TempTimeManager.CountUp	= true;TempTimeManager.IsStopped = ActiveState;this.ResetTimeManager(TempTimeManager);this.m_TimeManagerList.push(TempTimeManager);return;};
	acts.TimeCountUpWithLimit 			= function (TimeLimit, LabelStr, ActiveState)		{/*First I need to check if its already in the array. If its there, I delete and remove if from the array and re-add it to the array.*/for(var i = 0; i < this.m_TimeManagerList.length; i++){if(this.m_TimeManagerList[i].TimeManagerLabelName == LabelStr){this.m_TimeManagerList.splice (i, 1);break;}}var StartTime = (this.runtime.kahanTime.sum * 1000);var EndTime	= TimeLimit;var TempTimeManager = new this.TimeManager(LabelStr, StartTime, EndTime, TimeLimit, 0.0, 0.0);TempTimeManager.CountUp	= true;TempTimeManager.IsStopped = ActiveState;this.ResetTimeManager(TempTimeManager);this.m_TimeManagerList.push(TempTimeManager);return;};
	acts.RemoveSingleCounter			= function (LabelStr)								{for(var i = 0; i < this.m_TimeManagerList.length; i++){if(this.m_TimeManagerList[i].TimeManagerLabelName == LabelStr){this.m_TimeManagerList.splice(i, 1);return;}}return;}
	acts.CalculateTimeValue				= function (LabelStr, CalculationType, Value)
	{
		this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return;}
		switch(CalculationType)
		{
			case 0: /* Addition */
				if(this.CurrentInstanceToUse.CountDown == true)
				{
					this.CurrentInstanceToUse.TimeManagerEndTime += Value;
				}
				else
				{
					this.CurrentInstanceToUse.TimeManagerStartTime -= Value;
				}
				break;
			case 1: /* Subtraction */
				if(this.CurrentInstanceToUse.CountDown == true)
				{
					this.CurrentInstanceToUse.TimeManagerEndTime -= Value;
				}
				else
				{
					this.CurrentInstanceToUse.TimeManagerStartTime += Value;
					this.CalculateTime(this.CurrentInstanceToUse);
					if(this.CurrentInstanceToUse.TimeResult < 0)
					{
						this.ResetTimeManager(this.CurrentInstanceToUse);
					}
				}
				break;
			default:
				break;
		}
	}
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.HMSMM 					= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetHours(this.CurrentInstanceToUse.TimeResult, false) + ":" + this.GetMinutes(this.CurrentInstanceToUse.TimeResult, false) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, false) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.HMSSMM 				= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetHours(this.CurrentInstanceToUse.TimeResult, false) + ":" + this.GetMinutes(this.CurrentInstanceToUse.TimeResult, false) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.HMMSSMM 				= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetHours(this.CurrentInstanceToUse.TimeResult, false) + ":" + this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.HHMMSSMM 				= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetHours(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.HHMMSS 				= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetHours(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true);return ret.set_string(ReturnString);};
	exps.MMSSMM 				= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.SSMM 					= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.MMSS 					= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true);return ret.set_string(ReturnString);};
	exps.Seconds 				= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true);return ret.set_string(ReturnString);};
	exps.SingleSeconds			= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetSeconds(this.CurrentInstanceToUse.TimeResult, false);return ret.set_string(ReturnString);};
	exps.Milliseconds 			= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.GetTimeValue 			= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_int(0);}this.CalculateTime(this.CurrentInstanceToUse);var ReturnValue = this.CurrentInstanceToUse.TimeResult;return ret.set_int(ReturnValue);};
	/* BACKWARD COMPABILITY EXPRESSIONS - DO NOT ADD NEW FUNCTIONS */
	exps.GetStringHMSMTimeValue 	= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetHours(this.CurrentInstanceToUse.TimeResult, false) + ":" + this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.GetStringHMSTimeValue 		= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetHours(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true);return ret.set_string(ReturnString);};
	exps.GetStringMSMTimeValue 		= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.GetStringSMTimeValue 		= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.GetStringMSTimeValue 		= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetMinutes(this.CurrentInstanceToUse.TimeResult, true) + ":" + this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true);return ret.set_string(ReturnString);};
	exps.GetStringSTimeValue 		= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetSeconds(this.CurrentInstanceToUse.TimeResult, true);return ret.set_string(ReturnString);};
	exps.GetStringMTimeValue 		= function (ret, LabelStr)	{this.GetInstance(LabelStr);if(this.CurrentInstanceToUse == null){return ret.set_string("");}this.CalculateTime(this.CurrentInstanceToUse);var ReturnString = this.GetMilliseconds(this.CurrentInstanceToUse.TimeResult);return ret.set_string(ReturnString);};
	exps.ConvertNumberToHHMMSSMM	= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, true) + ":" + instanceProto.ConvertMinutes(TimeValue, true) + ":" + instanceProto.ConvertSeconds(TimeValue, true) + ":" + instanceProto.ConvertMilliseconds(TimeValue, true);ret.set_string(ReturnString);}
	exps.ConvertNumberToHMMSSMM		= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, false) + ":" + instanceProto.ConvertMinutes(TimeValue, true) + ":" + instanceProto.ConvertSeconds(TimeValue, true) + ":" + instanceProto.ConvertMilliseconds(TimeValue, true);ret.set_string(ReturnString);}
	exps.ConvertNumberToHMSSMM		= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, false) + ":" + instanceProto.ConvertMinutes(TimeValue, false) + ":" + instanceProto.ConvertSeconds(TimeValue, true) + ":" + instanceProto.ConvertMilliseconds(TimeValue, true);ret.set_string(ReturnString);}
	exps.ConvertNumberToHMSMM		= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, true) + ":" + instanceProto.ConvertMinutes(TimeValue, false) + ":" + instanceProto.ConvertSeconds(TimeValue, false) + ":" + instanceProto.ConvertMilliseconds(TimeValue, true);ret.set_string(ReturnString);}
	exps.ConvertNumberToHHMMSS		= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, true) + ":" + instanceProto.ConvertMinutes(TimeValue, true) + ":" + instanceProto.ConvertSeconds(TimeValue, true);ret.set_string(ReturnString);}
	exps.ConvertNumberToHMMSS		= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, false) + ":" + instanceProto.ConvertMinutes(TimeValue, true) + ":" + instanceProto.ConvertSeconds(TimeValue, true);ret.set_string(ReturnString);}
	exps.ConvertNumberToHMSS		= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, false) + ":" + instanceProto.ConvertMinutes(TimeValue, false) + ":" + instanceProto.ConvertSeconds(TimeValue, true);ret.set_string(ReturnString);}
	exps.ConvertNumberToHMS			= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertHours(TimeValue, false) + ":" + instanceProto.ConvertMinutes(TimeValue, false) + ":" + instanceProto.ConvertSeconds(TimeValue, false);ret.set_string(ReturnString);}
	exps.ConvertNumberToMMSSMM		= function (ret, TimeValue)	{var ReturnString = instanceProto.ConvertMinutes(TimeValue, true) + ":" + instanceProto.ConvertSeconds(TimeValue, true) + ":" + instanceProto.ConvertMilliseconds(TimeValue, true);ret.set_string(ReturnString);}
}());
;
;
cr.plugins_.Keyboard = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Keyboard.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.keyMap = new Array(256);	// stores key up/down state
		this.usedKeys = new Array(256);
		this.triggerKey = 0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).keydown(
				function(info) {
					self.onKeyDown(info);
				}
			);
			jQuery(document).keyup(
				function(info) {
					self.onKeyUp(info);
				}
			);
		}
	};
	var keysToBlockWhenFramed = [32, 33, 34, 35, 36, 37, 38, 39, 40, 44];
	instanceProto.onKeyDown = function (info)
	{
		var alreadyPreventedDefault = false;
		if (window != window.top && keysToBlockWhenFramed.indexOf(info.which) > -1)
		{
			info.preventDefault();
			alreadyPreventedDefault = true;
			info.stopPropagation();
		}
		if (this.keyMap[info.which])
		{
			if (this.usedKeys[info.which] && !alreadyPreventedDefault)
				info.preventDefault();
			return;
		}
		this.keyMap[info.which] = true;
		this.triggerKey = info.which;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKey, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKey, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCode, this);
		this.runtime.isInUserInputEvent = false;
		if (eventRan || eventRan2)
		{
			this.usedKeys[info.which] = true;
			if (!alreadyPreventedDefault)
				info.preventDefault();
		}
	};
	instanceProto.onKeyUp = function (info)
	{
		this.keyMap[info.which] = false;
		this.triggerKey = info.which;
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKeyReleased, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyReleased, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCodeReleased, this);
		this.runtime.isInUserInputEvent = false;
		if (eventRan || eventRan2 || this.usedKeys[info.which])
		{
			this.usedKeys[info.which] = true;
			info.preventDefault();
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return { "triggerKey": this.triggerKey };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.triggerKey = o["triggerKey"];
	};
	function Cnds() {};
	Cnds.prototype.IsKeyDown = function(key)
	{
		return this.keyMap[key];
	};
	Cnds.prototype.OnKey = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnAnyKey = function(key)
	{
		return true;
	};
	Cnds.prototype.OnAnyKeyReleased = function(key)
	{
		return true;
	};
	Cnds.prototype.OnKeyReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.IsKeyCodeDown = function(key)
	{
		key = Math.floor(key);
		if (key < 0 || key >= this.keyMap.length)
			return false;
		return this.keyMap[key];
	};
	Cnds.prototype.OnKeyCode = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnKeyCodeReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastKeyCode = function (ret)
	{
		ret.set_int(this.triggerKey);
	};
	function fixedStringFromCharCode(kc)
	{
		kc = Math.floor(kc);
		switch (kc) {
		case 8:		return "backspace";
		case 9:		return "tab";
		case 13:	return "enter";
		case 16:	return "shift";
		case 17:	return "control";
		case 18:	return "alt";
		case 19:	return "pause";
		case 20:	return "capslock";
		case 27:	return "esc";
		case 33:	return "pageup";
		case 34:	return "pagedown";
		case 35:	return "end";
		case 36:	return "home";
		case 37:	return "←";
		case 38:	return "↑";
		case 39:	return "→";
		case 40:	return "↓";
		case 45:	return "insert";
		case 46:	return "del";
		case 91:	return "left window key";
		case 92:	return "right window key";
		case 93:	return "select";
		case 96:	return "numpad 0";
		case 97:	return "numpad 1";
		case 98:	return "numpad 2";
		case 99:	return "numpad 3";
		case 100:	return "numpad 4";
		case 101:	return "numpad 5";
		case 102:	return "numpad 6";
		case 103:	return "numpad 7";
		case 104:	return "numpad 8";
		case 105:	return "numpad 9";
		case 106:	return "numpad *";
		case 107:	return "numpad +";
		case 109:	return "numpad -";
		case 110:	return "numpad .";
		case 111:	return "numpad /";
		case 112:	return "F1";
		case 113:	return "F2";
		case 114:	return "F3";
		case 115:	return "F4";
		case 116:	return "F5";
		case 117:	return "F6";
		case 118:	return "F7";
		case 119:	return "F8";
		case 120:	return "F9";
		case 121:	return "F10";
		case 122:	return "F11";
		case 123:	return "F12";
		case 144:	return "numlock";
		case 145:	return "scroll lock";
		case 186:	return ";";
		case 187:	return "=";
		case 188:	return ",";
		case 189:	return "-";
		case 190:	return ".";
		case 191:	return "/";
		case 192:	return "'";
		case 219:	return "[";
		case 220:	return "\\";
		case 221:	return "]";
		case 222:	return "#";
		case 223:	return "`";
		default:	return String.fromCharCode(kc);
		}
	};
	Exps.prototype.StringFromKeyCode = function (ret, kc)
	{
		ret.set_string(fixedStringFromCharCode(kc));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Kongregate = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Kongregate.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var kongregate = null;
	var kRuntime = null;
	var kInst = null;
	var kUserID = 0;
	var kUserName = "Guest";
	function OnKongregateInPageLogin()
	{
		kUserID = kongregate["services"]["getUserId"]();
		kUserName = kongregate["services"]["getUsername"]();
		kRuntime.trigger(cr.plugins_.Kongregate.prototype.cnds.OnLogin, kInst);
	};
	function KongregateLoadComplete()
	{
		kongregate = window["kongregateAPI"]["getAPI"]();
		kongregate["services"]["connect"]();
		kongregate["services"]["addEventListener"]("login", OnKongregateInPageLogin);
		kUserID = kongregate["services"]["getUserId"]();
		kUserName = kongregate["services"]["getUsername"]();
		if (kUserID > 0)
			kRuntime.trigger(cr.plugins_.Kongregate.prototype.cnds.OnLogin, kInst);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		kRuntime = this.runtime;
		kInst = this;
		if (!this.runtime.isDomFree && typeof window["kongregateAPI"] !== "undefined")
			window["kongregateAPI"]["loadAPI"](KongregateLoadComplete);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
	};
	instanceProto.onLayoutChange = function ()
	{
		if (kUserID > 0)
			kRuntime.trigger(cr.plugins_.Kongregate.prototype.cnds.OnLogin, kInst);
	};
	function Cnds() {};
	Cnds.prototype.IsGuest = function ()
	{
		if (!kongregate)
			return true;		// preview mode
		return kongregate["services"]["isGuest"]();
	};
	Cnds.prototype.OnLogin = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.ShowRegBox = function ()
	{
		if (kongregate && kUserID === 0)
			kongregate["services"]["showRegistrationBox"]();
	};
	Acts.prototype.SubmitStat = function (name_, value_)
	{
		if (kongregate)
			kongregate["stats"]["submit"](name_, value_);
	};
	Acts.prototype.ShowShoutBox = function (msg)
	{
		if (kUserID > 0)
			kongregate["services"]["showShoutBox"](msg);
	};
	Acts.prototype.ShowSignInBox = function ()
	{
		if (kongregate && kUserID === 0)
			kongregate["services"]["showSignInBox"]();
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.UserID = function (ret)
	{
		ret.set_int(kUserID);
	};
	Exps.prototype.UserName = function (ret)
	{
		ret.set_string(kUserName);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Particles = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Particles.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.webGL_texture = null;
		this.runtime.wait_for_textures.push(this.texture_img);
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.webGL_texture || !this.runtime.glwrap)
			return;
		this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	function Particle(owner)
	{
		this.owner = owner;
		this.active = false;
		this.x = 0;
		this.y = 0;
		this.speed = 0;
		this.angle = 0;
		this.opacity = 1;
		this.grow = 0;
		this.size = 0;
		this.gs = 0;			// gravity speed
		this.age = 0;
		cr.seal(this);
	};
	Particle.prototype.init = function ()
	{
		var owner = this.owner;
		this.x = owner.x - (owner.xrandom / 2) + (Math.random() * owner.xrandom);
		this.y = owner.y - (owner.yrandom / 2) + (Math.random() * owner.yrandom);
		this.speed = owner.initspeed - (owner.speedrandom / 2) + (Math.random() * owner.speedrandom);
		this.angle = owner.angle - (owner.spraycone / 2) + (Math.random() * owner.spraycone);
		this.opacity = owner.initopacity;
		this.size = owner.initsize - (owner.sizerandom / 2) + (Math.random() * owner.sizerandom);
		this.grow = owner.growrate - (owner.growrandom / 2) + (Math.random() * owner.growrandom);
		this.gs = 0;
		this.age = 0;
	};
	Particle.prototype.tick = function (dt)
	{
		var owner = this.owner;
		this.x += Math.cos(this.angle) * this.speed * dt;
		this.y += Math.sin(this.angle) * this.speed * dt;
		this.y += this.gs * dt;
		this.speed += owner.acc * dt;
		this.size += this.grow * dt;
		this.gs += owner.g * dt;
		this.age += dt;
		if (this.size < 1)
		{
			this.active = false;
			return;
		}
		if (owner.lifeanglerandom !== 0)
			this.angle += (Math.random() * owner.lifeanglerandom * dt) - (owner.lifeanglerandom * dt / 2);
		if (owner.lifespeedrandom !== 0)
			this.speed += (Math.random() * owner.lifespeedrandom * dt) - (owner.lifespeedrandom * dt / 2);
		if (owner.lifeopacityrandom !== 0)
		{
			this.opacity += (Math.random() * owner.lifeopacityrandom * dt) - (owner.lifeopacityrandom * dt / 2);
			if (this.opacity < 0)
				this.opacity = 0;
			else if (this.opacity > 1)
				this.opacity = 1;
		}
		if (owner.destroymode <= 1 && this.age >= owner.timeout)
		{
			this.active = false;
		}
		if (owner.destroymode === 2 && this.speed <= 0)
		{
			this.active = false;
		}
	};
	Particle.prototype.draw = function (ctx)
	{
		var curopacity = this.owner.opacity * this.opacity;
		if (curopacity === 0)
			return;
		if (this.owner.destroymode === 0)
			curopacity *= 1 - (this.age / this.owner.timeout);
		ctx.globalAlpha = curopacity;
		var drawx = this.x - this.size / 2;
		var drawy = this.y - this.size / 2;
		if (this.owner.runtime.pixel_rounding)
		{
			drawx = (drawx + 0.5) | 0;
			drawy = (drawy + 0.5) | 0;
		}
		ctx.drawImage(this.owner.type.texture_img, drawx, drawy, this.size, this.size);
	};
	Particle.prototype.drawGL = function (glw)
	{
		var curopacity = this.owner.opacity * this.opacity;
		if (this.owner.destroymode === 0)
			curopacity *= 1 - (this.age / this.owner.timeout);
		var drawsize = this.size;
		var scaleddrawsize = drawsize * this.owner.particlescale;
		var drawx = this.x - drawsize / 2;
		var drawy = this.y - drawsize / 2;
		if (this.owner.runtime.pixel_rounding)
		{
			drawx = (drawx + 0.5) | 0;
			drawy = (drawy + 0.5) | 0;
		}
		if (scaleddrawsize < 1 || curopacity === 0)
			return;
		if (scaleddrawsize < glw.minPointSize || scaleddrawsize > glw.maxPointSize)
		{
			glw.setOpacity(curopacity);
			glw.quad(drawx, drawy, drawx + drawsize, drawy, drawx + drawsize, drawy + drawsize, drawx, drawy + drawsize);
		}
		else
			glw.point(this.x, this.y, scaleddrawsize, curopacity);
	};
	Particle.prototype.left = function ()
	{
		return this.x - this.size / 2;
	};
	Particle.prototype.right = function ()
	{
		return this.x + this.size / 2;
	};
	Particle.prototype.top = function ()
	{
		return this.y - this.size / 2;
	};
	Particle.prototype.bottom = function ()
	{
		return this.y + this.size / 2;
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var deadparticles = [];
	instanceProto.onCreate = function()
	{
		var props = this.properties;
		this.rate = props[0];
		this.spraycone = cr.to_radians(props[1]);
		this.spraytype = props[2];			// 0 = continuous, 1 = one-shot
		this.spraying = true;				// for continuous mode only
		this.initspeed = props[3];
		this.initsize = props[4];
		this.initopacity = props[5] / 100.0;
		this.growrate = props[6];
		this.xrandom = props[7];
		this.yrandom = props[8];
		this.speedrandom = props[9];
		this.sizerandom = props[10];
		this.growrandom = props[11];
		this.acc = props[12];
		this.g = props[13];
		this.lifeanglerandom = props[14];
		this.lifespeedrandom = props[15];
		this.lifeopacityrandom = props[16];
		this.destroymode = props[17];		// 0 = fade, 1 = timeout, 2 = stopped
		this.timeout = props[18];
		this.particleCreateCounter = 0;
		this.particlescale = 1;
		this.particleBoxLeft = this.x;
		this.particleBoxTop = this.y;
		this.particleBoxRight = this.x;
		this.particleBoxBottom = this.y;
		this.add_bbox_changed_callback(function (self) {
			self.bbox.set(self.particleBoxLeft, self.particleBoxTop, self.particleBoxRight, self.particleBoxBottom);
			self.bquad.set_from_rect(self.bbox);
			self.bbox_changed = false;
		});
		if (!this.recycled)
			this.particles = [];
		this.runtime.tickMe(this);
		this.type.loadTextures();
		if (this.spraytype === 1)
		{
			for (var i = 0; i < this.rate; i++)
				this.allocateParticle().opacity = 0;
		}
		this.first_tick = true;		// for re-init'ing one-shot particles on first tick so they assume any new angle/position
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"r": this.rate,
			"sc": this.spraycone,
			"st": this.spraytype,
			"s": this.spraying,
			"isp": this.initspeed,
			"isz": this.initsize,
			"io": this.initopacity,
			"gr": this.growrate,
			"xr": this.xrandom,
			"yr": this.yrandom,
			"spr": this.speedrandom,
			"szr": this.sizerandom,
			"grnd": this.growrandom,
			"acc": this.acc,
			"g": this.g,
			"lar": this.lifeanglerandom,
			"lsr": this.lifespeedrandom,
			"lor": this.lifeopacityrandom,
			"dm": this.destroymode,
			"to": this.timeout,
			"pcc": this.particleCreateCounter,
			"ft": this.first_tick,
			"p": []
		};
		var i, len, p;
		var arr = o["p"];
		for (i = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			arr.push([p.x, p.y, p.speed, p.angle, p.opacity, p.grow, p.size, p.gs, p.age]);
		}
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.rate = o["r"];
		this.spraycone = o["sc"];
		this.spraytype = o["st"];
		this.spraying = o["s"];
		this.initspeed = o["isp"];
		this.initsize = o["isz"];
		this.initopacity = o["io"];
		this.growrate = o["gr"];
		this.xrandom = o["xr"];
		this.yrandom = o["yr"];
		this.speedrandom = o["spr"];
		this.sizerandom = o["szr"];
		this.growrandom = o["grnd"];
		this.acc = o["acc"];
		this.g = o["g"];
		this.lifeanglerandom = o["lar"];
		this.lifespeedrandom = o["lsr"];
		this.lifeopacityrandom = o["lor"];
		this.destroymode = o["dm"];
		this.timeout = o["to"];
		this.particleCreateCounter = o["pcc"];
		this.first_tick = o["ft"];
		deadparticles.push.apply(deadparticles, this.particles);
		this.particles.length = 0;
		var i, len, p, d;
		var arr = o["p"];
		for (i = 0, len = arr.length; i < len; i++)
		{
			p = this.allocateParticle();
			d = arr[i];
			p.x = d[0];
			p.y = d[1];
			p.speed = d[2];
			p.angle = d[3];
			p.opacity = d[4];
			p.grow = d[5];
			p.size = d[6];
			p.gs = d[7];
			p.age = d[8];
		}
	};
	instanceProto.onDestroy = function ()
	{
		deadparticles.push.apply(deadparticles, this.particles);
		this.particles.length = 0;
	};
	instanceProto.allocateParticle = function ()
	{
		var p;
		if (deadparticles.length)
		{
			p = deadparticles.pop();
			p.owner = this;
		}
		else
			p = new Particle(this);
		this.particles.push(p);
		p.active = true;
		return p;
	};
	instanceProto.tick = function()
	{
		var dt = this.runtime.getDt(this);
		var i, len, p, n, j;
		if (this.spraytype === 0 && this.spraying)
		{
			this.particleCreateCounter += dt * this.rate;
			n = cr.floor(this.particleCreateCounter);
			this.particleCreateCounter -= n;
			for (i = 0; i < n; i++)
			{
				p = this.allocateParticle();
				p.init();
			}
		}
		this.particleBoxLeft = this.x;
		this.particleBoxTop = this.y;
		this.particleBoxRight = this.x;
		this.particleBoxBottom = this.y;
		for (i = 0, j = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			this.particles[j] = p;
			this.runtime.redraw = true;
			if (this.spraytype === 1 && this.first_tick)
				p.init();
			p.tick(dt);
			if (!p.active)
			{
				deadparticles.push(p);
				continue;
			}
			if (p.left() < this.particleBoxLeft)
				this.particleBoxLeft = p.left();
			if (p.right() > this.particleBoxRight)
				this.particleBoxRight = p.right();
			if (p.top() < this.particleBoxTop)
				this.particleBoxTop = p.top();
			if (p.bottom() > this.particleBoxBottom)
				this.particleBoxBottom = p.bottom();
			j++;
		}
		this.particles.length = j;
		this.set_bbox_changed();
		this.first_tick = false;
		if (this.spraytype === 1 && this.particles.length === 0)
			this.runtime.DestroyInstance(this);
	};
	instanceProto.draw = function (ctx)
	{
		var i, len, p, layer = this.layer;
		for (i = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			if (p.right() >= layer.viewLeft && p.bottom() >= layer.viewTop && p.left() <= layer.viewRight && p.top() <= layer.viewBottom)
			{
				p.draw(ctx);
			}
		}
	};
	instanceProto.drawGL = function (glw)
	{
		this.particlescale = this.layer.getScale();
		glw.setTexture(this.type.webGL_texture);
		var i, len, p, layer = this.layer;
		for (i = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			if (p.right() >= layer.viewLeft && p.bottom() >= layer.viewTop && p.left() <= layer.viewRight && p.top() <= layer.viewBottom)
			{
				p.drawGL(glw);
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.IsSpraying = function ()
	{
		return this.spraying;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpraying = function (set_)
	{
		this.spraying = (set_ !== 0);
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.SetRate = function (x)
	{
		this.rate = x;
		var diff, i;
		if (this.spraytype === 1 && this.first_tick)
		{
			if (x < this.particles.length)
			{
				diff = this.particles.length - x;
				for (i = 0; i < diff; i++)
					deadparticles.push(this.particles.pop());
			}
			else if (x > this.particles.length)
			{
				diff = x - this.particles.length;
				for (i = 0; i < diff; i++)
					this.allocateParticle().opacity = 0;
			}
		}
	};
	Acts.prototype.SetSprayCone = function (x)
	{
		this.spraycone = cr.to_radians(x);
	};
	Acts.prototype.SetInitSpeed = function (x)
	{
		this.initspeed = x;
	};
	Acts.prototype.SetInitSize = function (x)
	{
		this.initsize = x;
	};
	Acts.prototype.SetInitOpacity = function (x)
	{
		this.initopacity = x / 100;
	};
	Acts.prototype.SetGrowRate = function (x)
	{
		this.growrate = x;
	};
	Acts.prototype.SetXRandomiser = function (x)
	{
		this.xrandom = x;
	};
	Acts.prototype.SetYRandomiser = function (x)
	{
		this.yrandom = x;
	};
	Acts.prototype.SetSpeedRandomiser = function (x)
	{
		this.speedrandom = x;
	};
	Acts.prototype.SetSizeRandomiser = function (x)
	{
		this.sizerandom = x;
	};
	Acts.prototype.SetGrowRateRandomiser = function (x)
	{
		this.growrandom = x;
	};
	Acts.prototype.SetParticleAcc = function (x)
	{
		this.acc = x;
	};
	Acts.prototype.SetGravity = function (x)
	{
		this.g = x;
	};
	Acts.prototype.SetAngleRandomiser = function (x)
	{
		this.lifeanglerandom = x;
	};
	Acts.prototype.SetSpeedRandomiser = function (x)
	{
		this.lifespeedrandom = x;
	};
	Acts.prototype.SetOpacityRandomiser = function (x)
	{
		this.lifeopacityrandom = x;
	};
	Acts.prototype.SetTimeout = function (x)
	{
		this.timeout = x;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ParticleCount = function (ret)
	{
		ret.set_int(this.particles.length);
	};
	Exps.prototype.Rate = function (ret)
	{
		ret.set_float(this.rate);
	};
	Exps.prototype.SprayCone = function (ret)
	{
		ret.set_float(cr.to_degrees(this.spraycone));
	};
	Exps.prototype.InitSpeed = function (ret)
	{
		ret.set_float(this.initspeed);
	};
	Exps.prototype.InitSize = function (ret)
	{
		ret.set_float(this.initsize);
	};
	Exps.prototype.InitOpacity = function (ret)
	{
		ret.set_float(this.initopacity * 100);
	};
	Exps.prototype.InitGrowRate = function (ret)
	{
		ret.set_float(this.growrate);
	};
	Exps.prototype.XRandom = function (ret)
	{
		ret.set_float(this.xrandom);
	};
	Exps.prototype.YRandom = function (ret)
	{
		ret.set_float(this.yrandom);
	};
	Exps.prototype.InitSpeedRandom = function (ret)
	{
		ret.set_float(this.speedrandom);
	};
	Exps.prototype.InitSizeRandom = function (ret)
	{
		ret.set_float(this.sizerandom);
	};
	Exps.prototype.InitGrowRandom = function (ret)
	{
		ret.set_float(this.growrandom);
	};
	Exps.prototype.ParticleAcceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.Gravity = function (ret)
	{
		ret.set_float(this.g);
	};
	Exps.prototype.ParticleAngleRandom = function (ret)
	{
		ret.set_float(this.lifeanglerandom);
	};
	Exps.prototype.ParticleSpeedRandom = function (ret)
	{
		ret.set_float(this.lifespeedrandom);
	};
	Exps.prototype.ParticleOpacityRandom = function (ret)
	{
		ret.set_float(this.lifeopacityrandom);
	};
	Exps.prototype.Timeout = function (ret)
	{
		ret.set_float(this.timeout);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		this.all_frames = [];
		this.has_loaded_textures = false;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img["idtkLoadDisposed"] = true;
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.wait_for_textures.push(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
				this.all_frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.texture_img.c2webGL_texture = null;
			frame.webGL_texture = null;
		}
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.updateAllCurrentTexture();
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.has_loaded_textures || !this.runtime.glwrap)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.has_loaded_textures = true;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.has_loaded_textures)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			this.runtime.glwrap.deleteTexture(frame.webGL_texture);
		}
		this.has_loaded_textures = false;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, len, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frameimg = this.all_frames[i].texture_img;
			if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
			ctx.drawImage(frameimg, 0, 0);
			already_drawn_images.push(frameimg);
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[3] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0];
		this.cur_frame = this.properties[2];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		var curanimframe = this.cur_animation.frames[this.cur_frame];
		this.collision_poly.set_pts(curanimframe.poly_pts);
		this.hotspotX = curanimframe.hotspotX;
		this.hotspotY = curanimframe.hotspotY;
		this.cur_anim_speed = this.cur_animation.speed;
		if (this.recycled)
			this.animTimer.reset();
		else
			this.animTimer = new cr.KahanAdder();
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		this.type.loadTextures();
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats,
			"at": this.animTimer.sum
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animTimer.reset();
		this.animTimer.sum = o["at"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return this.animTimer.sum;
	};
	instanceProto.tick = function()
	{
		this.animTimer.add(this.runtime.getDt(this));
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + (cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (cr.equals_nocase(a.name, name_))
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (cr.equals_nocase(anim.name, this.cur_animation.name) && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (cr.equals_nocase(name_, cur_frame.image_points[i][0]))
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		a[2] = 0;
		arrCache.push(a);
	};
	function makeCollKey(a, b)
	{
		if (a < b)
			return "" + a + "," + b;
		else
			return "" + b + "," + a;
	};
	function collmemory_add(collmemory, a, b, tickcount)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var key = makeCollKey(a_uid, b_uid);
		if (collmemory.hasOwnProperty(key))
		{
			collmemory[key][2] = tickcount;
			return;
		}
		var arr = allocArr();
		arr[0] = a_uid;
		arr[1] = b_uid;
		arr[2] = tickcount;
		collmemory[key] = arr;
	};
	function collmemory_remove(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			freeArr(collmemory[key]);
			delete collmemory[key];
		}
	};
	function collmemory_removeInstance(collmemory, inst)
	{
		var uid = inst.uid;
		var p, entry;
		for (p in collmemory)
		{
			if (collmemory.hasOwnProperty(p))
			{
				entry = collmemory[p];
				if (entry[0] === uid || entry[1] === uid)
				{
					freeArr(collmemory[p]);
					delete collmemory[p];
				}
			}
		}
	};
	var last_coll_tickcount = -2;
	function collmemory_has(collmemory, a, b)
	{
		var key = makeCollKey(a.uid, b.uid);
		if (collmemory.hasOwnProperty(key))
		{
			last_coll_tickcount = collmemory[key][2];
			return true;
		}
		else
		{
			last_coll_tickcount = -2;
			return false;
		}
	};
	var candidates = [];
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra.collmemory)
		{
			cnd.extra.collmemory = {};
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra.collmemory));
		}
		var collmemory = cnd.extra.collmemory;
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances;
		var l, linst, r, rinst;
		var curlsol, currsol;
		var tickcount = this.runtime.tickcount;
		var lasttickcount = tickcount - 1;
		var exists, run;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			if (rsol.select_all)
			{
				linst.update_bbox();
				this.runtime.getCollisionCandidates(linst.layer, rtype, linst.bbox, candidates);
				rinstances = candidates;
			}
			else
				rinstances = rsol.getObjects();
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					exists = collmemory_has(collmemory, linst, rinst);
					run = (!exists || (last_coll_tickcount < lasttickcount));
					collmemory_add(collmemory, linst, rinst, tickcount);
					if (run)
					{
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(collmemory, linst, rinst);
				}
			}
			candidates.length = 0;
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
		{
			this.update_bbox();
			this.runtime.getCollisionCandidates(this.layer, rtype, this.bbox, candidates);
			rinstances = candidates;
		}
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		candidates.length = 0;
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				if (orblock)
				{
					var initsize = sol.instances.length;
					sol.instances.length = initsize + topick.length;
					for (i = 0, len = topick.length; i < len; i++)
					{
						sol.instances[initsize + i] = topick[i];
						cr.arrayFindRemove(sol.else_instances, topick[i]);
					}
				}
				else
				{
					cr.shallowAssignArray(sol.instances, topick);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return cr.equals_nocase(this.changeAnimName, animname);
		else
			return cr.equals_nocase(this.cur_animation.name, animname);
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.CompareAnimSpeed = function (cmp, x)
	{
		var s = (this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
		return cr.do_cmp(s, cmp, x);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return cr.equals_nocase(this.animTriggerName, animname);
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra.Spawn_LastExec) || cur_act.extra.Spawn_LastExec < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra.Spawn_LastExec = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		if (this.collisionsEnabled === (set_ !== 0))
			return;		// no change
		this.collisionsEnabled = (set_ !== 0);
		if (this.collisionsEnabled)
			this.set_bbox_changed();		// needs to be added back to cells
		else
		{
			if (this.collcells.right >= this.collcells.left)
				this.type.collision_grid.update(this, this.collcells, null);
			this.collcells.set(0, 0, -1, -1);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.animForwards ? this.cur_anim_speed : -this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
/* global cr,log,assert2 */
/* jshint globalstrict: true */
/* jshint strict: true */
;
;
var jText = '';
cr.plugins_.SpriteFontPlus = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.SpriteFontPlus.prototype;
	pluginProto.onCreate = function ()
	{
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.runtime.wait_for_textures.push(this.texture_img);
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, false, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onDestroy = function()
	{
		freeAllLines (this.lines);
		freeAllClip  (this.clipList);
		freeAllClipUV(this.clipUV);
		cr.wipe(this.characterWidthList);
	};
	instanceProto.onCreate = function()
	{
		this.texture_img      = this.type.texture_img;
		this.characterWidth   = this.properties[0];
		this.characterHeight  = this.properties[1];
		this.characterSet     = this.properties[2];
		this.text             = this.properties[3];
		this.characterScale   = this.properties[4];
		this.visible          = (this.properties[5] === 0);	// 0=visible, 1=invisible
		this.halign           = this.properties[6]/2.0;			// 0=left, 1=center, 2=right
		this.valign           = this.properties[7]/2.0;			// 0=top, 1=center, 2=bottom
		this.wrapbyword       = (this.properties[9] === 0);	// 0=word, 1=character
		this.characterSpacing = this.properties[10];
		this.lineHeight       = this.properties[11];
		this.textWidth  = 0;
		this.textHeight = 0;
		this.charWidthJSON	  = this.properties[12];
		this.spaceWidth 	  = this.properties[13];
		console.log(this.charWidthJSON);
		jText = this.charWidthJSON;
		if (this.recycled)
		{
			this.lines.length = 0;
			cr.wipe(this.clipList);
			cr.wipe(this.clipUV);
			cr.wipe(this.characterWidthList);
		}
		else
		{
			this.lines = [];
			this.clipList = {};
			this.clipUV = {};
			this.characterWidthList = {};
		}
		try{
			if(this.charWidthJSON){
				if(this.charWidthJSON.indexOf('""c2array""') !== -1) {
					var jStr = jQuery.parseJSON(this.charWidthJSON.replace(/""/g,'"'));
					var l = jStr.size[1];
					for(var s = 0; s < l; s++) {
						var cs = jStr.data[1][s][0];
						var w = jStr.data[0][s][0];
						for(var c = 0; c < cs.length; c++) {
							this.characterWidthList[cs.charAt(c)] = w
						}
					}
				} else {
					var jStr = jQuery.parseJSON(this.charWidthJSON);
					var l = jStr.length;
					for(var s = 0; s < l; s++) {
						var cs = jStr[s][1];
						var w = jStr[s][0];
						for(var c = 0; c < cs.length; c++) {
							this.characterWidthList[cs.charAt(c)] = w
						}
					}
				}
			}
			if(this.spaceWidth !== -1) {
				this.characterWidthList[' '] = this.spaceWidth;
			}
		}
		catch(e){
			if(window.console && window.console.log) {
				window.console.log('SpriteFont+ Failure: ' + e);
			}
		}
		this.text_changed = true;
		this.lastwrapwidth = this.width;
		if (this.runtime.glwrap)
		{
			if (!this.type.webGL_texture)
			{
				this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, false, this.runtime.linearSampling, this.type.texture_pixelformat);
			}
			this.webGL_texture = this.type.webGL_texture;
		}
		this.SplitSheet();
	};
	instanceProto.saveToJSON = function ()
	{
		var save = {
			"t": this.text,
			"csc": this.characterScale,
			"csp": this.characterSpacing,
			"lh": this.lineHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick,
			"cw": {}
		};
		for (var ch in this.characterWidthList)
			save["cw"][ch] = this.characterWidthList[ch];
		return save;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.characterScale = o["csc"];
		this.characterSpacing = o["csp"];
		this.lineHeight = o["lh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		for(var ch in o["cw"])
			this.characterWidthList[ch] = o["cw"][ch];
		this.text_changed = true;
		this.lastwrapwidth = this.width;
	};
	function trimRight(text)
	{
		return text.replace(/\s\s*$/, '');
	}
	var MAX_CACHE_SIZE = 1000;
	function alloc(cache,Constructor)
	{
		if (cache.length)
			return cache.pop();
		else
			return new Constructor();
	}
	function free(cache,data)
	{
		if (cache.length < MAX_CACHE_SIZE)
		{
			cache.push(data);
		}
	}
	function freeAll(cache,dataList,isArray)
	{
		if (isArray) {
			var i, len;
			for (i = 0, len = dataList.length; i < len; i++)
			{
				free(cache,dataList[i]);
			}
			dataList.length = 0;
		} else {
			var prop;
			for(prop in dataList) {
				if(Object.prototype.hasOwnProperty.call(dataList,prop)) {
					free(cache,dataList[prop]);
					delete dataList[prop];
				}
			}
		}
	}
	function addLine(inst,lineIndex,cur_line) {
		var lines = inst.lines;
		var line;
		cur_line = trimRight(cur_line);
		if (lineIndex >= lines.length)
			lines.push(allocLine());
		line = lines[lineIndex];
		line.text = cur_line;
		line.width = inst.measureWidth(cur_line);
		inst.textWidth = cr.max(inst.textWidth,line.width);
	}
	var linesCache = [];
	function allocLine()       { return alloc(linesCache,Object); }
	function freeLine(l)       { free(linesCache,l); }
	function freeAllLines(arr) { freeAll(linesCache,arr,true); }
	function addClip(obj,property,x,y,w,h) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipCache,Object);
		}
		obj[property].x = x;
		obj[property].y = y;
		obj[property].w = w;
		obj[property].h = h;
	}
	var clipCache = [];
	function allocClip()      { return alloc(clipCache,Object); }
	function freeAllClip(obj) { freeAll(clipCache,obj,false);}
	function addClipUV(obj,property,left,top,right,bottom) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipUVCache,cr.rect);
		}
		obj[property].left   = left;
		obj[property].top    = top;
		obj[property].right  = right;
		obj[property].bottom = bottom;
	}
	var clipUVCache = [];
	function allocClipUV()      { return alloc(clipUVCache,cr.rect);}
	function freeAllClipUV(obj) { freeAll(clipUVCache,obj,false);}
	instanceProto.SplitSheet = function() {
		var texture      = this.texture_img;
		var texWidth     = texture.width;
		var texHeight    = texture.height;
		var charWidth    = this.characterWidth;
		var charHeight   = this.characterHeight;
		var charU        = charWidth /texWidth;
		var charV        = charHeight/texHeight;
		var charSet      = this.characterSet ;
		var cols = Math.floor(texWidth/charWidth);
		var rows = Math.floor(texHeight/charHeight);
		for ( var c = 0; c < charSet.length; c++) {
			if  (c >= cols * rows) break;
			var x = c%cols;
			var y = Math.floor(c/cols);
			var letter = charSet.charAt(c);
			if (this.runtime.glwrap) {
				addClipUV(
					this.clipUV, letter,
					x * charU ,
					y * charV ,
					(x+1) * charU ,
					(y+1) * charV
				);
			} else {
				addClip(
					this.clipList, letter,
					x * charWidth,
					y * charHeight,
					charWidth,
					charHeight
				);
			}
		}
	};
	/*
     *	Word-Wrapping
     */
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	pluginProto.WordWrap = function (inst)
	{
		var text = inst.text;
		var lines = inst.lines;
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		var width = inst.width;
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		var charWidth = inst.characterWidth;
		var charScale = inst.characterScale;
		var charSpacing = inst.characterSpacing;
		if ( (text.length * (charWidth * charScale + charSpacing) - charSpacing) <= width && text.indexOf("\n") === -1)
		{
			var all_width = inst.measureWidth(text);
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				inst.textWidth  = all_width;
				inst.textHeight = inst.characterHeight * charScale + inst.lineHeight;
				return;
			}
		}
		var wrapbyword = inst.wrapbyword;
		this.WrapText(inst);
		inst.textHeight = lines.length * (inst.characterHeight * charScale + inst.lineHeight);
	};
	pluginProto.WrapText = function (inst)
	{
		var wrapbyword = inst.wrapbyword;
		var text       = inst.text;
		var lines      = inst.lines;
		var width      = inst.width;
		var wordArray;
		if (wrapbyword) {
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		} else {
			wordArray = text;
		}
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		var ignore_newline = false;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (ignore_newline === true) {
					ignore_newline = false;
				} else {
					addLine(inst,lineIndex,cur_line);
					lineIndex++;
				}
				cur_line = "";
				continue;
			}
			ignore_newline = false;
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = inst.measureWidth(trimRight(cur_line));
			if (line_width > width)
			{
				if (prev_line === "") {
					addLine(inst,lineIndex,cur_line);
					cur_line = "";
					ignore_newline = true;
				} else {
					addLine(inst,lineIndex,prev_line);
					cur_line = wordArray[i];
				}
				lineIndex++;
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (trimRight(cur_line).length)
		{
			addLine(inst,lineIndex,cur_line);
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	instanceProto.measureWidth = function(text) {
		var spacing = this.characterSpacing;
		var len     = text.length;
		var width   = 0;
		for (var i = 0; i < len; i++) {
			width += this.getCharacterWidth(text.charAt(i)) * this.characterScale + spacing;
		}
		width -= (width > 0) ? spacing : 0;
		return width;
	};
	/***/
	instanceProto.getCharacterWidth = function(character) {
		var widthList = this.characterWidthList;
		if (widthList[character] !== undefined) {
			return widthList[character];
		} else {
			return this.characterWidth;
		}
	};
	instanceProto.rebuildText = function() {
		if (this.text_changed || this.width !== this.lastwrapwidth) {
			this.textWidth = 0;
			this.textHeight = 0;
			this.type.plugin.WordWrap(this);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
	};
	var EPSILON = 0.00001;
	instanceProto.draw = function(ctx, glmode)
	{
		var texture = this.texture_img;
		if (this.text !== "" && texture != null) {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			ctx.globalAlpha = this.opacity;
			var myx = this.x;
			var myy = this.y;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			ctx.translate(myx, myy);
			ctx.rotate(this.angle);
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = -(this.hotspotX * this.width);
			var offy = -(this.hotspotY * this.height);
			offy += valign;
			var drawX ;
			var drawY = offy;
			for(var i = 0; i < lines.length; i++) {
				var line = lines[i].text;
				var len  = lines[i].width;
				halign = ha * cr.max(0,this.width - len);
				drawX = offx + halign;
				drawY += lineHeight;
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					var clip = this.clipList[letter];
					if ( drawX + this.getCharacterWidth(letter) * scale > this.width + EPSILON ) {
						break;
					}
					if (clip !== undefined) {
						ctx.drawImage( this.texture_img,
									 clip.x, clip.y, clip.w, clip.h,
									 Math.round(drawX),Math.round(drawY),clip.w*scale,clip.h*scale);
					}
					drawX  += this.getCharacterWidth(letter) * scale + charSpace;
				}
				drawY += charHeight;
				if ( drawY + charHeight + lineHeight > this.height) {
					break;
				}
			}
			ctx.restore();
		}
	};
	var dQuad = new cr.quad();
	function rotateQuad(quad,cosa,sina) {
		var x_temp;
		x_temp   = (quad.tlx * cosa) - (quad.tly * sina);
		quad.tly = (quad.tly * cosa) + (quad.tlx * sina);
		quad.tlx = x_temp;
		x_temp    = (quad.trx * cosa) - (quad.try_ * sina);
		quad.try_ = (quad.try_ * cosa) + (quad.trx * sina);
		quad.trx  = x_temp;
		x_temp   = (quad.blx * cosa) - (quad.bly * sina);
		quad.bly = (quad.bly * cosa) + (quad.blx * sina);
		quad.blx = x_temp;
		x_temp    = (quad.brx * cosa) - (quad.bry * sina);
		quad.bry = (quad.bry * cosa) + (quad.brx * sina);
		quad.brx  = x_temp;
	}
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		if (this.text !== "") {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			this.update_bbox();
			var q = this.bquad;
			var ox = 0;
			var oy = 0;
			if (this.runtime.pixel_rounding)
			{
				ox = ((this.x + 0.5) | 0) - this.x;
				oy = ((this.y + 0.5) | 0) - this.y;
			}
			var angle      = this.angle;
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;   // to precalculate in onCreate or on change
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var cosa,sina;
			if (angle !== 0)
			{
				cosa = Math.cos(angle);
				sina = Math.sin(angle);
			}
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = q.tlx + ox;
			var offy = q.tly + oy;
			var drawX ;
			var drawY = valign;
			for(var i = 0; i < lines.length; i++) {
				var line       = lines[i].text;
				var lineWidth  = lines[i].width;
				halign = ha * cr.max(0,this.width - lineWidth);
				drawX = halign;
				drawY += lineHeight;
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					var clipUV = this.clipUV[letter];
					if ( drawX + this.getCharacterWidth(letter) * scale  > this.width + EPSILON) {
						break;
					}
					if (clipUV !== undefined) {
						var clipWidth  = this.characterWidth*scale;
						var clipHeight = this.characterHeight*scale;
						dQuad.tlx  = drawX;
						dQuad.tly  = drawY;
						dQuad.trx  = drawX + clipWidth;
						dQuad.try_ = drawY ;
						dQuad.blx  = drawX;
						dQuad.bly  = drawY + clipHeight;
						dQuad.brx  = drawX + clipWidth;
						dQuad.bry  = drawY + clipHeight;
						if(angle !== 0)
						{
							rotateQuad(dQuad,cosa,sina);
						}
						dQuad.offset(offx,offy);
						glw.quadTex(
							dQuad.tlx, dQuad.tly,
							dQuad.trx, dQuad.try_,
							dQuad.brx, dQuad.bry,
							dQuad.blx, dQuad.bly,
							clipUV
						);
					}
					drawX  += this.getCharacterWidth(letter) * scale + charSpace;
				}
				drawY += charHeight;
				if ( drawY + charHeight + lineHeight > this.height) {
					break;
				}
			}
		}
	};
	function Cnds() {}
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {}
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetScale = function(param)
	{
		if (param !== this.characterScale) {
			this.characterScale = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterSpacing = function(param)
	{
		if (param !== this.CharacterSpacing) {
			this.characterSpacing = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetLineHeight = function(param)
	{
		if (param !== this.lineHeight) {
			this.lineHeight = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	instanceProto.SetCharWidth = function(character,width) {
		var w = parseInt(width,10);
		if (this.characterWidthList[character] !== w) {
			this.characterWidthList[character] = w;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterWidth = function(characterSet,width)
	{
		if (characterSet !== "") {
			for(var c = 0; c < characterSet.length; c++) {
				this.SetCharWidth(characterSet.charAt(c),width);
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {}
	Exps.prototype.CharacterWidth = function(ret,character)
	{
		ret.set_int(this.getCharacterWidth(character));
	};
	Exps.prototype.CharacterHeight = function(ret)
	{
		ret.set_int(this.characterHeight);
	};
	Exps.prototype.CharacterScale = function(ret)
	{
		ret.set_float(this.characterScale);
	};
	Exps.prototype.CharacterSpacing = function(ret)
	{
		ret.set_int(this.characterSpacing);
	};
	Exps.prototype.LineHeight = function(ret)
	{
		ret.set_int(this.lineHeight);
	};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textWidth);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textHeight);
	};
	pluginProto.exps = new Exps();
}());
/* global cr,log,assert2 */
/* jshint globalstrict: true */
/* jshint strict: true */
;
;
cr.plugins_.Spritefont2 = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Spritefont2.prototype;
	pluginProto.onCreate = function ()
	{
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.runtime.wait_for_textures.push(this.texture_img);
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, false, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onDestroy = function()
	{
		freeAllLines (this.lines);
		freeAllClip  (this.clipList);
		freeAllClipUV(this.clipUV);
		cr.wipe(this.characterWidthList);
	};
	instanceProto.onCreate = function()
	{
		this.texture_img      = this.type.texture_img;
		this.characterWidth   = this.properties[0];
		this.characterHeight  = this.properties[1];
		this.characterSet     = this.properties[2];
		this.text             = this.properties[3];
		this.characterScale   = this.properties[4];
		this.visible          = (this.properties[5] === 0);	// 0=visible, 1=invisible
		this.halign           = this.properties[6]/2.0;			// 0=left, 1=center, 2=right
		this.valign           = this.properties[7]/2.0;			// 0=top, 1=center, 2=bottom
		this.wrapbyword       = (this.properties[9] === 0);	// 0=word, 1=character
		this.characterSpacing = this.properties[10];
		this.lineHeight       = this.properties[11];
		this.textWidth  = 0;
		this.textHeight = 0;
		if (this.recycled)
		{
			this.lines.length = 0;
			cr.wipe(this.clipList);
			cr.wipe(this.clipUV);
			cr.wipe(this.characterWidthList);
		}
		else
		{
			this.lines = [];
			this.clipList = {};
			this.clipUV = {};
			this.characterWidthList = {};
		}
		this.text_changed = true;
		this.lastwrapwidth = this.width;
		if (this.runtime.glwrap)
		{
			if (!this.type.webGL_texture)
			{
				this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, false, this.runtime.linearSampling, this.type.texture_pixelformat);
			}
			this.webGL_texture = this.type.webGL_texture;
		}
		this.SplitSheet();
	};
	instanceProto.saveToJSON = function ()
	{
		var save = {
			"t": this.text,
			"csc": this.characterScale,
			"csp": this.characterSpacing,
			"lh": this.lineHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick,
			"cw": {}
		};
		for (var ch in this.characterWidthList)
			save["cw"][ch] = this.characterWidthList[ch];
		return save;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.characterScale = o["csc"];
		this.characterSpacing = o["csp"];
		this.lineHeight = o["lh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		for(var ch in o["cw"])
			this.characterWidthList[ch] = o["cw"][ch];
		this.text_changed = true;
		this.lastwrapwidth = this.width;
	};
	function trimRight(text)
	{
		return text.replace(/\s\s*$/, '');
	}
	var MAX_CACHE_SIZE = 1000;
	function alloc(cache,Constructor)
	{
		if (cache.length)
			return cache.pop();
		else
			return new Constructor();
	}
	function free(cache,data)
	{
		if (cache.length < MAX_CACHE_SIZE)
		{
			cache.push(data);
		}
	}
	function freeAll(cache,dataList,isArray)
	{
		if (isArray) {
			var i, len;
			for (i = 0, len = dataList.length; i < len; i++)
			{
				free(cache,dataList[i]);
			}
			dataList.length = 0;
		} else {
			var prop;
			for(prop in dataList) {
				if(Object.prototype.hasOwnProperty.call(dataList,prop)) {
					free(cache,dataList[prop]);
					delete dataList[prop];
				}
			}
		}
	}
	function addLine(inst,lineIndex,cur_line) {
		var lines = inst.lines;
		var line;
		cur_line = trimRight(cur_line);
		if (lineIndex >= lines.length)
			lines.push(allocLine());
		line = lines[lineIndex];
		line.text = cur_line;
		line.width = inst.measureWidth(cur_line);
		inst.textWidth = cr.max(inst.textWidth,line.width);
	}
	var linesCache = [];
	function allocLine()       { return alloc(linesCache,Object); }
	function freeLine(l)       { free(linesCache,l); }
	function freeAllLines(arr) { freeAll(linesCache,arr,true); }
	function addClip(obj,property,x,y,w,h) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipCache,Object);
		}
		obj[property].x = x;
		obj[property].y = y;
		obj[property].w = w;
		obj[property].h = h;
	}
	var clipCache = [];
	function allocClip()      { return alloc(clipCache,Object); }
	function freeAllClip(obj) { freeAll(clipCache,obj,false);}
	function addClipUV(obj,property,left,top,right,bottom) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipUVCache,cr.rect);
		}
		obj[property].left   = left;
		obj[property].top    = top;
		obj[property].right  = right;
		obj[property].bottom = bottom;
	}
	var clipUVCache = [];
	function allocClipUV()      { return alloc(clipUVCache,cr.rect);}
	function freeAllClipUV(obj) { freeAll(clipUVCache,obj,false);}
	instanceProto.SplitSheet = function() {
		var texture      = this.texture_img;
		var texWidth     = texture.width;
		var texHeight    = texture.height;
		var charWidth    = this.characterWidth;
		var charHeight   = this.characterHeight;
		var charU        = charWidth /texWidth;
		var charV        = charHeight/texHeight;
		var charSet      = this.characterSet ;
		var cols = Math.floor(texWidth/charWidth);
		var rows = Math.floor(texHeight/charHeight);
		for ( var c = 0; c < charSet.length; c++) {
			if  (c >= cols * rows) break;
			var x = c%cols;
			var y = Math.floor(c/cols);
			var letter = charSet.charAt(c);
			if (this.runtime.glwrap) {
				addClipUV(
					this.clipUV, letter,
					x * charU ,
					y * charV ,
					(x+1) * charU ,
					(y+1) * charV
				);
			} else {
				addClip(
					this.clipList, letter,
					x * charWidth,
					y * charHeight,
					charWidth,
					charHeight
				);
			}
		}
	};
	/*
     *	Word-Wrapping
     */
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	pluginProto.WordWrap = function (inst)
	{
		var text = inst.text;
		var lines = inst.lines;
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		var width = inst.width;
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		var charWidth = inst.characterWidth;
		var charScale = inst.characterScale;
		var charSpacing = inst.characterSpacing;
		if ( (text.length * (charWidth * charScale + charSpacing) - charSpacing) <= width && text.indexOf("\n") === -1)
		{
			var all_width = inst.measureWidth(text);
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				inst.textWidth  = all_width;
				inst.textHeight = inst.characterHeight * charScale + inst.lineHeight;
				return;
			}
		}
		var wrapbyword = inst.wrapbyword;
		this.WrapText(inst);
		inst.textHeight = lines.length * (inst.characterHeight * charScale + inst.lineHeight);
	};
	pluginProto.WrapText = function (inst)
	{
		var wrapbyword = inst.wrapbyword;
		var text       = inst.text;
		var lines      = inst.lines;
		var width      = inst.width;
		var wordArray;
		if (wrapbyword) {
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		} else {
			wordArray = text;
		}
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		var ignore_newline = false;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (ignore_newline === true) {
					ignore_newline = false;
				} else {
					addLine(inst,lineIndex,cur_line);
					lineIndex++;
				}
				cur_line = "";
				continue;
			}
			ignore_newline = false;
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = inst.measureWidth(trimRight(cur_line));
			if (line_width > width)
			{
				if (prev_line === "") {
					addLine(inst,lineIndex,cur_line);
					cur_line = "";
					ignore_newline = true;
				} else {
					addLine(inst,lineIndex,prev_line);
					cur_line = wordArray[i];
				}
				lineIndex++;
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (trimRight(cur_line).length)
		{
			addLine(inst,lineIndex,cur_line);
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	instanceProto.measureWidth = function(text) {
		var spacing = this.characterSpacing;
		var len     = text.length;
		var width   = 0;
		for (var i = 0; i < len; i++) {
			width += this.getCharacterWidth(text.charAt(i)) * this.characterScale + spacing;
		}
		width -= (width > 0) ? spacing : 0;
		return width;
	};
	/***/
	instanceProto.getCharacterWidth = function(character) {
		var widthList = this.characterWidthList;
		if (widthList[character] !== undefined) {
			return widthList[character];
		} else {
			return this.characterWidth;
		}
	};
	instanceProto.rebuildText = function() {
		if (this.text_changed || this.width !== this.lastwrapwidth) {
			this.textWidth = 0;
			this.textHeight = 0;
			this.type.plugin.WordWrap(this);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
	};
	var EPSILON = 0.00001;
	instanceProto.draw = function(ctx, glmode)
	{
		var texture = this.texture_img;
		if (this.text !== "" && texture != null) {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			ctx.globalAlpha = this.opacity;
			var myx = this.x;
			var myy = this.y;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			ctx.translate(myx, myy);
			ctx.rotate(this.angle);
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = -(this.hotspotX * this.width);
			var offy = -(this.hotspotY * this.height);
			offy += valign;
			var drawX ;
			var drawY = offy;
			for(var i = 0; i < lines.length; i++) {
				var line = lines[i].text;
				var len  = lines[i].width;
				halign = ha * cr.max(0,this.width - len);
				drawX = offx + halign;
				drawY += lineHeight;
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					var clip = this.clipList[letter];
					if ( drawX + this.getCharacterWidth(letter) * scale > this.width + EPSILON ) {
						break;
					}
					if (clip !== undefined) {
						ctx.drawImage( this.texture_img,
									 clip.x, clip.y, clip.w, clip.h,
									 Math.round(drawX),Math.round(drawY),clip.w*scale,clip.h*scale);
					}
					drawX  += this.getCharacterWidth(letter) * scale + charSpace;
				}
				drawY += charHeight;
				if ( drawY + charHeight + lineHeight > this.height) {
					break;
				}
			}
			ctx.restore();
		}
	};
	var dQuad = new cr.quad();
	function rotateQuad(quad,cosa,sina) {
		var x_temp;
		x_temp   = (quad.tlx * cosa) - (quad.tly * sina);
		quad.tly = (quad.tly * cosa) + (quad.tlx * sina);
		quad.tlx = x_temp;
		x_temp    = (quad.trx * cosa) - (quad.try_ * sina);
		quad.try_ = (quad.try_ * cosa) + (quad.trx * sina);
		quad.trx  = x_temp;
		x_temp   = (quad.blx * cosa) - (quad.bly * sina);
		quad.bly = (quad.bly * cosa) + (quad.blx * sina);
		quad.blx = x_temp;
		x_temp    = (quad.brx * cosa) - (quad.bry * sina);
		quad.bry = (quad.bry * cosa) + (quad.brx * sina);
		quad.brx  = x_temp;
	}
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		if (this.text !== "") {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			this.update_bbox();
			var q = this.bquad;
			var ox = 0;
			var oy = 0;
			if (this.runtime.pixel_rounding)
			{
				ox = ((this.x + 0.5) | 0) - this.x;
				oy = ((this.y + 0.5) | 0) - this.y;
			}
			var angle      = this.angle;
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;   // to precalculate in onCreate or on change
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var cosa,sina;
			if (angle !== 0)
			{
				cosa = Math.cos(angle);
				sina = Math.sin(angle);
			}
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = q.tlx + ox;
			var offy = q.tly + oy;
			var drawX ;
			var drawY = valign;
			for(var i = 0; i < lines.length; i++) {
				var line       = lines[i].text;
				var lineWidth  = lines[i].width;
				halign = ha * cr.max(0,this.width - lineWidth);
				drawX = halign;
				drawY += lineHeight;
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					var clipUV = this.clipUV[letter];
					if ( drawX + this.getCharacterWidth(letter) * scale  > this.width + EPSILON) {
						break;
					}
					if (clipUV !== undefined) {
						var clipWidth  = this.characterWidth*scale;
						var clipHeight = this.characterHeight*scale;
						dQuad.tlx  = drawX;
						dQuad.tly  = drawY;
						dQuad.trx  = drawX + clipWidth;
						dQuad.try_ = drawY ;
						dQuad.blx  = drawX;
						dQuad.bly  = drawY + clipHeight;
						dQuad.brx  = drawX + clipWidth;
						dQuad.bry  = drawY + clipHeight;
						if(angle !== 0)
						{
							rotateQuad(dQuad,cosa,sina);
						}
						dQuad.offset(offx,offy);
						glw.quadTex(
							dQuad.tlx, dQuad.tly,
							dQuad.trx, dQuad.try_,
							dQuad.brx, dQuad.bry,
							dQuad.blx, dQuad.bly,
							clipUV
						);
					}
					drawX  += this.getCharacterWidth(letter) * scale + charSpace;
				}
				drawY += charHeight;
				if ( drawY + charHeight + lineHeight > this.height) {
					break;
				}
			}
		}
	};
	function Cnds() {}
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {}
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetScale = function(param)
	{
		if (param !== this.characterScale) {
			this.characterScale = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterSpacing = function(param)
	{
		if (param !== this.CharacterSpacing) {
			this.characterSpacing = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetLineHeight = function(param)
	{
		if (param !== this.lineHeight) {
			this.lineHeight = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	instanceProto.SetCharWidth = function(character,width) {
		var w = parseInt(width,10);
		if (this.characterWidthList[character] !== w) {
			this.characterWidthList[character] = w;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterWidth = function(characterSet,width)
	{
		if (characterSet !== "") {
			for(var c = 0; c < characterSet.length; c++) {
				this.SetCharWidth(characterSet.charAt(c),width);
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.SetHAlign = function (a)
	{
		this.halign = a / 2.0;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetVAlign = function (a)
	{
		this.valign = a / 2.0;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {}
	Exps.prototype.CharacterWidth = function(ret,character)
	{
		ret.set_int(this.getCharacterWidth(character));
	};
	Exps.prototype.CharacterHeight = function(ret)
	{
		ret.set_int(this.characterHeight);
	};
	Exps.prototype.CharacterScale = function(ret)
	{
		ret.set_float(this.characterScale);
	};
	Exps.prototype.CharacterSpacing = function(ret)
	{
		ret.set_int(this.characterSpacing);
	};
	Exps.prototype.LineHeight = function(ret)
	{
		ret.set_int(this.lineHeight);
	};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textWidth);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textHeight);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TiledBg = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TiledBg.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.runtime.wait_for_textures.push(this.texture_img);
		this.pattern = null;
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.webGL_texture || !this.runtime.glwrap)
			return;
		this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);							// 0=visible, 1=invisible
		this.rcTex = new cr.rect(0, 0, 0, 0);
		this.has_own_texture = false;										// true if a texture loaded in from URL
		this.texture_img = this.type.texture_img;
		if (this.runtime.glwrap)
		{
			this.type.loadTextures();
			this.webGL_texture = this.type.webGL_texture;
		}
		else
		{
			if (!this.type.pattern)
				this.type.pattern = this.runtime.ctx.createPattern(this.type.texture_img, "repeat");
			this.pattern = this.type.pattern;
		}
	};
	instanceProto.afterLoad = function ()
	{
		this.has_own_texture = false;
		this.texture_img = this.type.texture_img;
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.glwrap && this.has_own_texture && this.webGL_texture)
		{
			this.runtime.glwrap.deleteTexture(this.webGL_texture);
			this.webGL_texture = null;
		}
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		ctx.save();
		ctx.fillStyle = this.pattern;
		var myx = this.x;
		var myy = this.y;
		if (this.runtime.pixel_rounding)
		{
			myx = (myx + 0.5) | 0;
			myy = (myy + 0.5) | 0;
		}
		var drawX = -(this.hotspotX * this.width);
		var drawY = -(this.hotspotY * this.height);
		var offX = drawX % this.texture_img.width;
		var offY = drawY % this.texture_img.height;
		if (offX < 0)
			offX += this.texture_img.width;
		if (offY < 0)
			offY += this.texture_img.height;
		ctx.translate(myx, myy);
		ctx.rotate(this.angle);
		ctx.translate(offX, offY);
		ctx.fillRect(drawX - offX,
					 drawY - offY,
					 this.width,
					 this.height);
		ctx.restore();
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		var rcTex = this.rcTex;
		rcTex.right = this.width / this.texture_img.width;
		rcTex.bottom = this.height / this.texture_img.height;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, rcTex);
		}
		else
			glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, rcTex);
	};
	function Cnds() {};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.LoadURL = function (url_)
	{
		var img = new Image();
		var self = this;
		img.onload = function ()
		{
			self.texture_img = img;
			if (self.runtime.glwrap)
			{
				if (self.has_own_texture && self.webGL_texture)
					self.runtime.glwrap.deleteTexture(self.webGL_texture);
				self.webGL_texture = self.runtime.glwrap.loadTexture(img, true, self.runtime.linearSampling);
			}
			else
			{
				self.pattern = self.runtime.ctx.createPattern(img, "repeat");
			}
			self.has_own_texture = true;
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.TiledBg.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.texture_img.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.texture_img.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Touch = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Touch.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.touches = [];
		this.mouseDown = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var dummyoffset = {left: 0, top: 0};
	instanceProto.findTouch = function (id)
	{
		var i, len;
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			if (this.touches[i]["id"] === id)
				return i;
		}
		return -1;
	};
	var appmobi_accx = 0;
	var appmobi_accy = 0;
	var appmobi_accz = 0;
	function AppMobiGetAcceleration(evt)
	{
		appmobi_accx = evt.x;
		appmobi_accy = evt.y;
		appmobi_accz = evt.z;
	};
	var pg_accx = 0;
	var pg_accy = 0;
	var pg_accz = 0;
	function PhoneGapGetAcceleration(evt)
	{
		pg_accx = evt.x;
		pg_accy = evt.y;
		pg_accz = evt.z;
	};
	var theInstance = null;
	instanceProto.onCreate = function()
	{
		theInstance = this;
		this.isWindows8 = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.orient_alpha = 0;
		this.orient_beta = 0;
		this.orient_gamma = 0;
		this.acc_g_x = 0;
		this.acc_g_y = 0;
		this.acc_g_z = 0;
		this.acc_x = 0;
		this.acc_y = 0;
		this.acc_z = 0;
		this.curTouchX = 0;
		this.curTouchY = 0;
		this.trigger_index = 0;
		this.trigger_id = 0;
		this.useMouseInput = (this.properties[0] !== 0);
		var elem = (this.runtime.fullscreen_mode > 0) ? document : this.runtime.canvas;
		var elem2 = document;
		if (this.runtime.isDirectCanvas)
			elem2 = elem = window["Canvas"];
		else if (this.runtime.isCocoonJs)
			elem2 = elem = window;
		var self = this;
		if (window.navigator["pointerEnabled"])
		{
			elem.addEventListener("pointerdown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("pointermove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("pointerup",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			elem2.addEventListener("pointercancel",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				this.runtime.canvas.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("gesturehold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else if (window.navigator["msPointerEnabled"])
		{
			elem.addEventListener("MSPointerDown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("MSPointerMove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("MSPointerUp",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			elem2.addEventListener("MSPointerCancel",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else
		{
			elem.addEventListener("touchstart",
				function(info) {
					self.onTouchStart(info);
				},
				false
			);
			elem.addEventListener("touchmove",
				function(info) {
					self.onTouchMove(info);
				},
				false
			);
			elem2.addEventListener("touchend",
				function(info) {
					self.onTouchEnd(info);
				},
				false
			);
			elem2.addEventListener("touchcancel",
				function(info) {
					self.onTouchEnd(info);
				},
				false
			);
		}
		if (this.isWindows8)
		{
			var win8accelerometerFn = function(e) {
					var reading = e["reading"];
					self.acc_x = reading["accelerationX"];
					self.acc_y = reading["accelerationY"];
					self.acc_z = reading["accelerationZ"];
				};
			var win8inclinometerFn = function(e) {
					var reading = e["reading"];
					self.orient_alpha = reading["yawDegrees"];
					self.orient_beta = reading["pitchDegrees"];
					self.orient_gamma = reading["rollDegrees"];
				};
			var accelerometer = Windows["Devices"]["Sensors"]["Accelerometer"]["getDefault"]();
            if (accelerometer)
			{
                accelerometer["reportInterval"] = Math.max(accelerometer["minimumReportInterval"], 16);
				accelerometer.addEventListener("readingchanged", win8accelerometerFn);
            }
			var inclinometer = Windows["Devices"]["Sensors"]["Inclinometer"]["getDefault"]();
			if (inclinometer)
			{
				inclinometer["reportInterval"] = Math.max(inclinometer["minimumReportInterval"], 16);
				inclinometer.addEventListener("readingchanged", win8inclinometerFn);
			}
			document.addEventListener("visibilitychange", function(e) {
				if (document["hidden"] || document["msHidden"])
				{
					if (accelerometer)
						accelerometer.removeEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.removeEventListener("readingchanged", win8inclinometerFn);
				}
				else
				{
					if (accelerometer)
						accelerometer.addEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.addEventListener("readingchanged", win8inclinometerFn);
				}
			}, false);
		}
		else
		{
			window.addEventListener("deviceorientation", function (eventData) {
				self.orient_alpha = eventData["alpha"] || 0;
				self.orient_beta = eventData["beta"] || 0;
				self.orient_gamma = eventData["gamma"] || 0;
			}, false);
			window.addEventListener("devicemotion", function (eventData) {
				if (eventData["accelerationIncludingGravity"])
				{
					self.acc_g_x = eventData["accelerationIncludingGravity"]["x"];
					self.acc_g_y = eventData["accelerationIncludingGravity"]["y"];
					self.acc_g_z = eventData["accelerationIncludingGravity"]["z"];
				}
				if (eventData["acceleration"])
				{
					self.acc_x = eventData["acceleration"]["x"];
					self.acc_y = eventData["acceleration"]["y"];
					self.acc_z = eventData["acceleration"]["z"];
				}
			}, false);
		}
		if (this.useMouseInput && !this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
		}
		if (this.runtime.isAppMobi && !this.runtime.isDirectCanvas)
		{
			AppMobi["accelerometer"]["watchAcceleration"](AppMobiGetAcceleration, { "frequency": 40, "adjustForRotation": true });
		}
		if (this.runtime.isPhoneGap)
		{
			navigator["accelerometer"]["watchAcceleration"](PhoneGapGetAcceleration, null, { "frequency": 40 });
		}
		this.runtime.tick2Me(this);
	};
	instanceProto.onPointerMove = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		var nowtime = cr.performance_now();
		if (i >= 0)
		{
			var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
			var t = this.touches[i];
			if (nowtime - t.time < 2)
				return;
			t.lasttime = t.time;
			t.lastx = t.x;
			t.lasty = t.y;
			t.time = nowtime;
			t.x = info.pageX - offset.left;
			t.y = info.pageY - offset.top;
		}
	};
	instanceProto.onPointerStart = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var touchx = info.pageX - offset.left;
		var touchy = info.pageY - offset.top;
		var nowtime = cr.performance_now();
		this.trigger_index = this.touches.length;
		this.trigger_id = info["pointerId"];
		this.touches.push({ time: nowtime,
							x: touchx,
							y: touchy,
							lasttime: nowtime,
							lastx: touchx,
							lasty: touchy,
							"id": info["pointerId"],
							startindex: this.trigger_index
						});
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
		this.curTouchX = touchx;
		this.curTouchY = touchy;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onPointerEnd = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"] || info["pointerType"] === "mouse")
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		this.trigger_index = (i >= 0 ? this.touches[i].startindex : -1);
		this.trigger_id = (i >= 0 ? this.touches[i]["id"] : -1);
		this.runtime.isInUserInputEvent = true;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
		this.runtime.isInUserInputEvent = false;
		if (i >= 0)
		{
			this.touches.splice(i, 1);
		}
	};
	instanceProto.onTouchMove = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var nowtime = cr.performance_now();
		var i, len, t, u;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			var j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
				u = this.touches[j];
				if (nowtime - u.time < 2)
					continue;
				u.lasttime = u.time;
				u.lastx = u.x;
				u.lasty = u.y;
				u.time = nowtime;
				u.x = t.pageX - offset.left;
				u.y = t.pageY - offset.top;
			}
		}
	};
	instanceProto.onTouchStart = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var nowtime = cr.performance_now();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j !== -1)
				continue;
			var touchx = t.pageX - offset.left;
			var touchy = t.pageY - offset.top;
			this.trigger_index = this.touches.length;
			this.trigger_id = t["identifier"];
			this.touches.push({ time: nowtime,
								x: touchx,
								y: touchy,
								lasttime: nowtime,
								lastx: touchx,
								lasty: touchy,
								"id": t["identifier"],
								startindex: this.trigger_index
							});
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
			this.curTouchX = touchx;
			this.curTouchY = touchy;
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.onTouchEnd = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		this.runtime.isInUserInputEvent = true;
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				this.trigger_index = this.touches[j].startindex;
				this.trigger_id = this.touches[j]["id"];
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
				this.touches.splice(j, 1);
			}
		}
		this.runtime.isInUserInputEvent = false;
	};
	instanceProto.getAlpha = function ()
	{
		if (this.runtime.isAppMobi && this.orient_alpha === 0 && appmobi_accz !== 0)
			return appmobi_accz * 90;
		else if (this.runtime.isPhoneGap  && this.orient_alpha === 0 && pg_accz !== 0)
			return pg_accz * 90;
		else
			return this.orient_alpha;
	};
	instanceProto.getBeta = function ()
	{
		if (this.runtime.isAppMobi && this.orient_beta === 0 && appmobi_accy !== 0)
			return appmobi_accy * -90;
		else if (this.runtime.isPhoneGap  && this.orient_beta === 0 && pg_accy !== 0)
			return pg_accy * -90;
		else
			return this.orient_beta;
	};
	instanceProto.getGamma = function ()
	{
		if (this.runtime.isAppMobi && this.orient_gamma === 0 && appmobi_accx !== 0)
			return appmobi_accx * 90;
		else if (this.runtime.isPhoneGap  && this.orient_gamma === 0 && pg_accx !== 0)
			return pg_accx * 90;
		else
			return this.orient_gamma;
	};
	var noop_func = function(){};
	instanceProto.onMouseDown = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchStart(fakeinfo);
		this.mouseDown = true;
	};
	instanceProto.onMouseMove = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		if (!this.mouseDown)
			return;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchMove(fakeinfo);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		this.runtime.had_a_click = true;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchEnd(fakeinfo);
		this.mouseDown = false;
	};
	instanceProto.tick2 = function()
	{
		var i, len, t;
		var nowtime = cr.performance_now();
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			t = this.touches[i];
			if (t.time <= nowtime - 50)
				t.lasttime = nowtime;
		}
	};
	function Cnds() {};
	Cnds.prototype.OnTouchStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnTouchEnd = function ()
	{
		return true;
	};
	Cnds.prototype.IsInTouch = function ()
	{
		return this.touches.length;
	};
	Cnds.prototype.OnTouchObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.IsTouchingObject = function (type)
	{
		if (!type)
			return false;
		var sol = type.getCurrentSol();
		var instances = sol.getObjects();
		var px, py;
		var touching = [];
		var i, leni, j, lenj;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			var inst = instances[i];
			inst.update_bbox();
			for (j = 0, lenj = this.touches.length; j < lenj; j++)
			{
				var touch = this.touches[j];
				px = inst.layer.canvasToLayer(touch.x, touch.y, true);
				py = inst.layer.canvasToLayer(touch.x, touch.y, false);
				if (inst.contains_pt(px, py))
				{
					touching.push(inst);
					break;
				}
			}
		}
		if (touching.length)
		{
			sol.select_all = false;
			sol.instances = touching;
			type.applySolToContainer();
			return true;
		}
		else
			return false;
	};
	Cnds.prototype.CompareTouchSpeed = function (index, cmp, s)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
			return false;
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		var speed = 0;
		if (timediff > 0)
			speed = dist / timediff;
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.OrientationSupported = function ()
	{
		return typeof window["DeviceOrientationEvent"] !== "undefined";
	};
	Cnds.prototype.MotionSupported = function ()
	{
		return typeof window["DeviceMotionEvent"] !== "undefined";
	};
	Cnds.prototype.CompareOrientation = function (orientation_, cmp_, angle_)
	{
		var v = 0;
		if (orientation_ === 0)
			v = this.getAlpha();
		else if (orientation_ === 1)
			v = this.getBeta();
		else
			v = this.getGamma();
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.CompareAcceleration = function (acceleration_, cmp_, angle_)
	{
		var v = 0;
		if (acceleration_ === 0)
			v = this.acc_g_x;
		else if (acceleration_ === 1)
			v = this.acc_g_y;
		else if (acceleration_ === 2)
			v = this.acc_g_z;
		else if (acceleration_ === 3)
			v = this.acc_x;
		else if (acceleration_ === 4)
			v = this.acc_y;
		else if (acceleration_ === 5)
			v = this.acc_z;
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.OnNthTouchStart = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.OnNthTouchEnd = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.HasNthTouch = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return this.touches.length >= touch_ + 1;
	};
	pluginProto.cnds = new Cnds();
	function Exps() {};
	Exps.prototype.TouchCount = function (ret)
	{
		ret.set_int(this.touches.length);
	};
	Exps.prototype.X = function (ret, layerparam)
	{
		if (this.touches.length)
		{
			var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
			if (cr.is_undefined(layerparam))
			{
				layer = this.runtime.getLayerByNumber(0);
				oldScale = layer.scale;
				oldZoomRate = layer.zoomRate;
				oldParallaxX = layer.parallaxX;
				oldAngle = layer.angle;
				layer.scale = this.runtime.running_layout.scale;
				layer.zoomRate = 1.0;
				layer.parallaxX = 1.0;
				layer.angle = this.runtime.running_layout.angle;
				ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, true));
				layer.scale = oldScale;
				layer.zoomRate = oldZoomRate;
				layer.parallaxX = oldParallaxX;
				layer.angle = oldAngle;
			}
			else
			{
				if (cr.is_number(layerparam))
					layer = this.runtime.getLayerByNumber(layerparam);
				else
					layer = this.runtime.getLayerByName(layerparam);
				if (layer)
					ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, true));
				else
					ret.set_float(0);
			}
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.XAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		if (this.touches.length)
		{
			var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
			if (cr.is_undefined(layerparam))
			{
				layer = this.runtime.getLayerByNumber(0);
				oldScale = layer.scale;
				oldZoomRate = layer.zoomRate;
				oldParallaxY = layer.parallaxY;
				oldAngle = layer.angle;
				layer.scale = this.runtime.running_layout.scale;
				layer.zoomRate = 1.0;
				layer.parallaxY = 1.0;
				layer.angle = this.runtime.running_layout.angle;
				ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, false));
				layer.scale = oldScale;
				layer.zoomRate = oldZoomRate;
				layer.parallaxY = oldParallaxY;
				layer.angle = oldAngle;
			}
			else
			{
				if (cr.is_number(layerparam))
					layer = this.runtime.getLayerByNumber(layerparam);
				else
					layer = this.runtime.getLayerByName(layerparam);
				if (layer)
					ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, false));
				else
					ret.set_float(0);
			}
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.YAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].x);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteXAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].x);
	};
	Exps.prototype.AbsoluteXForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.x);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].y);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteYAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].y);
	};
	Exps.prototype.AbsoluteYForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.y);
	};
	Exps.prototype.SpeedAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.SpeedForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var dist = cr.distanceTo(touch.x, touch.y, touch.lastx, touch.lasty);
		var timediff = (touch.time - touch.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.AngleAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(t.lastx, t.lasty, t.x, t.y)));
	};
	Exps.prototype.AngleForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(touch.lastx, touch.lasty, touch.x, touch.y)));
	};
	Exps.prototype.Alpha = function (ret)
	{
		ret.set_float(this.getAlpha());
	};
	Exps.prototype.Beta = function (ret)
	{
		ret.set_float(this.getBeta());
	};
	Exps.prototype.Gamma = function (ret)
	{
		ret.set_float(this.getGamma());
	};
	Exps.prototype.AccelerationXWithG = function (ret)
	{
		ret.set_float(this.acc_g_x);
	};
	Exps.prototype.AccelerationYWithG = function (ret)
	{
		ret.set_float(this.acc_g_y);
	};
	Exps.prototype.AccelerationZWithG = function (ret)
	{
		ret.set_float(this.acc_g_z);
	};
	Exps.prototype.AccelerationX = function (ret)
	{
		ret.set_float(this.acc_x);
	};
	Exps.prototype.AccelerationY = function (ret)
	{
		ret.set_float(this.acc_y);
	};
	Exps.prototype.AccelerationZ = function (ret)
	{
		ret.set_float(this.acc_z);
	};
	Exps.prototype.TouchIndex = function (ret)
	{
		ret.set_int(this.trigger_index);
	};
	Exps.prototype.TouchID = function (ret)
	{
		ret.set_float(this.trigger_id);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.WebStorage = function(runtime)
{
	this.runtime = runtime;
};
(function()
{
	var pluginProto = cr.plugins_.WebStorage.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var prefix = "";
	var is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	if (is_arcade)
		prefix = "arcade" + window["scirra_arcade_id"];
	var logged_sessionnotsupported = false;
	function LogSessionNotSupported()
	{
		if (logged_sessionnotsupported)
			return;
		cr.logexport("[Construct 2] Webstorage plugin: session storage is not supported on this platform. Try using local storage or global variables instead.");
		logged_sessionnotsupported = true;
	};
	instanceProto.onCreate = function()
	{
	};
	function Cnds() {};
	Cnds.prototype.LocalStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.SessionStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.LocalStorageExists = function(key)
	{
		return localStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.SessionStorageExists = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return false;
		}
		return sessionStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.OnQuotaExceeded = function ()
	{
		return true;
	};
	Cnds.prototype.CompareKeyText = function (key, text_to_compare, case_sensitive)
	{
		var value = localStorage.getItem(prefix + key) || "";
		if (case_sensitive)
			return value == text_to_compare;
		else
			return cr.equals_nocase(value, text_to_compare);
	};
	Cnds.prototype.CompareKeyNumber = function (key, cmp, x)
	{
		var value = localStorage.getItem(prefix + key) || "";
		return cr.do_cmp(parseFloat(value), cmp, x);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StoreLocal = function(key, data)
	{
		try {
			localStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.StoreSession = function(key,data)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		try {
			sessionStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.RemoveLocal = function(key)
	{
		localStorage.removeItem(prefix + key);
	};
	Acts.prototype.RemoveSession = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		sessionStorage.removeItem(prefix + key);
	};
	Acts.prototype.ClearLocal = function()
	{
		if (!is_arcade)
			localStorage.clear();
	};
	Acts.prototype.ClearSession = function()
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		if (!is_arcade)
			sessionStorage.clear();
	};
	Acts.prototype.JSONLoad = function (json_, mode_)
	{
		var d;
		try {
			d = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!d["c2dictionary"])			// presumably not a c2dictionary object
			return;
		var o = d["data"];
		if (mode_ === 0 && !is_arcade)	// 'set' mode: must clear webstorage first
			localStorage.clear();
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
			{
				try {
					localStorage.setItem(prefix + p, o[p]);
				}
				catch (e)
				{
					this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
					return;
				}
			}
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LocalValue = function(ret,key)
	{
		ret.set_string(localStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.SessionValue = function(ret,key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		ret.set_string(sessionStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.LocalCount = function(ret)
	{
		ret.set_int(is_arcade ? 0 : localStorage.length);
	};
	Exps.prototype.SessionCount = function(ret)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_int(0);
			return;
		}
		ret.set_int(is_arcade ? 0 : sessionStorage.length);
	};
	Exps.prototype.LocalAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.getItem(localStorage.key(n)) || "");
	};
	Exps.prototype.SessionAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.getItem(sessionStorage.key(n)) || "");
	};
	Exps.prototype.LocalKeyAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.key(n) || "");
	};
	Exps.prototype.SessionKeyAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.key(n) || "");
	};
	Exps.prototype.AsJSON = function (ret)
	{
		var o = {}, i, len, k;
		for (i = 0, len = localStorage.length; i < len; i++)
		{
			k = localStorage.key(i);
			if (is_arcade)
			{
				if (k.substr(0, prefix.length) === prefix)
				{
					o[k.substr(prefix.length)] = localStorage.getItem(k);
				}
			}
			else
				o[k] = localStorage.getItem(k);
		}
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": o
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.gamepad = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.gamepad.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var gamepadRuntime = null;
	var gamepadInstance = null;
	var controllers = new Array(16);
	var osToken = "";
	var browserToken = "";
	var axisOffset = 16;
	var curCtrlMap = null;
	var ctrlmap = {};
	ctrlmap["windows"] = {};
	ctrlmap["windows"]["firefox"] = {};
	function doControllerMapping(index, isAxis, buttonmap, axismap)
	{
		if (isAxis)
		{
			if (index >= axismap.length)
				return -1;			// unknown axis
			if (cr.is_number(axismap[index]))
				return axismap[index] + axisOffset;
			else
			{
				return axismap[index];	// returning array
			}
		}
		else
		{
			if (index >= buttonmap.length)
				return -1;			// unknown button
			return buttonmap[index];
		}
	};
	var win_ff_xbox360_buttons = [0, 1, 2, 3, 4, 5, 8, 9, 10, 11];
	var win_ff_xbox360_axes    = [0, 1, [7, 6], 2, 3, [14, 15], [12, 13]];
	ctrlmap["windows"]["firefox"]["xbox360"] = function (index, isAxis)
	{
		return doControllerMapping(index, isAxis, win_ff_xbox360_buttons, win_ff_xbox360_axes);
	};
	var win_ff_lda_buttons = [2, 0, 1, 3, 4, 6, 5, 7, 8, 9];
	var win_ff_lda_axes    = [0, 1, 2, 3, [14, 15], [12, 13]];
	ctrlmap["windows"]["firefox"]["logitechdualaction"] = function (index, isAxis)
	{
		return doControllerMapping(index, isAxis, win_ff_lda_buttons, win_ff_lda_axes);
	};
	function defaultMap(index, isAxis)
	{
		if (isAxis)
		{
			if (index >= 4)
				return -1;		// unknown axis
			return index + axisOffset;
		}
		else
		{
			if (index >= 16)
				return -1;		// unknown button
			return index;
		}
	};
	function getMapper(id_)
	{
		if (!curCtrlMap)
			return defaultMap;
		var controllertoken = "";
		var id = id_.toLowerCase();
		if (id.indexOf("xbox 360") > -1)
			controllertoken = "xbox360";
		else if (id.indexOf("logitech dual action") > -1)
			controllertoken = "logitechdualaction";
		var curmap = curCtrlMap[controllertoken];
		return curmap || defaultMap;
	};
	function onConnected(e)
	{
		controllers[e["gamepad"]["index"]] = e["gamepad"];
		gamepadRuntime.trigger(cr.plugins_.gamepad.prototype.cnds.OnGamepadConnected, gamepadInstance);
	};
	function onDisconnected(e)
	{
		gamepadRuntime.trigger(cr.plugins_.gamepad.prototype.cnds.OnGamepadDisconnected, gamepadInstance);
		controllers[e["gamepad"]["index"]] = null;
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		gamepadRuntime = this.runtime;
		gamepadInstance = this;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.deadzone = this.properties[0];
		this.lastButton = 0;
		var userAgent = navigator.userAgent;
		osToken = "windows";
		if (/mac/i.test(userAgent))
			osToken = "mac";
		curCtrlMap = ctrlmap[osToken];
		browserToken = "chrome";
		if (/firefox/i.test(userAgent))
			browserToken = "firefox";
		if (curCtrlMap)
			curCtrlMap = curCtrlMap[browserToken];
		window.addEventListener("webkitgamepadconnected", onConnected, false);
		window.addEventListener("webkitgamepaddisconnected", onDisconnected, false);
		window.addEventListener("MozGamepadConnected", onConnected, false);
		window.addEventListener("MozGamepadDisconnected", onDisconnected, false);
		window.addEventListener("gamepadconnected", onConnected, false);
		window.addEventListener("gamepaddisconnected", onDisconnected, false);
		this.runtime.tickMe(this);
		this.activeControllers = [];
	};
	instanceProto.tick = function ()
	{
		this.activeControllers.length = 0;
		var gamepads = null;
		if (navigator["getGamepads"])
			gamepads = navigator["getGamepads"]();
		else if (navigator["webkitGetGamepads"])
			gamepads = navigator["webkitGetGamepads"]();
		else if (navigator["mozGetGamepads"])
			gamepads = navigator["mozGetGamepads"]();
		else
			gamepads = navigator["gamepads"] || navigator["webkitGamepads"] || navigator["MozGamepads"] || controllers;
		if (!gamepads)
			return;
		var i, len, j, lenj, mapfunc, index, value;
		for (i = 0, len = gamepads.length; i < len; i++)
		{
			var pad = gamepads[i];
			if (!pad)
				continue;
			if (!pad.c2state)
			{
				pad.c2state = new Array(20);
				pad.c2oldstate = new Array(20);
				for (j = 0; j < 20; j++)
					pad.c2oldstate[j] = 0;
			}
			else
			{
				for (j = 0; j < 20; j++)
					pad.c2oldstate[j] = pad.c2state[j];
			}
			mapfunc = getMapper(pad.id);
			for (j = 0, lenj = pad["buttons"].length; j < lenj; j++)
			{
				value = pad["buttons"][j];
				index = mapfunc(j, false, value);
				if (index >= 0 && index < 20)
				{
					pad.c2state[index] = value * 100;
					if (pad.c2state[index] >= 50 && pad.c2oldstate[index] < 50)
						this.lastButton = index;
				}
			}
			for (j = 0, lenj = pad["axes"].length; j < lenj; j++)
			{
				value = pad["axes"][j];
				index = mapfunc(j, true, value);
				if (cr.is_number(index))
				{
					if (index >= 0 && index < 20)
						pad.c2state[index] = value * 100;
				}
				else
				{
					pad.c2state[index[0]] = 0;
					pad.c2state[index[1]] = 0;
					if (value <= 0)
						pad.c2state[index[0]] = Math.abs(value * 100);
					else
						pad.c2state[index[1]] = Math.abs(value * 100);
				}
			}
			this.activeControllers.push(pad);
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return { "lastButton": this.lastButton };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.lastButton = o["lastButton"];
	};
	function Cnds() {};
	Cnds.prototype.OnGamepadConnected = function ()
	{
		return true;
	};
	Cnds.prototype.OnGamepadDisconnected = function ()
	{
		return true;
	};
	Cnds.prototype.IsButtonDown = function (gamepad, button)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		var ret = pad.c2state[button] >= 50;
		if (ret)
			this.lastButton = button;
		return ret;
	};
	Cnds.prototype.OnButtonDown = function (gamepad, button)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		var ret = pad.c2state[button] >= 50 && pad.c2oldstate[button] < 50;
		if (ret)
			this.lastButton = button;
		return ret;
	};
	Cnds.prototype.OnButtonUp = function (gamepad, button)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		var ret = pad.c2state[button] < 50 && pad.c2oldstate[button] >= 50;
		if (ret)
			this.lastButton = button;
		return ret;
	};
	Cnds.prototype.HasGamepads = function ()
	{
		return this.activeControllers.length > 0;
	};
	Cnds.prototype.CompareAxis = function (gamepad, axis, comparison, value)
	{
		gamepad = Math.floor(gamepad);
		axis = Math.floor(axis);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		var axisvalue = pad.c2state[axis + axisOffset];
		var othervalue = 0;
		if (axis % 2 === 0)										// is X axis
			othervalue = pad.c2state[axis + axisOffset + 1];	// get next axis (Y)
		else
			othervalue = pad.c2state[axis + axisOffset - 1];	// get previous axis (X)
		if (Math.sqrt(axisvalue * axisvalue + othervalue * othervalue) <= this.deadzone)
			axisvalue = 0;
		return cr.do_cmp(axisvalue, comparison, value);
	};
	Cnds.prototype.OnAnyButtonDown = function (gamepad)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		var i, len;
		for (i = 0, len = pad.c2state.length; i < len; i++)
		{
			if (pad.c2state[i] >= 50 && pad.c2oldstate[i] < 50)
			{
				this.lastButton = i;
				return true;
			}
		}
		return false;
	};
	Cnds.prototype.OnAnyButtonUp = function (gamepad)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		var i, len;
		for (i = 0, len = pad.c2state.length; i < len; i++)
		{
			if (pad.c2state[i] < 50 && pad.c2oldstate[i] >= 50)
			{
				this.lastButton = i;
				return true;
			}
		}
		return false;
	};
	Cnds.prototype.IsButtonIndexDown = function (gamepad, button)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		button = Math.floor(button);
		if (button < 0 || button >= pad.c2state.length)
			return false;
		var ret = pad.c2state[button] >= 50;
		if (ret)
			this.lastButton = button;
		return ret;
	};
	Cnds.prototype.OnButtonIndexDown = function (gamepad, button)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		button = Math.floor(button);
		if (button < 0 || button >= pad.c2state.length)
			return false;
		var ret = pad.c2state[button] >= 50 && pad.c2oldstate[button] < 50;
		if (ret)
			this.lastButton = button;
		return ret;
	};
	Cnds.prototype.OnButtonIndexUp = function (gamepad, button)
	{
		gamepad = Math.floor(gamepad);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
			return false;
		var pad = this.activeControllers[gamepad];
		if (!pad.c2state)
			return false;
		button = Math.floor(button);
		if (button < 0 || button >= pad.c2state.length)
			return false;
		var ret = pad.c2state[button] < 50 && pad.c2oldstate[button] >= 50;
		if (ret)
			this.lastButton = button;
		return ret;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.GamepadCount = function (ret)
	{
		ret.set_int(this.activeControllers.length);
	};
	Exps.prototype.GamepadID = function (ret, index)
	{
		if (index < 0 || index >= this.activeControllers.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(this.activeControllers[index].id);
	};
	Exps.prototype.GamepadAxes = function (ret, index)
	{
		if (index < 0 || index >= this.activeControllers.length)
		{
			ret.set_string("");
			return;
		}
		var axes = this.activeControllers[index]["axes"];
		var str = "";
		var i, len;
		for (i = 0, len = axes.length; i < len; i++)
		{
			str += "Axis " + i + ": " + Math.round(axes[i] * 100) + "\n";
		}
		ret.set_string(str);
	};
	Exps.prototype.GamepadButtons = function (ret, index)
	{
		if (index < 0 || index >= this.activeControllers.length)
		{
			ret.set_string("");
			return;
		}
		var buttons = this.activeControllers[index]["buttons"];
		var str = "";
		var i, len;
		for (i = 0, len = buttons.length; i < len; i++)
		{
			str += "Button " + i + ": " + Math.round(buttons[i] * 100) + "\n";
		}
		ret.set_string(str);
	};
	Exps.prototype.RawButton = function (ret, gamepad, index)
	{
		gamepad = Math.floor(gamepad);
		index = Math.floor(index);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
		{
			ret.set_float(0);
			return;
		}
		var state = this.activeControllers[gamepad]["buttons"];
		if (!state || index < 0 || index >= state.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(state[index]);
	};
	Exps.prototype.RawAxis = function (ret, gamepad, index)
	{
		gamepad = Math.floor(gamepad);
		index = Math.floor(index);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
		{
			ret.set_float(0);
			return;
		}
		var state = this.activeControllers[gamepad]["axes"];
		if (!state || index < 0 || index >= state.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(state[index]);
	};
	Exps.prototype.RawButtonCount = function (ret, gamepad)
	{
		gamepad = Math.floor(gamepad);
		index = Math.floor(index);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
		{
			ret.set_int(0);
			return;
		}
		ret.set_int(this.activeControllers[gamepad]["buttons"].length);
	};
	Exps.prototype.RawAxisCount = function (ret, gamepad)
	{
		gamepad = Math.floor(gamepad);
		index = Math.floor(index);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
		{
			ret.set_int(0);
			return;
		}
		ret.set_int(this.activeControllers[gamepad]["axes"].length);
	};
	Exps.prototype.Button = function (ret, gamepad, index)
	{
		gamepad = Math.floor(gamepad);
		index = Math.floor(index);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
		{
			ret.set_float(0);
			return;
		}
		var state = this.activeControllers[gamepad].c2state;
		if (!state || index < 0 || index >= axisOffset)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(state[index]);
	};
	Exps.prototype.Axis = function (ret, gamepad, index)
	{
		gamepad = Math.floor(gamepad);
		index = Math.floor(index);
		if (gamepad < 0 || gamepad >= this.activeControllers.length)
		{
			ret.set_float(0);
			return;
		}
		var state = this.activeControllers[gamepad].c2state;
		if (!state || index < 0 || index >= 4)
		{
			ret.set_float(0);
			return;
		}
		var value = state[index + axisOffset];
		var othervalue = 0;
		if (index % 2 === 0)								// is X axis
			othervalue = state[index + axisOffset + 1];		// get next axis (Y)
		else
			othervalue = state[index + axisOffset - 1];		// get previous axis (X)
		if (Math.sqrt(value * value + othervalue * othervalue) <= this.deadzone)
			value = 0;
		ret.set_float(value);
	};
	Exps.prototype.LastButton = function (ret)
	{
		ret.set_int(this.lastButton);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.behaviors.Pin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Pin.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.pinObject = null;
		this.pinObjectUid = -1;		// for loading
		this.pinAngle = 0;
		this.pinDist = 0;
		this.myStartAngle = 0;
		this.theirStartAngle = 0;
		this.lastKnownAngle = 0;
		this.mode = 0;				// 0 = position & angle; 1 = position; 2 = angle; 3 = rope; 4 = bar
		var self = this;
		if (!this.recycled)
		{
			this.myDestroyCallback = (function(inst) {
													self.onInstanceDestroyed(inst);
												});
		}
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"uid": this.pinObject ? this.pinObject.uid : -1,
			"pa": this.pinAngle,
			"pd": this.pinDist,
			"msa": this.myStartAngle,
			"tsa": this.theirStartAngle,
			"lka": this.lastKnownAngle,
			"m": this.mode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.pinObjectUid = o["uid"];		// wait until afterLoad to look up
		this.pinAngle = o["pa"];
		this.pinDist = o["pd"];
		this.myStartAngle = o["msa"];
		this.theirStartAngle = o["tsa"];
		this.lastKnownAngle = o["lka"];
		this.mode = o["m"];
	};
	behinstProto.afterLoad = function ()
	{
		if (this.pinObjectUid === -1)
			this.pinObject = null;
		else
		{
			this.pinObject = this.runtime.getObjectByUID(this.pinObjectUid);
;
		}
		this.pinObjectUid = -1;
	};
	behinstProto.onInstanceDestroyed = function (inst)
	{
		if (this.pinObject == inst)
			this.pinObject = null;
	};
	behinstProto.onDestroy = function()
	{
		this.pinObject = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		if (!this.pinObject)
			return;
		if (this.lastKnownAngle !== this.inst.angle)
			this.myStartAngle = cr.clamp_angle(this.myStartAngle + (this.inst.angle - this.lastKnownAngle));
		var newx = this.inst.x;
		var newy = this.inst.y;
		if (this.mode === 3 || this.mode === 4)		// rope mode or bar mode
		{
			var dist = cr.distanceTo(this.inst.x, this.inst.y, this.pinObject.x, this.pinObject.y);
			if ((dist > this.pinDist) || (this.mode === 4 && dist < this.pinDist))
			{
				var a = cr.angleTo(this.pinObject.x, this.pinObject.y, this.inst.x, this.inst.y);
				newx = this.pinObject.x + Math.cos(a) * this.pinDist;
				newy = this.pinObject.y + Math.sin(a) * this.pinDist;
			}
		}
		else
		{
			newx = this.pinObject.x + Math.cos(this.pinObject.angle + this.pinAngle) * this.pinDist;
			newy = this.pinObject.y + Math.sin(this.pinObject.angle + this.pinAngle) * this.pinDist;
		}
		var newangle = cr.clamp_angle(this.myStartAngle + (this.pinObject.angle - this.theirStartAngle));
		this.lastKnownAngle = newangle;
		if ((this.mode === 0 || this.mode === 1 || this.mode === 3 || this.mode === 4)
			&& (this.inst.x !== newx || this.inst.y !== newy))
		{
			this.inst.x = newx;
			this.inst.y = newy;
			this.inst.set_bbox_changed();
		}
		if ((this.mode === 0 || this.mode === 2) && (this.inst.angle !== newangle))
		{
			this.inst.angle = newangle;
			this.inst.set_bbox_changed();
		}
	};
	function Cnds() {};
	Cnds.prototype.IsPinned = function ()
	{
		return !!this.pinObject;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Pin = function (obj, mode_)
	{
		if (!obj)
			return;
		var otherinst = obj.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		this.pinObject = otherinst;
		this.pinAngle = cr.angleTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y) - otherinst.angle;
		this.pinDist = cr.distanceTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y);
		this.myStartAngle = this.inst.angle;
		this.lastKnownAngle = this.inst.angle;
		this.theirStartAngle = otherinst.angle;
		this.mode = mode_;
	};
	Acts.prototype.Unpin = function ()
	{
		this.pinObject = null;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.PinnedUID = function (ret)
	{
		ret.set_int(this.pinObject ? this.pinObject.uid : -1);
	};
	behaviorProto.exps = new Exps();
}());
/*
 Platform Plus
Scirra´s default platform behavior lacks of some nice functionality, this is why
Im implementing some of the functionality I need on a plataform object.
Since I like better to code than using C2 to generate events Im modifiying this file
so it behaves as I need.
Changes in version 1.3
-Added wall jump functionality
-Added wall jump parameter for configuration in Construct
Changes in version 1.2
-Added double jump functionality
Changes in version 1.1
-Added hold jump functionality
-Aded jump control parameter for configuration in Construct
Future changes
- Possibility to define how many jumps you can do
- Dash
- Crouch
To do
- Add events for the player when its currently stick to the wall
- Add events to enable wall jump
If you think you can help me pls do it and send me an email or post on the forum thread in Scirra´s site
Extended by: Jorge Popoca, hazneliel@gmail.com
version 1.3
05.04.2013
*/
;
;
cr.behaviors.PlatformPlus = function(runtime) {
	this.runtime = runtime;
};
(function () {
	var behaviorProto = cr.behaviors.PlatformPlus.prototype;
	behaviorProto.Type = function(behavior, objtype) {
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function() {
	};
	var ANIMMODE_STOPPED = 0;
	var ANIMMODE_MOVING = 1;
	var ANIMMODE_JUMPING = 2;
	var ANIMMODE_FALLING = 3;
	behaviorProto.Instance = function(type, inst) {
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.leftkey = false;
		this.rightkey = false;
		this.jumpkey = false;
		this.jumped = false;			// prevent bunnyhopping
		this.ignoreInput = false;
		this.isJumping = false;			// Helper for Jump control
		this.doubleJumped = false;
		this.simleft = false;
		this.simright = false;
		this.simjump = false;
		this.lastFloorObject = null;
		this.lastFloorX = 0;
		this.lastFloorY = 0;
		this.animMode = ANIMMODE_STOPPED;
		this.enabled = true;
		this.fallthrough = 0;			// fall through jump-thru.  >0 to disable, lasts a few ticks
		this.firstTick = true;
		this.dx = 0;
		this.dy = 0;
		this.lKey = 37;
		this.rKey = 39;
		/* Potential acceleration when wall jumping, helps to impulse the player on x when it
		 * wall jumps
		 */
		this.potencialAcc = 0;
		/* Helper to reset some events after certain ammount of ticks
		 * Currently is used by Wall jump, when we reset the potentialAcc to
		 * 0 after some ticks
		 */
		this.lastTickCount = 0;
		this.isStickWall = false;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.updateGravity = function() {
		this.downx = Math.cos(this.ga);
		this.downy = Math.sin(this.ga);
		this.rightx = Math.cos(this.ga - Math.PI / 2);
		this.righty = Math.sin(this.ga - Math.PI / 2);
		this.downx = cr.round6dp(this.downx);
		this.downy = cr.round6dp(this.downy);
		this.rightx = cr.round6dp(this.rightx);
		this.righty = cr.round6dp(this.righty);
		this.g1 = this.g;
		if (this.g < 0) {
			this.downx *= -1;
			this.downy *= -1;
			this.g = Math.abs(this.g);
		}
	};
	behinstProto.onCreate = function() {
		this.maxspeed = this.properties[0];
		this.acc = this.properties[1];
		this.dec = this.properties[2];
		this.jumpStrength = this.properties[3];
		this.g = this.properties[4];
		this.g1 = this.g;
		this.maxFall = this.properties[5];
		this.defaultControls = (this.properties[6] === 1);	// 0=no, 1=yes
		this.jumpControl = (this.properties[7] === 1);	// 0=no, 1=yes
		this.enableDoubleJump = (this.properties[8] === 1);	// 0=no, 1=yes
		this.enableWallJump = (this.properties[9] === 1);	// 0=no, 1=yes
		this.wasOnFloor = false;
		this.wasOverJumpthru = this.runtime.testOverlapJumpThru(this.inst);
		this.ga = cr.to_radians(90);
		this.updateGravity();
		if (this.defaultControls && !this.runtime.isDomFree) {
			jQuery(document).keydown(
				(function (self) {
					return function(info) {
						self.onKeyDown(info);
					};
				})(this)
			);
			jQuery(document).keyup(
				(function (self) {
					return function(info) {
						self.onKeyUp(info);
					};
				})(this)
			);
		}
		var self = this;
		this.myDestroyCallback = function(inst) {
									self.onInstanceDestroyed(inst);
								};
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.onInstanceDestroyed = function (inst) {
		if (this.lastFloorObject == inst)
			this.lastFloorObject = null;
	};
	behinstProto.onDestroy = function () {
		this.lastFloorObject = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.onKeyDown = function (info) {
		switch (info.which) {
		case 38:	// up
			info.preventDefault();
			this.jumpkey = true;
			break;
		case this.lKey:	// left
			info.preventDefault();
			this.leftkey = true;
			break;
		case this.rKey:	// right
			info.preventDefault();
			this.rightkey = true;
			break;
		}
	};
	behinstProto.onKeyUp = function (info)
	{
		switch (info.which) {
		case 38:	// up
			info.preventDefault();
			this.jumpkey = false;
			this.jumped = false;
			break;
		case this.lKey:	// left
			info.preventDefault();
			this.leftkey = false;
			break;
		case this.rKey:	// right
			info.preventDefault();
			this.rightkey = false;
			break;
		}
	};
	behinstProto.getGDir = function () {
		if (this.g < 0)
			return -1;
		else
			return 1;
	};
	behinstProto.isOnFloor = function () {
		var ret = null;
		var ret2 = null;
		var i, len, j;
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x += this.downx;
		this.inst.y += this.downy;
		this.inst.set_bbox_changed();
		if (this.lastFloorObject && this.runtime.testOverlap(this.inst, this.lastFloorObject)) {
			this.inst.x = oldx;
			this.inst.y = oldy;
			this.inst.set_bbox_changed();
			return this.lastFloorObject;
		} else {
			ret = this.runtime.testOverlapSolid(this.inst);
			if (!ret && this.fallthrough === 0)
				ret2 = this.runtime.testOverlapJumpThru(this.inst, true);
			this.inst.x = oldx;
			this.inst.y = oldy;
			this.inst.set_bbox_changed();
			if (ret)		// was overlapping solid
			{
				if (this.runtime.testOverlap(this.inst, ret))
					return null;
				else
					return ret;
			}
			if (ret2 && ret2.length) {
				for (i = 0, j = 0, len = ret2.length; i < len; i++) {
					ret2[j] = ret2[i];
					if (!this.runtime.testOverlap(this.inst, ret2[i]))
						j++;
				}
				if (j >= 1)
					return ret2[0];
			}
			return null;
		}
	};
	/* TICK --------------------------------------------------------------- */
	behinstProto.tick = function () {
		var dt = this.runtime.getDt(this.inst);
		var mx, my, obstacle, mag, allover, i, len, j, oldx, oldy;
		/* Reset potential acceleration after some ticks had passed after wall jumped */
		if (this.lastTickCount != 0)
			if ((this.inst.runtime.tickcount - this.lastTickCount) > 10) {
				this.potencialAcc = 0;
				this.lastTickCount = 0;
			}
		if (!this.jumpkey && !this.simjump) {
			this.jumped = false;
		}
		var left = this.leftkey || this.simleft;
		var right = this.rightkey || this.simright;
		var jump = (this.jumpkey || this.simjump) && !this.jumped;
		this.simleft = false;
		this.simright = false;
		this.simjump = false;
		if (!this.enabled)
			return;
		if (this.ignoreInput) {
			left = false;
			right = false;
			jump = false;
		}
		var lastFloor = this.lastFloorObject;
		var floor_moved = false;
		if (this.firstTick) {
			if (this.runtime.testOverlapSolid(this.inst) || this.runtime.testOverlapJumpThru(this.inst)) {
				this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, 4, true);
			}
			this.firstTick = false;
		}
		if (lastFloor && this.dy === 0 && (lastFloor.y !== this.lastFloorY || lastFloor.x !== this.lastFloorX)) {
			mx = (lastFloor.x - this.lastFloorX);
			my = (lastFloor.y - this.lastFloorY);
			this.inst.x += mx;
			this.inst.y += my;
			this.inst.set_bbox_changed();
			this.lastFloorX = lastFloor.x;
			this.lastFloorY = lastFloor.y;
			floor_moved = true;
			if (this.runtime.testOverlapSolid(this.inst)) {
				this.runtime.pushOutSolid(this.inst, -mx, -my, Math.sqrt(mx * mx + my * my) * 2.5);
			}
		}
		var floor_ = this.isOnFloor();
		var collobj = this.runtime.testOverlapSolid(this.inst);
		if (collobj) {
			if (this.runtime.pushOutSolidNearest(this.inst, Math.max(this.inst.width, this.inst.height) / 2))
				this.runtime.registerCollision(this.inst, collobj);
			else
				return;
		}
		if (floor_) {
			/* reset jumping vars, it landed */
			this.isJumping = false;
			this.doubleJumped = false;
			if (this.dy > 0) {
				if (!this.wasOnFloor) {
					this.runtime.pushInFractional(this.inst, -this.downx, -this.downy, floor_, 16);
					this.wasOnFloor = true;
				}
				this.dy = 0;
			}
			if (lastFloor != floor_) {
				this.lastFloorObject = floor_;
				this.lastFloorX = floor_.x;
				this.lastFloorY = floor_.y;
				this.runtime.registerCollision(this.inst, floor_);
			}
			else if (floor_moved) {
				collobj = this.runtime.testOverlapSolid(this.inst);
				if (collobj) {
					this.runtime.registerCollision(this.inst, collobj);
					if (mx !== 0) {
						if (mx > 0)
							this.runtime.pushOutSolid(this.inst, -this.rightx, -this.righty);
						else
							this.runtime.pushOutSolid(this.inst, this.rightx, this.righty);
					}
					this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy);
				}
			}
			/* JUMP -------------------------------------------------------------- */
			if (jump) {
				oldx = this.inst.x;
				oldy = this.inst.y;
				this.inst.x -= this.downx;
				this.inst.y -= this.downy;
				this.inst.set_bbox_changed();
				if (!this.runtime.testOverlapSolid(this.inst)) {
					this.dy = -this.jumpStrength;
					this.runtime.trigger(cr.behaviors.PlatformPlus.prototype.cnds.OnJump, this.inst);
					this.animMode = ANIMMODE_JUMPING;
					this.jumped = true;
					if (this.jumpControl == 1) {
						this.isJumping = true;
					}
				} else {
					jump = false;
				}
				this.inst.x = oldx;
				this.inst.y = oldy;
				this.inst.set_bbox_changed();
			}
		}
		else {
			this.lastFloorObject = null;
			this.dy += this.g * dt;
			if (this.dy > this.maxFall)
				this.dy = this.maxFall;
			if (jump)
				this.jumped = true;
			/* Double JUMP -------------------------------------------------------------- */
			if (jump && this.enableDoubleJump && !this.doubleJumped && !this.isStickWall) {
				oldx = this.inst.x;
				oldy = this.inst.y;
				this.inst.x -= this.downx;
				this.inst.y -= this.downy;
				this.inst.set_bbox_changed();
				var obstacleSide = this.runtime.testOverlapSolid(this.inst);
				if (!this.runtime.testOverlapSolid(this.inst)) {
					this.dy = -this.jumpStrength;
					this.runtime.trigger(cr.behaviors.PlatformPlus.prototype.cnds.OnJump, this.inst);
					this.animMode = ANIMMODE_JUMPING;
					this.doubleJumped = true;
					if (this.jumpControl == 1) {
						this.isJumping = true;
					}
				} else {
					jump = false;
				}
				this.inst.x = oldx;
				this.inst.y = oldy;
				this.inst.set_bbox_changed();
			}
		}
		this.wasOnFloor = !!floor_;
		if (this.isJumping && !this.jumped && (this.dy < 0)) {
			this.dy = this.dy/2;
			this.isJumping = false;
		}
		if (left == right)	// both up or both down
		{
			if (this.dx < 0)
			{
				this.dx += this.dec * dt;
				if (this.dx > 0)
					this.dx = 0;
			}
			else if (this.dx > 0)
			{
				this.dx -= this.dec * dt;
				if (this.dx < 0)
					this.dx = 0;
			}
		}
		if (left && !right) {
			if (this.dx > 0)
				this.dx -= (this.acc + this.dec) * dt - this.potencialAcc;
			else
				this.dx -= this.acc * dt - this.potencialAcc;
		}
		if (right && !left) {
			if (this.dx < 0)
				this.dx += (this.acc + this.dec) * dt - this.potencialAcc;
			else
				this.dx += this.acc * dt - this.potencialAcc;
		}
		if (this.dx > this.maxspeed)
			this.dx = this.maxspeed;
		else if (this.dx < -this.maxspeed)
			this.dx = -this.maxspeed;
		if (this.dx !== 0) {
			oldx = this.inst.x;
			oldy = this.inst.y;
			mx = this.dx * dt * this.rightx;
			my = this.dx * dt * this.righty;
			this.inst.x += this.rightx * (this.dx > 1 ? 1 : -1) - this.downx;
			this.inst.y += this.righty * (this.dx > 1 ? 1 : -1) - this.downy;
			this.inst.set_bbox_changed();
			var is_jumpthru = false;
			var slope_too_steep = this.runtime.testOverlapSolid(this.inst);
			/*
			if (!slope_too_steep && floor_)
			{
				slope_too_steep = this.runtime.testOverlapJumpThru(this.inst);
				is_jumpthru = true;
				if (slope_too_steep)
				{
					this.inst.x = oldx;
					this.inst.y = oldy;
					this.inst.set_bbox_changed();
					if (this.runtime.testOverlap(this.inst, slope_too_steep))
					{
						slope_too_steep = null;
						is_jumpthru = false;
					}
				}
			}
			*/
			this.inst.x = oldx + mx;
			this.inst.y = oldy + my;
			this.inst.set_bbox_changed();
			obstacle = this.runtime.testOverlapSolid(this.inst);
			if (!obstacle && floor_){
				obstacle = this.runtime.testOverlapJumpThru(this.inst);
				if (obstacle) {
					this.inst.x = oldx;
					this.inst.y = oldy;
					this.inst.set_bbox_changed();
					if (this.runtime.testOverlap(this.inst, obstacle))
					{
						obstacle = null;
						is_jumpthru = false;
					}
					else
						is_jumpthru = true;
					this.inst.x = oldx + mx;
					this.inst.y = oldy + my;
					this.inst.set_bbox_changed();
				}
			}
			if (obstacle && !floor_ && (this.dy > 0) && this.enableWallJump) {
				this.isStickWall = true;
				this.dy = this.dy/2;
				/* WALL JUMP -------------------------------------------------------------- */
					if (jump) {
						oldx = this.inst.x;
						oldy = this.inst.y;
						this.inst.x -= this.downx;
						this.inst.y -= this.downy;
						this.inst.set_bbox_changed();
						if (this.runtime.testOverlapSolid(this.inst)) {
							this.dy = -this.jumpStrength;
							this.potencialAcc = 200;
							this.lastTickCount = this.inst.runtime.tickcount;
							this.runtime.trigger(cr.behaviors.PlatformPlus.prototype.cnds.OnJump, this.inst);
							this.animMode = ANIMMODE_JUMPING;
							if (this.jumpControl == 1) {
								this.isJumping = true;
							}
						} else {
							jump = false;
						}
						this.inst.x = oldx;
						this.inst.y = oldy;
						this.inst.set_bbox_changed();
					}
			} else {this.isStickWall = false;}
			if (obstacle) {
				var push_dist = Math.abs(this.dx * dt) + 2;
				if (slope_too_steep || !this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, push_dist, is_jumpthru, obstacle)) {
					this.runtime.registerCollision(this.inst, obstacle);
					push_dist = Math.max(Math.abs(this.dx * dt * 2.5), 30);
					if (!this.runtime.pushOutSolid(this.inst, this.rightx * (this.dx < 0 ? 1 : -1), this.righty * (this.dx < 0 ? 1 : -1), push_dist, false))
					{
						this.inst.x = oldx;
						this.inst.y = oldy;
						this.inst.set_bbox_changed();
					}
					if (!is_jumpthru)
						this.dx = 0;	// stop
				}
			}
			else
			{
				var newfloor = this.isOnFloor();
				if (floor_ && !newfloor)
				{
					mag = Math.ceil(Math.abs(this.dx * dt)) + 2;
					oldx = this.inst.x;
					oldy = this.inst.y;
					this.inst.x += this.downx * mag;
					this.inst.y += this.downy * mag;
					this.inst.set_bbox_changed();
					if (this.runtime.testOverlapSolid(this.inst) || this.runtime.testOverlapJumpThru(this.inst))
						this.runtime.pushOutSolid(this.inst, -this.downx, -this.downy, mag + 2, true);
					else
					{
						this.inst.x = oldx;
						this.inst.y = oldy;
						this.inst.set_bbox_changed();
					}
				}
				else if (newfloor && this.dy === 0)
				{
					this.runtime.pushInFractional(this.inst, -this.downx, -this.downy, newfloor, 16);
				}
			}
		}
		var landed = false;
		if (this.dy !== 0)
		{
			oldx = this.inst.x;
			oldy = this.inst.y;
			this.inst.x += this.dy * dt * this.downx;
			this.inst.y += this.dy * dt * this.downy;
			var newx = this.inst.x;
			var newy = this.inst.y;
			this.inst.set_bbox_changed();
			collobj = this.runtime.testOverlapSolid(this.inst);
			var fell_on_jumpthru = false;
			if (!collobj && (this.dy > 0) && !floor_)
			{
				allover = this.fallthrough > 0 ? null : this.runtime.testOverlapJumpThru(this.inst, true);
				if (allover && allover.length)
				{
					if (this.wasOverJumpthru)
					{
						this.inst.x = oldx;
						this.inst.y = oldy;
						this.inst.set_bbox_changed();
						for (i = 0, j = 0, len = allover.length; i < len; i++)
						{
							allover[j] = allover[i];
							if (!this.runtime.testOverlap(this.inst, allover[i]))
								j++;
						}
						allover.length = j;
						this.inst.x = newx;
						this.inst.y = newy;
						this.inst.set_bbox_changed();
					}
					if (allover.length >= 1)
						collobj = allover[0];
				}
				fell_on_jumpthru = !!collobj;
			}
			if (collobj)
			{
				this.runtime.registerCollision(this.inst, collobj);
				var push_dist = Math.max(Math.abs(this.dy * dt * 2.5 + 10), 30);
				if (!this.runtime.pushOutSolid(this.inst, this.downx * (this.dy < 0 ? 1 : -1), this.downy * (this.dy < 0 ? 1 : -1), push_dist, fell_on_jumpthru, collobj))
				{
					this.inst.x = oldx;
					this.inst.y = oldy;
					this.inst.set_bbox_changed();
					this.wasOnFloor = true;		// prevent adjustment for unexpected floor landings
				}
				else
				{
					this.lastFloorObject = collobj;
					this.lastFloorX = collobj.x;
					this.lastFloorY = collobj.y;
					if (fell_on_jumpthru)
						landed = true;
				}
				this.dy = 0;	// stop
			}
		}
		if (this.animMode !== ANIMMODE_FALLING && this.dy > 0 && !floor_)
		{
			this.runtime.trigger(cr.behaviors.PlatformPlus.prototype.cnds.OnFall, this.inst);
			this.animMode = ANIMMODE_FALLING;
		}
		if (floor_ || landed)
		{
			if (this.animMode === ANIMMODE_FALLING || landed || (jump && this.dy === 0))
			{
				this.runtime.trigger(cr.behaviors.PlatformPlus.prototype.cnds.OnLand, this.inst);
				if (this.dx === 0 && this.dy === 0)
					this.animMode = ANIMMODE_STOPPED;
				else
					this.animMode = ANIMMODE_MOVING;
			}
			else
			{
				if (this.animMode !== ANIMMODE_STOPPED && this.dx === 0 && this.dy === 0)
				{
					this.runtime.trigger(cr.behaviors.PlatformPlus.prototype.cnds.OnStop, this.inst);
					this.animMode = ANIMMODE_STOPPED;
				}
				if (this.animMode !== ANIMMODE_MOVING && (this.dx !== 0 || this.dy !== 0) && !jump)
				{
					this.runtime.trigger(cr.behaviors.PlatformPlus.prototype.cnds.OnMove, this.inst);
					this.animMode = ANIMMODE_MOVING;
				}
			}
		}
		if (this.fallthrough > 0)
			this.fallthrough--;
		this.wasOverJumpthru = this.runtime.testOverlapJumpThru(this.inst);
	};
	function Cnds() {};
	Cnds.prototype.IsMoving = function ()
	{
		return this.dx !== 0 || this.dy !== 0;
	};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		var speed = Math.sqrt(this.dx * this.dx + this.dy * this.dy);
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.IsOnFloor = function ()
	{
		if (this.dy !== 0)
			return false;
		var ret = null;
		var ret2 = null;
		var i, len, j;
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x += this.downx;
		this.inst.y += this.downy;
		this.inst.set_bbox_changed();
		ret = this.runtime.testOverlapSolid(this.inst);
		if (!ret && this.fallthrough === 0)
			ret2 = this.runtime.testOverlapJumpThru(this.inst, true);
		this.inst.x = oldx;
		this.inst.y = oldy;
		this.inst.set_bbox_changed();
		if (ret)		// was overlapping solid
		{
			return !this.runtime.testOverlap(this.inst, ret);
		}
		if (ret2 && ret2.length)
		{
			for (i = 0, j = 0, len = ret2.length; i < len; i++)
			{
				ret2[j] = ret2[i];
				if (!this.runtime.testOverlap(this.inst, ret2[i]))
					j++;
			}
			if (j >= 1)
				return true;
		}
		return false;
	};
	Cnds.prototype.IsByWall = function (side)
	{
		var ret = false;
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x -= this.downx * 3;
		this.inst.y -= this.downy * 3;
		this.inst.set_bbox_changed();
		if (this.runtime.testOverlapSolid(this.inst))
		{
			this.inst.x = oldx;
			this.inst.y = oldy;
			this.inst.set_bbox_changed();
			return false;
		}
		if (side === 0)		// left
		{
			this.inst.x -= this.rightx * 2;
			this.inst.y -= this.righty * 2;
		}
		else
		{
			this.inst.x += this.rightx * 2;
			this.inst.y += this.righty * 2;
		}
		this.inst.set_bbox_changed();
		ret = this.runtime.testOverlapSolid(this.inst);
		this.inst.x = oldx;
		this.inst.y = oldy;
		this.inst.set_bbox_changed();
		return ret;
	};
	Cnds.prototype.IsJumping = function ()
	{
		return this.dy < 0;
	};
	Cnds.prototype.IsFalling = function ()
	{
		return this.dy > 0;
	};
	Cnds.prototype.OnJump = function ()
	{
		return true;
	};
	Cnds.prototype.OnFall = function ()
	{
		return true;
	};
	Cnds.prototype.OnStop = function ()
	{
		return true;
	};
	Cnds.prototype.OnMove = function ()
	{
		return true;
	};
	Cnds.prototype.OnLand = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetIgnoreInput = function (ignoring)
	{
		this.ignoreInput = ignoring;
	};
	Acts.prototype.SetMaxSpeed = function (maxspeed)
	{
		this.maxspeed = maxspeed;
		if (this.maxspeed < 0)
			this.maxspeed = 0;
	};
	Acts.prototype.SetAcceleration = function (acc)
	{
		this.acc = acc;
		if (this.acc < 0)
			this.acc = 0;
	};
	Acts.prototype.SetDeceleration = function (dec)
	{
		this.dec = dec;
		if (this.dec < 0)
			this.dec = 0;
	};
	Acts.prototype.SetJumpStrength = function (js)
	{
		this.jumpStrength = js;
		if (this.jumpStrength < 0)
			this.jumpStrength = 0;
	};
	Acts.prototype.SetGravity = function (grav)
	{
		if (this.g1 === grav)
			return;		// no change
		this.g = grav;
		this.updateGravity();
		if (this.runtime.testOverlapSolid(this.inst))
		{
			this.runtime.pushOutSolid(this.inst, this.downx, this.downy, 10);
			this.inst.x += this.downx * 2;
			this.inst.y += this.downy * 2;
			this.inst.set_bbox_changed();
		}
		this.lastFloorObject = null;
	};
	Acts.prototype.SetMaxFallSpeed = function (mfs)
	{
		this.maxFall = mfs;
		if (this.maxFall < 0)
			this.maxFall = 0;
	};
	Acts.prototype.SimulateControl = function (ctrl)
	{
		switch (ctrl) {
		case 0:		this.simleft = true;	break;
		case 1:		this.simright = true;	break;
		case 2:		this.simjump = true;	break;
		}
	};
	Acts.prototype.SetVectorX = function (vx)
	{
		this.dx = vx;
	};
	Acts.prototype.SetVectorY = function (vy)
	{
		this.dy = vy;
	};
	Acts.prototype.SetGravityAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.ga === a)
			return;		// no change
		this.ga = a;
		this.updateGravity();
		this.lastFloorObject = null;
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	Acts.prototype.SetDoubleJump = function (en)
	{
		this.enableDoubleJump = (en === 1);
	};
	Acts.prototype.FallThrough = function ()
	{
		var oldx = this.inst.x;
		var oldy = this.inst.y;
		this.inst.x += this.downx;
		this.inst.y += this.downy;
		this.inst.set_bbox_changed();
		var overlaps = this.runtime.testOverlapJumpThru(this.inst, false);
		this.inst.x = oldx;
		this.inst.y = oldy;
		this.inst.set_bbox_changed();
		if (!overlaps)
			return;
		this.fallthrough = 3;			// disable jumpthrus for 3 ticks (1 doesn't do it, 2 does, 3 to be on safe side)
		this.lastFloorObject = null;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(Math.sqrt(this.dx * this.dx + this.dy * this.dy));
	};
	Exps.prototype.MaxSpeed = function (ret)
	{
		ret.set_float(this.maxspeed);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.Deceleration = function (ret)
	{
		ret.set_float(this.dec);
	};
	Exps.prototype.JumpStrength = function (ret)
	{
		ret.set_float(this.jumpStrength);
	};
	Exps.prototype.Gravity = function (ret)
	{
		ret.set_float(this.g);
	};
	Exps.prototype.MaxFallSpeed = function (ret)
	{
		ret.set_float(this.maxFall);
	};
	Exps.prototype.MovingAngle = function (ret)
	{
		ret.set_float(cr.to_degrees(Math.atan2(this.dy, this.dx)));
	};
	Exps.prototype.VectorX = function (ret)
	{
		ret.set_float(this.dx);
	};
	Exps.prototype.VectorY = function (ret)
	{
		ret.set_float(this.dy);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Rex_MoveTo = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Rex_MoveTo.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
        this.activated = (this.properties[0] == 1);
        this.move = {"max":this.properties[1],
                     "acc":this.properties[2],
                     "dec":this.properties[3]};
        this.target = {"x":0 , "y":0, "a":0};
        this.is_moving = false;
        this.current_speed = 0;
        this.remain_distance = 0;
        this.is_hit_target = false;
        this._pre_pos = {"x":0,"y":0};
        this._moving_angle_info = {"x":0,"y":0,"a":(-1)};
        this._last_tick = null;
        this.is_my_call = false;
	};
	behinstProto.tick = function ()
	{
        if (this.is_hit_target)
        {
            this.is_my_call = true;
            this.runtime.trigger(cr.behaviors.Rex_MoveTo.prototype.cnds.OnHitTarget, this.inst);
            this.is_my_call = false;
            this.is_hit_target = false;
        }
        if ( (!this.activated) || (!this.is_moving) )
        {
            return;
        }
		var dt = this.runtime.getDt(this.inst);
        if (dt==0)   // can not move if dt == 0
            return;
        if ((this._pre_pos["x"] != this.inst.x) || (this._pre_pos["y"] != this.inst.y))
		    this._reset_current_pos();    // reset this.remain_distance
        var is_slow_down = false;
        if (this.move["dec"] != 0)
        {
            var _speed = this.current_speed;
            var _distance = (_speed*_speed)/(2*this.move["dec"]); // (v*v)/(2*a)
            is_slow_down = (_distance >= this.remain_distance);
        }
        var acc = (is_slow_down)? (-this.move["dec"]):this.move["acc"];
        if (acc != 0)
        {
            this.SetCurrentSpeed( this.current_speed + (acc * dt) );
        }
        var distance = this.current_speed * dt;
        this.remain_distance -= distance;
        if ( (this.remain_distance <= 0) || (this.current_speed <= 0) )
        {
            this.is_moving = false;
            this.inst.x = this.target["x"];
            this.inst.y = this.target["y"];
            this.SetCurrentSpeed(0);
            this.moving_angle_get();
            this.is_hit_target = true;
        }
        else
        {
            var angle = this.target["a"];
            this.inst.x += (distance * Math.cos(angle));
            this.inst.y += (distance * Math.sin(angle));
        }
		this.inst.set_bbox_changed();
		this._pre_pos["x"] = this.inst.x;
		this._pre_pos["y"] = this.inst.y;
	};
	behinstProto.tick2 = function ()
	{
        this._moving_angle_info["x"] = this.inst.x;
		this._moving_angle_info["y"] = this.inst.y;
    };
	behinstProto.SetCurrentSpeed = function(speed)
	{
        if (speed != null)
        {
            this.current_speed = (speed > this.move["max"])?
                                 this.move["max"]: speed;
        }
        else if (this.move["acc"]==0)
        {
            this.current_speed = this.move["max"];
        }
	};
	behinstProto._reset_current_pos = function ()
	{
        var dx = this.target["x"] - this.inst.x;
        var dy = this.target["y"] - this.inst.y;
        this.target["a"] = Math.atan2(dy, dx);
        this.remain_distance = Math.sqrt( (dx*dx) + (dy*dy) );
		this._pre_pos["x"] = this.inst.x;
		this._pre_pos["y"] = this.inst.y;
	};
	behinstProto.SetTargetPos = function (_x, _y)
	{
        this.is_moving = true;
		this.target["x"] = _x;
        this.target["y"] = _y;
        this._reset_current_pos();
        this.SetCurrentSpeed(null);
		this._moving_angle_info["x"] = this.inst.x;
		this._moving_angle_info["y"] = this.inst.y;
	};
	behinstProto.is_tick_changed = function ()
	{
	    var cur_tick = this.runtime.tickcount;
		var tick_changed = (this._last_tick != cur_tick);
        this._last_tick = cur_tick;
		return tick_changed;
	};
 	behinstProto.moving_angle_get = function (ret)
	{
        if (this.is_tick_changed())
        {
            var dx = this.inst.x - this._moving_angle_info["x"];
            var dy = this.inst.y - this._moving_angle_info["y"];
            if ((dx!=0) || (dy!=0))
                this._moving_angle_info["a"] = cr.to_clamped_degrees(Math.atan2(dy,dx));
        }
		return this._moving_angle_info["a"];
	};
	behinstProto.saveToJSON = function ()
	{
		return { "en": this.activated,
		         "v": this.move,
                 "t": this.target,
                 "is_m": this.is_moving,
                 "c_spd" : this.current_speed,
                 "rd" : this.remain_distance,
                 "is_ht" : this.is_hit_target,
                 "pp": this._pre_pos,
                 "ma": this._moving_angle_info,
                 "lt": this._last_tick,
               };
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.activated = o["en"];
		this.move = o["v"];
		this.target = o["t"];
		this.is_moving = o["is_m"];
		this.current_speed = o["c_spd"];
		this.remain_distance = o["rd"];
		this.is_hit_target = o["is_ht"];
        this._pre_pos = o["pp"];
        this._moving_angle_info = o["ma"];
        this._last_tick = o["lt"];
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	Cnds.prototype.OnHitTarget = function ()
	{
		return (this.is_my_call);
	};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(this.current_speed, cmp, s);
	};
    Cnds.prototype.OnMoving = function ()  // deprecated
	{
		return false;
	};
	Cnds.prototype.IsMoving = function ()
	{
		return (this.activated && this.is_moving);
	};
	Cnds.prototype.CompareMovingAngle = function (cmp, s)
	{
        var angle = this.moving_angle_get();
        if (angle != (-1))
		    return cr.do_cmp(this.moving_angle_get(), cmp, s);
        else
            return false;
	};
	function Acts() {};
	behaviorProto.acts = new Acts();
	Acts.prototype.SetActivated = function (s)
	{
		this.activated = (s == 1);
	};
	Acts.prototype.SetMaxSpeed = function (s)
	{
		this.move["max"] = s;
        this.SetCurrentSpeed(null);
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.move["acc"] = a;
        this.SetCurrentSpeed(null);
	};
	Acts.prototype.SetDeceleration = function (a)
	{
		this.move["dec"] = a;
	};
	Acts.prototype.SetTargetPos = function (_x, _y)
	{
        this.SetTargetPos(_x, _y)
	};
	Acts.prototype.SetCurrentSpeed = function (s)
	{
        this.SetCurrentSpeed(s);
	};
 	Acts.prototype.SetTargetPosOnObject = function (objtype)
	{
		if (!objtype)
			return;
		var inst = objtype.getFirstPicked();
        if (inst != null)
            this.SetTargetPos(inst.x, inst.y);
	};
 	Acts.prototype.SetTargetPosByDeltaXY = function (dx, dy)
	{
        this.SetTargetPos(this.inst.x + dx, this.inst.y + dy);
	};
 	Acts.prototype.SetTargetPosByDistanceAngle = function (distance, angle)
	{
        var a = cr.to_clamped_radians(angle);
        var dx = distance*Math.cos(a);
        var dy = distance*Math.sin(a);
        this.SetTargetPos(this.inst.x + dx, this.inst.y + dy);
	};
 	Acts.prototype.Stop = function ()
	{
        this.is_moving = false;
	};
	function Exps() {};
	behaviorProto.exps = new Exps();
	Exps.prototype.Activated = function (ret)
	{
		ret.set_int((this.activated)? 1:0);
	};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(this.current_speed);
	};
	Exps.prototype.MaxSpeed = function (ret)
	{
		ret.set_float(this.move["max"]);
	};
	Exps.prototype.Acc = function (ret)
	{
		ret.set_float(this.move["acc"]);
	};
 	Exps.prototype.Dec = function (ret)
	{
		ret.set_float(this.move["dec"]);
	};
	Exps.prototype.TargetX = function (ret)
	{
		ret.set_float(this.target["x"]);
	};
 	Exps.prototype.TargetY = function (ret)
	{
		ret.set_float(this.target["y"]);
	};
 	Exps.prototype.MovingAngle = function (ret)
	{
		ret.set_float(this.moving_angle_get());
	};
}());
;
;
cr.behaviors.scrollto = function(runtime)
{
	this.runtime = runtime;
	this.shakeMag = 0;
	this.shakeStart = 0;
	this.shakeEnd = 0;
	this.shakeMode = 0;
};
(function ()
{
	var behaviorProto = cr.behaviors.scrollto.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.enabled = (this.properties[0] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"smg": this.behavior.shakeMag,
			"ss": this.behavior.shakeStart,
			"se": this.behavior.shakeEnd,
			"smd": this.behavior.shakeMode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.behavior.shakeMag = o["smg"];
		this.behavior.shakeStart = o["ss"];
		this.behavior.shakeEnd = o["se"];
		this.behavior.shakeMode = o["smd"];
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		if (!this.enabled)
			return;
		var all = this.behavior.my_instances.values();
		var sumx = 0, sumy = 0;
		var i, len;
		for (i = 0, len = all.length; i < len; i++)
		{
			sumx += all[i].x;
			sumy += all[i].y;
		}
		var layout = this.inst.layer.layout;
		var now = this.runtime.kahanTime.sum;
		var offx = 0, offy = 0;
		if (now >= this.behavior.shakeStart && now < this.behavior.shakeEnd)
		{
			var mag = this.behavior.shakeMag * Math.min(this.runtime.timescale, 1);
			if (this.behavior.shakeMode === 0)
				mag *= 1 - (now - this.behavior.shakeStart) / (this.behavior.shakeEnd - this.behavior.shakeStart);
			var a = Math.random() * Math.PI * 2;
			var d = Math.random() * mag;
			offx = Math.cos(a) * d;
			offy = Math.sin(a) * d;
		}
		layout.scrollToX(sumx / all.length + offx);
		layout.scrollToY(sumy / all.length + offy);
	};
	function Acts() {};
	Acts.prototype.Shake = function (mag, dur, mode)
	{
		this.behavior.shakeMag = mag;
		this.behavior.shakeStart = this.runtime.kahanTime.sum;
		this.behavior.shakeEnd = this.behavior.shakeStart + dur;
		this.behavior.shakeMode = mode;
	};
	Acts.prototype.SetEnabled = function (e)
	{
		this.enabled = (e !== 0);
	};
	behaviorProto.acts = new Acts();
}());
;
;
cr.behaviors.solid = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.solid.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.inst.extra.solidEnabled = (this.properties[0] !== 0);
	};
	behinstProto.tick = function ()
	{
	};
	function Cnds() {};
	Cnds.prototype.IsEnabled = function ()
	{
		return this.inst.extra.solidEnabled;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		this.inst.extra.solidEnabled = !!e;
	};
	behaviorProto.acts = new Acts();
}());
cr.getProjectModel = function() { return [
	null,
	"Loader",
	[
	[
		cr.plugins_.Arr,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.gamepad,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Keyboard,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Kongregate,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Particles,
		false,
		true,
		true,
		false,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.SpriteFontPlus,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Spritefont2,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.TiledBg,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.CAMFTimeManager,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Touch,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.WebStorage,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.gamepad,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7075869474232143,
		[],
		null
		,[25]
	]
,	[
		"t1",
		cr.plugins_.Keyboard,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6526024704018538,
		[],
		null
		,[]
	]
,	[
		"t2",
		cr.plugins_.Arr,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		1601560595555853,
		[],
		null
	]
,	[
		"t3",
		cr.plugins_.WebStorage,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1299666024953345,
		[],
		null
		,[]
	]
,	[
		"t4",
		cr.plugins_.CAMFTimeManager,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4584508020873226,
		[],
		null
		,[]
	]
,	[
		"t5",
		cr.plugins_.Kongregate,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2863256953760634,
		[],
		null
		,[]
	]
,	[
		"t6",
		cr.plugins_.Touch,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3142853767918661,
		[],
		null
		,[1]
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5777310674497898,
			[
				["images/brickmass-sheet0.png", 85076, 0, 0, 578, 210, 1, 0.5017300844192505, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6321361106806811,
		[],
		null
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4211657208408633,
			[
				["images/flower1-sheet0.png", 2114, 0, 0, 41, 41, 1, 0.5121951103210449, 0.5121951103210449,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		57354722055191,
		[],
		null
	]
,	[
		"t9",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground.png", 34863, 1],
		null,
		[
		],
		false,
		true,
		5463780889906422,
		[],
		null
	]
,	[
		"t10",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6234390494765325,
			[
				["images/flower2-sheet0.png", 859, 0, 0, 28, 28, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9503880188561064,
		[],
		null
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6010353907786091,
			[
				["images/grasscovermod-sheet0.png", 6788, 0, 0, 459, 29, 1, 0.501089334487915, 0.517241358757019,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4040156927823986,
		[],
		null
	]
,	[
		"t12",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6357268086673624,
			[
				["images/grassmod-sheet0.png", 28167, 0, 0, 287, 121, 1, 0.5017421841621399, 0.5041322112083435,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5912137955379419,
		[],
		null
	]
,	[
		"t13",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1933783704940566,
			[
				["images/sawcon-sheet0.png", 1129, 0, 0, 24, 110, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9487461216896675,
		[],
		null
	]
,	[
		"t14",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6210482388427617,
			[
				["images/sawmain-sheet0.png", 7948, 0, 0, 118, 118, 1, 0.5, 0.5,[],[-0.3305079936981201,-0.3474580049514771,0.004236996173858643,-0.4449152946472168,0.3347460031509399,-0.3347460031509399,0.4491519927978516,0.008475005626678467,0.3389829993247986,0.3305079936981201,0,0.4449149966239929,-0.3262709975242615,0.3347460031509399,-0.4364407062530518,-0.008475005626678467],0]
			]
			]
		],
		[
		],
		false,
		false,
		2718708254890607,
		[],
		null
	]
,	[
		"t15",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5567594064056585,
			[
				["images/flower3-sheet0.png", 1287, 0, 0, 35, 35, 1, 0.5142857432365418, 0.5142857432365418,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		8552015196068689,
		[],
		null
	]
,	[
		"t16",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7216527606220134,
			[
				["images/brickmass2-sheet0.png", 30979, 0, 0, 212, 210, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3111928826516002,
		[],
		null
	]
,	[
		"t17",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4448464629428343,
			[
				["images/brickmass3-sheet0.png", 17962, 0, 0, 154, 149, 1, 0.5, 0.5033556818962097,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		8284067615427612,
		[],
		null
	]
,	[
		"t18",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1506206766289997,
			[
				["images/mountain-sheet0.png", 11990, 0, 0, 812, 366, 1, 0.5, 0.5,[],[-0.2832509875297546,-0.01912599802017212,0,-0.494535505771637,0.2931029796600342,-0.04098400473594666,0.4950739741325378,0.4890710115432739,-0.4987684786319733,0.49726802110672,-0.2931029796600342,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		572489691411828,
		[],
		null
	]
,	[
		"t19",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			450442096613396,
			[
				["images/cloud1-sheet0.png", 6454, 0, 0, 365, 111, 1, 0.501369833946228, 0.5045045018196106,[],[-0.4383561313152313,-0.2972975075244904,-0.002739846706390381,-0.459459513425827,0.4136991500854492,-0.2252255082130432,0.4931511878967285,-0.009009510278701782,0.3917811512947083,0.1441444754600525,-0.002739846706390381,0.4324324727058411,-0.4356164336204529,0.2792794704437256,-0.501369833946228,-0.009009510278701782],0]
			]
			]
		],
		[
		],
		false,
		false,
		4593054257613413,
		[],
		null
	]
,	[
		"t20",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1845708287842237,
			[
				["images/cloud2-sheet0.png", 6675, 0, 0, 363, 121, 1, 0.5013774037361145, 0.5041322112083435,[],[-0.3636364042758942,-0.0909092128276825,-0.002754390239715576,-0.4876033067703247,0.3939396142959595,-0.1900822222232819,0.4958676099777222,-0.008264213800430298,0.3774105906486511,0.1322317719459534,-0.002754390239715576,0.4462807774543762,-0.4573003053665161,0.3636367917060852,-0.4490357935428619,-0.008264213800430298],0]
			]
			]
		],
		[
		],
		false,
		false,
		7078063493789788,
		[],
		null
	]
,	[
		"t21",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5728978554218232,
			[
				["images/cloud3-sheet0.png", 6356, 0, 0, 356, 110, 1, 0.5, 0.5,[],[-0.432584285736084,-0.2818180024623871,0,-0.4363636076450348,0.4494379758834839,-0.3363640010356903,0.4691010117530823,0,0.4044939875602722,0.1909090280532837,0,0.4909089803695679,-0.432584285736084,0.2818179726600647,-0.4971910119056702,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		6307281498238343,
		[],
		null
	]
,	[
		"t22",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5621669673338561,
			[
				["images/goal-sheet0.png", 10678, 0, 0, 172, 193, 1, 0.5, 0.5025906562805176,[],[-0.08720898628234863,-0.5025906562805176,0.1046509742736816,-0.5025906562805176,0.1569769978523254,0.4974093437194824,-0.0348840057849884,0.4974093437194824],0]
			]
			]
		],
		[
		],
		false,
		false,
		393459004390287,
		[],
		null
	]
,	[
		"t23",
		cr.plugins_.Particles,
		false,
		[],
		0,
		0,
		["images/particles.png", 7948, 0],
		null,
		[
		],
		false,
		false,
		7732654015220872,
		[],
		null
	]
,	[
		"t24",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7594924075243024,
			[
				["images/thorn-sheet0.png", 5875, 0, 0, 96, 78, 1, 0.5, 0.5,[],[-0.375,-0.3461540043354034,0.3854169845581055,-0.3589739799499512,0.5,0.5,-0.4895833134651184,0.4871789813041687],0]
			]
			]
		],
		[
		[
			"MoveTo",
			cr.behaviors.Rex_MoveTo,
			6365377152640184
		]
		],
		false,
		false,
		1498809382305974,
		[],
		null
	]
,	[
		"t25",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7378159086867764,
			[
				["images/thornbottom-sheet0.png", 253, 0, 0, 111, 15, 1, 0.5045045018196106, 0.5333333611488342,[],[-0.4954954981803894,-0.4666666686534882,-0.009009510278701782,-0.5333333611488342,0.4864864945411682,-0.4666666686534882,0.4864864945411682,0.3999996185302734,-0.009009510278701782,0.4666666388511658,-0.4954954981803894,0.3999996185302734],0]
			]
			]
		],
		[
		],
		false,
		false,
		1463494725057686,
		[],
		null
	]
,	[
		"t26",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9714562444746791,
			[
				["images/controlbg-sheet0.png", 85847, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		true,
		false,
		3046650731573309,
		[],
		null
	]
,	[
		"t27",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4525834097978502,
			[
				["images/uibg-sheet0.png", 34752, 0, 0, 1280, 720, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		true,
		false,
		8294719320018394,
		[],
		null
	]
,	[
		"t28",
		cr.plugins_.Spritefont2,
		false,
		[4926575486814356],
		1,
		1,
		["images/startime.png", 34006, 0],
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6817629905424838
		]
		],
		true,
		false,
		9475591727084988,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t29",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7328543041687646,
			[
				["images/resultselection-sheet0.png", 128, 0, 0, 85, 34, 1, 0.5058823823928833, 0.5,[],[],0]
			]
			]
		],
		[
		],
		true,
		false,
		3047357227356557,
		[],
		null
	]
,	[
		"t30",
		cr.plugins_.Spritefont2,
		false,
		[],
		1,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2083445245507281
		]
		],
		true,
		false,
		6227148399319901,
		[],
		null
	]
,	[
		"t31",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4619910395257273,
			[
				["images/resultboard-sheet0.png", 8779, 1, 1, 365, 249, 1, 0.501369833946228, 0.5020080208778381,[],[-0.4876712262630463,-0.4819277226924896,-0.002739846706390381,-0.5020080208778381,0.4630141854286194,-0.4497992098331451,0.4849311709403992,-0.004016011953353882,0.4739721417427063,0.4618470072746277,-0.002739846706390381,0.4779119491577148,-0.465753436088562,0.4457829594612122,-0.501369833946228,-0.004016011953353882],0],
				["images/resultboard-sheet0.png", 8779, 1, 251, 365, 249, 1, 0.501369833946228, 0.5020080208778381,[],[-0.4876712262630463,-0.4819277226924896,-0.002739846706390381,-0.5020080208778381,0.4630141854286194,-0.4497992098331451,0.4849311709403992,-0.004016011953353882,0.4739721417427063,0.4618470072746277,-0.002739846706390381,0.4779119491577148,-0.465753436088562,0.4457829594612122,-0.501369833946228,-0.004016011953353882],0],
				["images/resultboard-sheet1.png", 4683, 0, 0, 365, 249, 1, 0.501369833946228, 0.5020080208778381,[],[-0.4876712262630463,-0.4819277226924896,-0.002739846706390381,-0.5020080208778381,0.4630141854286194,-0.4497992098331451,0.4849311709403992,-0.004016011953353882,0.4739721417427063,0.4618470072746277,-0.002739846706390381,0.4779119491577148,-0.465753436088562,0.4457829594612122,-0.501369833946228,-0.004016011953353882],0]
			]
			]
		],
		[
		],
		true,
		false,
		9025523623146573,
		[],
		null
	]
,	[
		"t32",
		cr.plugins_.Spritefont2,
		false,
		[],
		1,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4789720816321392
		]
		],
		true,
		false,
		7809260364347411,
		[],
		null
	]
,	[
		"t33",
		cr.plugins_.Spritefont2,
		false,
		[],
		1,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			8249225858333372
		]
		],
		true,
		false,
		7489425072062398,
		[],
		null
	]
,	[
		"t34",
		cr.plugins_.Sprite,
		false,
		[2974089959199256,8491829945512285,372951786822156],
		0,
		0,
		null,
		[
			[
			"lock",
			5,
			false,
			1,
			0,
			false,
			9358808535119095,
			[
				["images/levelicon-sheet0.png", 3568, 1, 1, 99, 99, 1, 0.5050504803657532, 0.5050504803657532,[],[],0],
				["images/levelicon-sheet0.png", 3568, 101, 1, 99, 99, 1, 0.5050504803657532, 0.5050504803657532,[],[-0.4848484694957733,-0.4848484694957733,-0.01010146737098694,-0.4949494898319244,0.4343435168266296,-0.4444443881511688,0.4343435168266296,0.4343435168266296,-0.4444443881511688,0.4343435168266296,-0.4848484694957733,-0.01010146737098694],0]
			]
			]
,			[
			"star",
			5,
			false,
			1,
			0,
			false,
			7161252825102092,
			[
				["images/levelicon-sheet0.png", 3568, 1, 101, 99, 99, 1, 0.5050504803657532, 0.5050504803657532,[],[-0.4848484694957733,-0.4848484694957733,-0.01010146737098694,-0.4949494898319244,0.4343435168266296,-0.4444443881511688,0.4343435168266296,0.4343435168266296,-0.4444443881511688,0.4343435168266296,-0.4848484694957733,-0.01010146737098694],0],
				["images/levelicon-sheet0.png", 3568, 101, 101, 99, 99, 1, 0.5050504803657532, 0.5050504803657532,[],[],0],
				["images/levelicon-sheet1.png", 1871, 0, 0, 99, 99, 1, 0.5050504803657532, 0.5050504803657532,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2813109809348783,
		[],
		null
	]
,	[
		"t35",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1708517049093535,
			[
				["images/levelselection-sheet0.png", 166, 0, 0, 112, 112, 1, 0.5, 0.5,[],[-0.4910714328289032,-0.4910714328289032,0.4910709857940674,-0.4910714328289032,0.4910709857940674,0.4910709857940674,-0.4910714328289032,0.4910709857940674],0]
			]
			]
		],
		[
		],
		false,
		false,
		3495269166930086,
		[],
		null
	]
,	[
		"t36",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		1,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		6477482004314154,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t37",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		1,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		1550909369879048,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t38",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		3731999321216244,
		[],
		null
	]
,	[
		"t39",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		7427486455776739,
		[],
		null
	]
,	[
		"t40",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		7102096064882546,
		[],
		null
	]
,	[
		"t41",
		cr.plugins_.SpriteFontPlus,
		false,
		[4137423501275171],
		0,
		1,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		true,
		false,
		4040637696198963,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t42",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3229964412943973,
			[
				["images/title-sheet0.png", 41642, 0, 0, 604, 183, 1, 0.5, 0.5027322173118591,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3400344334411612,
		[],
		null
	]
,	[
		"t43",
		cr.plugins_.Spritefont2,
		false,
		[7377861716455317],
		0,
		1,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		true,
		1558742966085564,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t44",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		0,
		["images/buttons.png", 8377, 0],
		null,
		[
		],
		false,
		false,
		9971394763740694,
		[],
		null
	]
,	[
		"t45",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/progressbar.png", 92, 1],
		null,
		[
		],
		false,
		true,
		7740228178442361,
		[],
		null
	]
,	[
		"t46",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		1,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		4970161862063816,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t47",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		1,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		7040080830485011,
		[["setcolor", "SetColor"]],
		null
	]
,	[
		"t48",
		cr.plugins_.Spritefont2,
		false,
		[],
		1,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		[
			"MoveTo",
			cr.behaviors.Rex_MoveTo,
			9415678477754366
		]
		],
		false,
		false,
		7377194370948352,
		[],
		null
	]
,	[
		"t49",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		0,
		["images/startime.png", 34006, 0],
		null,
		[
		],
		false,
		false,
		4826914224003006,
		[],
		null
	]
,	[
		"t50",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"idle",
			10,
			true,
			1,
			0,
			false,
			7556661768780267,
			[
				["images/character-sheet0.png", 798704, 1, 1, 360, 360, 1, 0.5, 0.5,[["Imagepoint 1", 1, 0.5]],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 362, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 723, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1084, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1445, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 362, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 723, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1084, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1445, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 362, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 723, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1084, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1445, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 362, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 723, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1084, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1445, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 362, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 723, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1084, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet0.png", 798704, 1445, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 362, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 723, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1084, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1445, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 362, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 723, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1084, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1445, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 362, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 723, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1084, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1445, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 362, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 723, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1084, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1445, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 362, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 723, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0]
			]
			]
,			[
			"boost",
			40,
			true,
			1,
			0,
			false,
			6177655602904895,
			[
				["images/character-sheet1.png", 821768, 1084, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet1.png", 821768, 1445, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 362, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 723, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1084, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1445, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0]
			]
			]
,			[
			"Jump",
			40,
			false,
			1,
			0,
			false,
			9351008531249174,
			[
				["images/character-sheet2.png", 927894, 362, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 723, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1084, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1445, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 362, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 723, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1084, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1445, 723, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0]
			]
			]
,			[
			"run",
			35,
			true,
			1,
			0,
			false,
			8770159898657405,
			[
				["images/character-sheet2.png", 927894, 1, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 362, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 723, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1084, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1445, 1084, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 362, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 723, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1084, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet2.png", 927894, 1445, 1445, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet3.png", 152280, 1, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet3.png", 152280, 362, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet3.png", 152280, 1, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet3.png", 152280, 362, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet4.png", 122148, 1, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet4.png", 122148, 362, 1, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0],
				["images/character-sheet4.png", 122148, 1, 362, 360, 360, 1, 0.5, 0.5,[],[-0.2249999940395355,-0.3222219944000244,0.2638890147209168,-0.3222219944000244,0.2638890147209168,0.3527770042419434,-0.2249999940395355,0.3527780175209045],0]
			]
			]
		],
		[
		[
			"PlatformPlus",
			cr.behaviors.PlatformPlus,
			7025142813537853
		]
,		[
			"ScrollTo",
			cr.behaviors.scrollto,
			549495228141256
		]
		],
		false,
		false,
		9822471565371292,
		[],
		null
	]
,	[
		"t51",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4705842023864036,
			[
				["images/goalcollision-sheet0.png", 155, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4293025438070232,
		[],
		null
	]
,	[
		"t52",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6509508548517086,
			[
				["images/stagecollision-sheet0.png", 168, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			303756319804081
		]
		],
		false,
		false,
		5060650853566833,
		[],
		null
	]
,	[
		"t53",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6511844563906788,
			[
				["images/starttrigger-sheet0.png", 195, 0, 0, 140, 140, 1, 0.5, 0.5,[],[-0.5,-0.5,0.5,-0.5,0.5,0.5,0.4357140064239502,0.5,0.4357150197029114,-0.4392859041690826,-0.4464285969734192,-0.4392859041690826,-0.4464285969734192,0.5,-0.5,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		5412568375811019,
		[],
		null
	]
,	[
		"t54",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1438613761955731,
			[
				["images/touchleft-sheet0.png", 986, 0, 0, 152, 121, 1, 0.5, 0.5041322112083435,[],[],0]
			]
			]
		],
		[
		],
		true,
		false,
		9953704818852412,
		[],
		null
	]
,	[
		"t55",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7776656507366115,
			[
				["images/touchright-sheet0.png", 982, 0, 0, 152, 121, 1, 0.5, 0.5041322112083435,[],[],0]
			]
			]
		],
		[
		],
		true,
		false,
		3369268106502796,
		[],
		null
	]
,	[
		"t56",
		cr.plugins_.Sprite,
		false,
		[3897728409808561],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8409203797319643,
			[
				["images/touchboost-sheet0.png", 4582, 0, 0, 105, 105, 1, 0.5047619342803955, 0.5047619342803955,[],[-0.3523809313774109,-0.3523809313774109,-0.009523928165435791,-0.5047619342803955,0.3428570628166199,-0.3523809313774109,0.4857140779495239,-0.009523928165435791,0.3428570628166199,0.3428570628166199,-0.009523928165435791,0.4857140779495239,-0.3523809313774109,0.3428570628166199,-0.5047619342803955,-0.009523928165435791],0]
			]
			]
		],
		[
		],
		true,
		false,
		3163998831489844,
		[],
		null
	]
,	[
		"t57",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1400629852502026,
			[
				["images/touchjump-sheet0.png", 4138, 0, 0, 105, 105, 1, 0.5047619342803955, 0.5047619342803955,[],[],0]
			]
			]
		],
		[
		],
		true,
		false,
		8600414200885284,
		[],
		null
	]
,	[
		"t58",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6410900150159993,
			[
				["images/touchstart-sheet0.png", 2509, 0, 0, 105, 105, 1, 0.5047619342803955, 0.5047619342803955,[],[],0]
			]
			]
		],
		[
		],
		true,
		false,
		7860474378214442,
		[],
		null
	]
	],
	[
	],
	[
	[
		"Menu",
		1280,
		720,
		false,
		"Menu E",
		8755265137775033,
		[
		[
			"BG",
			0,
			4545471109378541,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			1,
			9063733875162031,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[170, 629, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				148,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[495, 715, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				149,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1190, 630, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				150,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			2,
			1078912812038282,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[89, 360, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				154,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[489, 437, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				155,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[945, 283, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				157,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1303.000122070313, 401.4324035644531, 0, -263, -94, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				182,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			1054446409552763,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[949, 609, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				202,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[216, 609, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				203,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[353, 609, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				204,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[121, 614, 0, 28.39013862609863, 28.39013862609863, 0, 0.3394007980823517, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				205,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[344, 604, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				206,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[173, 567, 0, 41, 41, 0, 0, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				217,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[443, 593, 0, 28.39013862609863, 28.39013862609863, 0, 0.3394007980823517, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				223,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[251, 613, 0, 19.49358940124512, 19.49358940124512, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				253,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[993, 569, 0, 41, 41, 0, 0, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				331,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[872, 561, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				342,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[923, 609, 0, 35, 35, 0, 0.3217652142047882, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				348,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[653, 588, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				377,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			4,
			5995845599524438,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[50, 701, 0, 328.0435791015625, 119.1853866577148, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				16,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[352, 700, 0, 328.0435791015625, 119.1853866577148, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				21,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[670, 700, 0, 328.0435791015625, 119.1853866577148, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				36,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[987, 700, 0, 328.0435791015625, 119.1853866577148, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				38,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1296, 700, 0, 328.0435791015625, 119.1853866577148, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				99,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[50, 700, 0, 328.0435791015625, 119.1853866577148, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				147,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			5,
			8487713161742563,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[630.5, 713, 0, 1508, 143, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				7,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-55, 315, 0, 109, 684, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				8,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1335, 317, 0, 109, 684, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				9,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			6,
			6788063460195218,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[168.0692291259766, 648.2813110351563, 0, 321.4381408691406, 20.3087272644043, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				183,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[709.200927734375, 646.4429931640625, 0, 248, 17, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				184,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1142, 648, 0, 321.4381408691406, 20.3087272644043, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				201,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			7,
			3424058219000059,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[639, 392, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				13,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Startbutton",
			8,
			4921772886659082,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[784, 501, 0, 107, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				5066,
				[
				],
				[
				],
				[
					73,
					73,
					"ABSRL",
					"S",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[645, 498, 0, 166, 59, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				43,
				5068,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"ENTER",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[615, 501, 0, 733, 99, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5067,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"PRESSIONE       OU    ",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
			],
			[			]
		]
,		[
			"Title",
			9,
			4265154964898331,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 273, 0, 604, 183, 0, 0, 1, 0.5, 0.5027322173118591, 0, 0, []],
				42,
				5065,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Touchpad",
			10,
			8225191587010735,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			0.800000011920929,
			false,
			1,
			0,
			0,
			[
			[
				[186.8138732910156, 630, 0, 111.4340362548828, 95.37209320068359, 0, 0, 1, 0.5, 0.5041322112083435, 0, 0, []],
				54,
				5094,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[312.3798522949219, 633, 0, 111.4340362548828, 95.37209320068359, 0, 0, 1, 0.5, 0.5041322112083435, 0, 0, []],
				55,
				5095,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[426, 629, 0, 105, 105, 0, 0, 1, 0.5047619342803955, 0.5047619342803955, 0, 0, []],
				56,
				5096,
				[
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1173, 629, 0, 105, 105, 0, 0, 1, 0.5047619342803955, 0.5047619342803955, 0, 0, []],
				57,
				5097,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[997, 629, 0, 105, 105, 0, 0, 1, 0.5047619342803955, 0.5047619342803955, 0, 0, []],
				58,
				5098,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[73, 629, 0, 105, 105, 0, 0, 1, 0.5047619342803955, 0.5047619342803955, 0, 0, []],
				56,
				5100,
				[
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			5061383731830935,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			12,
			1664118538238158,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"LevelPage",
		1280,
		720,
		false,
		"LevelPage E",
		4439658020465299,
		[
		[
			"BG",
			0,
			4819586368041356,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				145,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"LevelIcon",
			1,
			4703925530822017,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[192, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				113,
				[
					[0],
					[0],
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				114,
				[
					[1],
					[0],
					[1]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[448, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				115,
				[
					[2],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				116,
				[
					[3],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				117,
				[
					[4],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				118,
				[
					[5],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				119,
				[
					[6],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 192, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				120,
				[
					[7],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				121,
				[
					[8],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				122,
				[
					[9],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[448, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				123,
				[
					[10],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				124,
				[
					[11],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				125,
				[
					[12],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				126,
				[
					[13],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				127,
				[
					[14],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 320, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				128,
				[
					[15],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				129,
				[
					[16],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				130,
				[
					[17],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[448, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				131,
				[
					[18],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				132,
				[
					[19],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				133,
				[
					[20],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				134,
				[
					[21],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				135,
				[
					[22],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 448, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				136,
				[
					[23],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				137,
				[
					[24],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[320, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				138,
				[
					[25],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[448, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				139,
				[
					[26],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[576, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				140,
				[
					[27],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[704, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				141,
				[
					[28],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				142,
				[
					[29],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[960, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				143,
				[
					[30],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 576, 0, 99, 99, 0, 0, 1, 0.5050504803657532, 0.5050504803657532, 0, 0, []],
				34,
				144,
				[
					[31],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Text",
			2,
			1855887259321788,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[448, 800, 0, 112, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				35,
				238,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[224, 72, 0, 416, 96, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				37,
				96,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Fases",
					0.6,
					0,
					1,
					1,
					1,
					0,
					-32,
					0
				]
			]
,			[
				[1024, 72, 0, 320, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				36,
				112,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Text",
					0.6,
					0,
					1,
					1,
					1,
					0,
					-32,
					0
				]
			]
,			[
				[570, 672, 0, 352, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5069,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CONFIRME    OU",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
,			[
				[623, 672, 0, 107, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				5070,
				[
				],
				[
				],
				[
					73,
					73,
					"ABSRL",
					"A",
					0.7,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[768, 672, 0, 160, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				43,
				5071,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"ENTER",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[640, 72, 0, 320, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				46,
				5091,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"STARS:20",
					0.6,
					0,
					1,
					1,
					1,
					0,
					-32,
					0
				]
			]
,			[
				[640, -64, 0, 288, 32, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				47,
				5090,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CLICK HERE  TO SUBMIT STARS",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[640, -32, 0, 672, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				48,
				5093,
				[
				],
				[
				[
					1,
					200,
					0,
					0
				]
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CONGRATULATIONS!YOU HAVE SUBMITTED YOUR STARS",
					0.3,
					0,
					1,
					1,
					1,
					0,
					-18,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			3,
			61127011546076,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			4,
			5660821501744401,
			false,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			5,
			7615793599509647,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
			[
				null,
				2,
				110,
				[
				],
				[
				],
				[
					32,
					3,
					1
				]
			]
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"UIPost",
		1280,
		720,
		false,
		"UIPost E",
		4451560769968882,
		[
		[
			"ResultUI",
			0,
			3564480998534461,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[646, -224, 0, 365, 249, 0, 0, 1, 0.501369833946228, 0.5020080208778381, 0, 0, []],
				31,
				100,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[542, -147, 0, 202, 36, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				30,
				102,
				[
				],
				[
				[
				]
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"REPETIR",
					0.3,
					0,
					1,
					1,
					1,
					0,
					-19,
					0
				]
			]
,			[
				[644, -147, 0, 85, 34, 0, 0, 1, 0.5058823823928833, 0.5, 0, 0, []],
				29,
				103,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[739, -147, 0, 119, 33.82234954833984, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				32,
				101,
				[
				],
				[
				[
				]
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"PROXIMO",
					0.3,
					0,
					1,
					1,
					1,
					0,
					-19,
					0
				]
			]
,			[
				[538.5794067382813, -189.5831451416016, 0, 102, 26.65348815917969, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				28,
				105,
				[
					[1]
				],
				[
				[
				]
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"OBJETIVO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-10,
					0
				]
			]
,			[
				[640.1613159179688, -189.5831451416016, 0, 67.0341796875, 26.65348815917969, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				28,
				106,
				[
					[2]
				],
				[
				[
				]
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"1:00",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-10,
					0
				]
			]
,			[
				[739.7183837890625, -189.5831451416016, 0, 67.0341796875, 26.65348815917969, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				28,
				107,
				[
					[3]
				],
				[
				[
				]
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"0:48",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-10,
					0
				]
			]
			],
			[			]
		]
,		[
			"UI",
			1,
			6747156840806933,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 360, 0, 1280, 720, 0, 0, 0.699999988079071, 0.5, 0.5, 0, 0, []],
				27,
				92,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[640, 203, 0, 373, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				41,
				93,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CONTINUAR",
					0.6,
					0,
					1,
					0,
					1,
					0,
					-32,
					0,
					"",
					-1
				]
			]
,			[
				[640, 280, 0, 573, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				41,
				94,
				[
					[1]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"SELECAO DE FASES",
					0.6,
					0,
					1,
					0,
					1,
					0,
					-32,
					0,
					"",
					-1
				]
			]
,			[
				[640, 346, 0, 373, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				41,
				95,
				[
					[2]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CONTROLES",
					0.6,
					0,
					1,
					0,
					1,
					0,
					-32,
					0,
					"",
					-1
				]
			]
,			[
				[640, 412, 0, 373, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				41,
				97,
				[
					[3]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"INICIO",
					0.6,
					0,
					1,
					0,
					1,
					0,
					-32,
					0,
					"",
					-1
				]
			]
,			[
				[640, 547, 0, 373, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				41,
				98,
				[
					[4]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"VOLTAR",
					0.6,
					0,
					1,
					0,
					1,
					0,
					-32,
					0,
					"",
					-1
				]
			]
,			[
				[643, 1102, 0, 1280, 720, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				26,
				67,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[644.134765625, -146.3757476806641, 0, 88.043701171875, 31.77756500244141, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				33,
				146,
				[
				],
				[
				[
				]
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"FASES",
					0.3,
					0,
					1,
					1,
					1,
					0,
					-19,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Lv0",
		5120,
		720,
		false,
		"Levels E",
		1207629499360701,
		[
		[
			"BG",
			0,
			9687269808193098,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				3,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			3921749352070198,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2969,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2970,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				2971,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2979,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2974,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2975,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4472, 408, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2980,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			984414833409782,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				87,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[528, 644, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				88,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1112, 618, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				89,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1637, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				90,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2435, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				91,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3358, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2973,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3931, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2976,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			7390774988320066,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				46,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[461, 565, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				47,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[586.8095703125, 573.829345703125, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				48,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[916, 572, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				49,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1238.94873046875, 573.771240234375, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				50,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1687.81396484375, 581.3275146484375, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				51,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2370, 339, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				52,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2761.990966796875, 570.0869750976563, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				53,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2878.0087890625, 572.5796508789063, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				54,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2973.199951171875, 568.3333740234375, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				55,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3067.824951171875, 575.1561889648438, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				56,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3476, 575, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				57,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 573.2100830078125, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				58,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4564, 577.1603393554688, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				59,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4670.9033203125, 580.5338134765625, 0, 160.4586639404297, 67.64982604980469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				60,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4773, 580.1603393554688, 0, 160.4586639404297, 67.64982604980469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				61,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				62,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				66,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[880, 533, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				68,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2339.5107421875, 306.0717163085938, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				70,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1316, 557, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				73,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2719.76806640625, 533.012451171875, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				75,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3016.961669921875, 553.3153686523438, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				80,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3447, 545, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				81,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4714.4892578125, 582.6626586914063, 0, 28.66599464416504, 28.66599464416504, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				84,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4640.96826171875, 556.7454833984375, 0, 24.43564987182617, 24.43564987182617, 0, -0.2245020717382431, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				85,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1201.872802734375, 540.4661254882813, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				69,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 548, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				72,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3098.3828125, 541.4132690429688, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				76,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2874.28759765625, 572.625, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				78,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4522.32373046875, 540.9251708984375, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				82,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[515, 517, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				63,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[573, 575, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				64,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[360, 575, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				65,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 547, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				71,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2763.60107421875, 574.1109008789063, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				74,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2843.028564453125, 537.822021484375, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				77,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2964.4609375, 570.2781372070313, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				79,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 544, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				83,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4807.1328125, 551.3842163085938, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				86,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			9737225834399438,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Goal",
			5,
			3276577833998602,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[4727, 553, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				233,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			8842977080651356,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1903.336181640625, 507.2236022949219, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				37,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				11,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[478.4946899414063, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				12,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[801.5819091796875, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				14,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1047, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				17,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1349, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				18,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1977, 507, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				19,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2086, 507, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				20,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2386.1435546875, 425.9285583496094, 0, 140.1919708251953, 112.3597412109375, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				22,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2513.831787109375, 426.2837219238281, 0, 132.1919708251953, 112.3597412109375, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				23,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2890, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				24,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3225, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				25,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3395, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				26,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4277, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				27,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4612, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				28,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4954, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				29,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1558.096435546875, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				40,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			7,
			8472419776650344,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				30,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[760.9219360351563, 618.2312622070313, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				31,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1463, 618, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				32,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1995, 458, 0, 301, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				33,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2446, 376, 0, 273, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				34,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2925, 616.8453369140625, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				35,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3353, 617.8453369140625, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				43,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4314.2255859375, 617.7687377929688, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				44,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4999.150390625, 617.692138671875, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				45,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Guide",
			8,
			4245765175939645,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[544, 438, 0, 625, 48, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5072,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"USE        OU     MOVE FOOFOO",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
,			[
				[407, 437, 0, 183, 50, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				43,
				5073,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"SETAS",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-32,
					0
				]
			]
,			[
				[561, 433, 0, 107, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				5074,
				[
				],
				[
				],
				[
					73,
					73,
					"ABSRL",
					"L",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[1550, 354, 0, 671, 48, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5075,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"PRESSIONE        OU    PARA PULAR",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
,			[
				[1481, 353, 0, 183, 50, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				43,
				5076,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"ESPACO",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-32,
					0
				]
			]
,			[
				[1629, 351, 0, 107, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				5077,
				[
				],
				[
				],
				[
					73,
					73,
					"ABSRL",
					"A",
					0.7,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[3100, 354, 0, 804, 48, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5078,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"SEGURE       OU     NO MODO BOOST",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
,			[
				[2971, 353, 0, 183, 50, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				43,
				5079,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"SHIFT",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-32,
					0
				]
			]
,			[
				[3120, 354, 0, 107, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				5080,
				[
				],
				[
				],
				[
					73,
					73,
					"ABSRL",
					"R",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[3860, 437, 0, 804, 48, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5081,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TENHA UM PULO LONGO NO MODO BOOST",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
,			[
				[2380, 97, 0, 767, 48, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5082,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"PRESSIONE     OU     PARA PAUSAR O JOGO",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
,			[
				[2227, 98, 0, 183, 50, 0, 0, 1, 0.5, 0.5, 0, 0, [[1, 1, 1]]],
				43,
				5083,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"ESC",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-32,
					0
				]
			]
,			[
				[2362, 96, 0, 107, 77, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				44,
				5084,
				[
				],
				[
				],
				[
					73,
					73,
					"ABSRL",
					"S",
					1,
					0,
					1,
					1,
					1,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			9,
			9546515089156193,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[848, 664, 0, 1784, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				10,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1996, 507, 0, 299, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				39,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2448, 424, 0, 265, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				41,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3138, 663, 0, 876, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				42,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5349, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				6,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4748.5, 664, 0, 1323, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				15,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4769, 291, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				104,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				152,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			10,
			8722049864647932,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				0,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[307, 1061, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				153,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			11,
			7571584084742933,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				109,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				2972,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				2977,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2978,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2981,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2982,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"FASE ATUAL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			12,
			8132623893099883,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			13,
			1117982526808189,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			14,
			5686024845318794,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv1",
		5900,
		720,
		false,
		"Levels E",
		911933337230277,
		[
		[
			"BG",
			0,
			195082162959519,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				156,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			1,
			4492103300513467,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				158,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[959, 667, 0, 299, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				159,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1035, 555, 0, 145, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				160,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3481, 665, 0, 876, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				161,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				162,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6037, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				163,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5266, 664, 0, 1812, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				165,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5635, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				166,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				167,
				[
				],
				[
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[2014.5, 667, 0, 1476, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				271,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1732.5, 558, 0, 122, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				272,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2121, 558, 0, 122, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				273,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2371, 513, 0, 382, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				274,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3487, 513, 0, 382, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				275,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4823, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				276,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			2,
			9625960011237093,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				168,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				169,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				170,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				171,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				172,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				173,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4472, 408, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				174,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			3,
			1962531926534897,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[256, 626, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				175,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[745, 624, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				176,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1213, 648, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				177,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1763, 601, 0, 813, 360, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				178,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4435, 540, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				179,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2681, 567, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				180,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3365, 610, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				181,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6011, 550, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				397,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			4,
			7683811706045317,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				185,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2591, 581, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				187,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[898, 582, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				188,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1350, 572, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				189,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1730, 473, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				190,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2500, 383, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				191,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5114, 571, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				192,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5230, 574, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				193,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5326, 570, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				194,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5420, 577, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				195,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3476, 575, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				196,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3456, 378, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				197,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4501, 577, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				198,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4608, 581, 0, 160.4586639404297, 67.64982604980469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				199,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3826, 579, 0, 160.4586639404297, 67.64982604980469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				200,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				207,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				208,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[862, 543, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				209,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2470, 350, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				210,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1427, 555, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				211,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5072, 534, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				212,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5369, 555, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				213,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3447, 545, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				214,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4652, 583, 0, 28.66599464416504, 28.66599464416504, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				215,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4578, 557, 0, 24.43564987182617, 24.43564987182617, 0, -0.2245020717382431, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				216,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1313, 539, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				218,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1765, 440, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				219,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5451, 543, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				220,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5227, 574, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				221,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4460, 541, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				222,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1697, 439, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				227,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5116, 575, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				228,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5195, 539, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				229,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5317, 572, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				230,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 349, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				231,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3860, 550, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				232,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3094, 581, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				186,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3064, 548, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				224,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			5,
			7883488218679789,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Goal",
			6,
			4646470255240354,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[5593, 558, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				151,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			7,
			4419609670432664,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[891.9968872070313, 680.083251953125, 0, 165.3096466064453, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				234,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4866.56787109375, 621.3959350585938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				235,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5989.64599609375, 674.01171875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				236,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[30.82619094848633, 675.0416259765625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				237,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5630.7373046875, 674.993408203125, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				239,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[276.3050537109375, 675.025634765625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				240,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3488, 605, 0, 386, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				241,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1463, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				242,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4777.77099609375, 621.8262939453125, 0, 112.8470458984375, 109.1831817626953, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				243,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1733.076416015625, 560.43798828125, 0, 125, 118, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				244,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2124.186767578125, 562.844970703125, 0, 132.1919708251953, 120.5410766601563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				246,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2372.0068359375, 609, 0, 387, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				247,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3225, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				248,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3463, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				249,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5266, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				250,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4546, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				251,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4905, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				252,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1035.881591796875, 680.0857543945313, 0, 155.3953399658203, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				398,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1035.758544921875, 557.22216796875, 0, 149.48291015625, 119.9252624511719, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				399,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1825, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				400,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2187, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				401,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2560.3466796875, 679, 0, 390, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				402,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2372.501708984375, 479, 0, 386, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				403,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3735, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				404,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3488, 478, 0, 386, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				405,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4866.56787109375, 516.3560791015625, 0, 112.8470458984375, 109.1831817626953, 0, 3.141592741012573, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				245,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4778.07275390625, 516.7863159179688, 0, 106.2425537109375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				406,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			3546363036945438,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				254,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1924.30078125, 617.8275756835938, 0, 276, 19, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				255,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1463, 618, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				256,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2344, 418, 0, 301, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				257,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3489, 420, 0, 388, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				259,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3353, 617.8453369140625, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				260,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4823.791015625, 466.7342529296875, 0, 201.14404296875, 14.95294189453125, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				261,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4542.6015625, 619.007568359375, 0, 364, 25, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				262,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5329, 615, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				407,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			1929268972390964,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				263,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[175, 1254, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				264,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			3547377874377129,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				265,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				266,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				267,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				268,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				269,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				270,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			4529416565377962,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			8599124051427723,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			1575636430954238,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv2",
		5650,
		720,
		false,
		"Levels E",
		2103842000783575,
		[
		[
			"BG",
			0,
			9090826700398662,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				164,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			1,
			6304894490636635,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				278,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 538, 0, 145, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				280,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				282,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6037, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				283,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5563.5, 664, 0, 1217, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				284,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5435, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				285,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				286,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2908.5, 667, 0, 2796, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				287,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1179, 475, 0, 239, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				288,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4648, 633, 0, 98, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				291,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2191, 538, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				292,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3028, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				395,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3880, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				396,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			2,
			1706964412273408,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				293,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				294,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				295,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				296,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				297,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				298,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4472, 408, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				299,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			3,
			1998499515778487,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				300,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				301,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				302,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				303,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				304,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				305,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				306,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				279,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5892, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				281,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			4,
			2800247634365637,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				310,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1120, 379, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				311,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1246, 388, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				312,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2158, 437, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				313,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3027, 428, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				314,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1687.81396484375, 581.3275146484375, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				315,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3883.244384765625, 439.0718078613281, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				316,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2764, 575, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				317,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 578, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				318,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2975, 573, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				319,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3070, 580, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				320,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3476, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				321,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 583.2103881835938, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				322,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				332,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				333,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2121, 398, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				334,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3853.244384765625, 406.0718078613281, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				335,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3104, 411, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				336,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2722, 538, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				337,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3019, 558, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				338,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3447, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				339,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2990, 394, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				343,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 548, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				344,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3100, 546, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				345,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2876, 578, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				346,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1174, 331, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				349,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1232, 389, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				350,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1019, 389, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				351,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 547, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				352,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2766, 579, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				353,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2845, 543, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				354,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2966, 575, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				355,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 555.8179321289063, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				356,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5044, 578, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				289,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5160, 580, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				290,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5256, 576, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				364,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5350, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				418,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5002, 541, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				419,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5299, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				420,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5381, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				421,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5157, 580, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				422,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5046, 582, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				423,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5125, 546, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				424,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5247, 578, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				425,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5528, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				426,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5477, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				427,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5559, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				428,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			5,
			7066089069641578,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Goal",
			6,
			1545441436598867,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[5394, 549, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				323,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			7,
			4926082588262943,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[780.637939453125, 539.4542236328125, 0, 149.4417877197266, 117.1928253173828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				359,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2146.998046875, 607.51025390625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				360,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				362,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				363,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696.416259765625, 678.4814453125, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				366,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2234.520751953125, 607.51025390625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				367,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1123.900146484375, 476.7061767578125, 0, 131.9921417236328, 117.2039794921875, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				369,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1235.857543945313, 477.20556640625, 0, 132.1919708251953, 118.1961059570313, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				370,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2748, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				371,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5488, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				375,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5140, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				376,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2146.998046875, 514.23681640625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				225,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2234.520751953125, 514.23681640625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				226,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3469, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				372,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4122, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				374,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				408,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2985, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				368,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				409,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2985, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				410,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				411,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3838, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				412,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3925, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				413,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3838, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				414,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3925, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				415,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2055, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				365,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2395, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				361,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3104, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				258,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3819, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				373,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4649, 678, 0, 98, 100, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				416,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4649, 581.9637451171875, 0, 98, 100, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				417,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			3149787642594459,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				378,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1180.2724609375, 423.3448181152344, 0, 250, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				379,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1689, 618, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				380,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2188.89501953125, 468, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				381,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2605, 617, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				383,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3430, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				384,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4145.740234375, 617.8477172851563, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				385,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				386,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			5794957914954592,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				387,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				388,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			2627861981087385,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				389,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				390,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				391,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				392,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				393,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				394,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			7548037689967903,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			4136446456138032,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			6094699210749679,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv3",
		6200,
		720,
		false,
		"Levels E",
		2099788685736227,
		[
		[
			"BG",
			0,
			4469011766233145,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				277,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			1,
			7995270672735998,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[270.5, 664, 0, 629, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				307,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1006, 599, 0, 79, 246, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				308,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				309,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6545, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				324,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5738.5, 664, 0, 1567, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				325,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5883, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				326,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				327,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1666.5, 667, 0, 456, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				328,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1798, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				340,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2711, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				341,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3847, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				347,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2232.5, 667, 0, 92, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1180,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2814.5, 667, 0, 602, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1181,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3390, 667, 0, 81, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1182,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4050, 667, 0, 602, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1183,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5048, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1184,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			2,
			8170272258194797,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				357,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1486, 261, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				358,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[814, 247, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				382,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5283, 261, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				429,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				430,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3246, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				431,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4435, 371, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				432,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			3,
			4921919406632591,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				433,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				434,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				435,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				436,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				437,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				438,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				439,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				440,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5892, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				441,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			4,
			1040968752880003,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				442,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6046, 567, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				443,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6172, 576, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				444,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2230.28515625, 578.9987182617188, 0, 164, 77, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				445,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2723, 428, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				446,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1687.81396484375, 581.3275146484375, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				447,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3883.244384765625, 439.0718078613281, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				448,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2764, 575, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				449,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 578, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				450,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2975, 573, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				451,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3070, 580, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				452,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3387.94140625, 582.0006713867188, 0, 144, 71, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				453,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 583.2103881835938, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				454,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				456,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				457,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2203, 540, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				458,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3853.244384765625, 406.0718078613281, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				459,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2800, 411, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				460,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2722, 538, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				461,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3019, 558, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				462,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3371, 552, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				463,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2686, 394, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				465,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 548, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				466,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3100, 546, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				467,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2876, 578, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				468,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6100, 519, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				470,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6158, 577, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				471,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5945, 577, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				472,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 547, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				473,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2766, 579, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				474,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2845, 543, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				475,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2966, 575, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				476,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 555.8179321289063, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				477,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5044, 578, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				478,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211, 572, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				479,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5307, 568, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				480,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5401, 575, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				481,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5002, 541, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				482,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5350, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				483,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5432, 541, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				484,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5208, 572, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				485,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5046, 582, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				486,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5176, 538, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				487,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5298, 570, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				488,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5579, 575, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				489,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5528, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				490,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5610, 541, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				491,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1798, 428, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				455,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1875, 411, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				464,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1761, 394, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				469,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1004.629638671875, 447.3866577148438, 0, 141.1691284179688, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				493,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1035.99658203125, 413.8218994140625, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				523,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[977.5943603515625, 413.3866271972656, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1207,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			5,
			477166590738465,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Goal",
			6,
			1490471728836902,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[5839, 549, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				492,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			7,
			8859447052686716,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1754.610717773438, 610.6107788085938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				494,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				495,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[401.3636169433594, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				496,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1625, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				497,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1842.610717773438, 610.6107788085938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				498,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1006.079528808594, 511.1337890625, 0, 81.82124328613281, 72.65413665771484, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				499,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1006.576599121094, 574.2976684570313, 0, 83.49485015869141, 82.91542816162109, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				500,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2748, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				501,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5488, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				502,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1754.610717773438, 516.6107788085938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				504,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1842.610717773438, 516.6107788085938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				505,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4167, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				507,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				508,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2669.890625, 612, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				509,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2753.496826171875, 612, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				510,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2669.890625, 518, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				511,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2753.496826171875, 518, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				512,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3805, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				513,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3892, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				514,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3805, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				515,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3892, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				516,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1711, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				517,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2700, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				518,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2931.507568359375, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				519,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3935, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				520,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1006.079528808594, 644.2537841796875, 0, 81.82124328613281, 72.65413665771484, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1197,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1006.079528808594, 705.6112670898438, 0, 81.82124328613281, 72.65413665771484, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1198,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2233.641357421875, 652.7088012695313, 0, 95.38838195800781, 82.83315277099609, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1199,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2233.839599609375, 728.5487670898438, 0, 83.49485015869141, 96.48769378662109, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1200,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3391.028076171875, 653, 0, 82.65815734863281, 82.83315277099609, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1201,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3390.5263671875, 729, 0, 83.49485015869141, 82.84658050537109, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1202,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5007.8974609375, 612.1027221679688, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1203,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5094.8974609375, 612.1027221679688, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1204,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5007.8974609375, 518.1027221679688, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1205,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5094.8974609375, 518.1027221679688, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1206,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5139, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				503,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6185, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				521,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			8656424038990561,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				524,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5050.83984375, 468.9500732421875, 0, 206.30078125, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				525,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1570.75927734375, 613.7682495117188, 0, 256.4534912109375, 18.81866455078125, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				526,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1799, 468, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				527,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2962.83203125, 612.862060546875, 0, 305, 21, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				528,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6131, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				529,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4145.740234375, 617.8477172851563, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				530,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5396, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				531,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2713, 468, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				522,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			4840806753083312,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				532,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				533,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			1684207767513199,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				534,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				535,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				536,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				537,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				538,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				539,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			6637402186762913,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			9061164836335643,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			4618893831113119,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv4",
		6500,
		720,
		false,
		"Levels E",
		6836881781412773,
		[
		[
			"BG",
			0,
			6040788179067727,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				540,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			2090148860694032,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				554,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				555,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				556,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5499, 273, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				557,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				558,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3084, 220, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				559,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4060, 354, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				560,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			7067282753585862,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				561,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				562,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				563,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				564,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				566,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4575, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				567,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				568,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6174, 592, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				569,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			4525045968287194,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				570,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1823, 428, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				574,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3248.869873046875, 421.6952514648438, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				577,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3364.869873046875, 424.6952514648438, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				578,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3459.869873046875, 419.6952514648438, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				579,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3476, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				581,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4387.857421875, 509.3434448242188, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				582,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				584,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				585,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1900, 411, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				588,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3206.869873046875, 384.6952514648438, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				589,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3503.869873046875, 404.6952514648438, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				590,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3447, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				591,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1786, 394, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				593,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3360.869873046875, 424.6952514648438, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				596,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3250.869873046875, 425.6952514648438, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				602,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3329.869873046875, 389.6952514648438, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				603,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3450.869873046875, 421.6952514648438, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				604,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4351.857421875, 482.3434448242188, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				605,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5044, 578, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				606,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5160, 580, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				607,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5256, 576, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				608,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5350, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				609,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5002, 541, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				610,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5299, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				611,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5381, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				612,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5157, 580, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				613,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5046, 582, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				614,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5125, 546, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				615,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5247, 578, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				616,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5927, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				617,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5477, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				618,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5958, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				619,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6421, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				565,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6394, 553, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				572,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			3937682670130524,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Goal",
			5,
			6713896279298355,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6155, 561, 0, 101.2974853515625, 113.6652069091797, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				571,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			6,
			6489430951102223,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				541,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				543,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6703, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				544,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5813.5, 664, 0, 1717, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				545,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6197, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				546,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				547,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1826.5, 667, 0, 194, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				548,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4389, 633, 0, 98, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				550,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1827, 538, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				551,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2229.5, 541, 0, 66, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				552,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3355, 541, 0, 372, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				553,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1242, 664, 0, 90, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				330,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5447, 538, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				542,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2493, 541, 0, 66, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				329,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2738, 541, 0, 66, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				549,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			7,
			1267853207933428,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1784.533447265625, 609, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				622,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				623,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				624,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1872.533447265625, 609, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				626,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1242.223754882813, 667.5951538085938, 0, 93.466552734375, 120.7332763671875, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				628,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5140, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				631,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1784.533447265625, 515, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				632,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1872.533447265625, 515, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				633,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3358.107421875, 540.5450439453125, 0, 383.5442199707031, 165.4655456542969, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				634,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				636,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5405, 608, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				641,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5492, 608, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				642,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5405, 514, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				643,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5492, 514, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				644,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4389, 679, 0, 98, 100, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				649,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4389, 583, 0, 98, 100, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				650,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1784.533447265625, 679.907958984375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				506,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1872.533447265625, 679.907958984375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				625,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2229.513671875, 512.3300170898438, 0, 66, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				629,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2229.513671875, 568.1918334960938, 0, 66, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				645,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2493, 514.725341796875, 0, 67.244384765625, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				646,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2493, 570.725341796875, 0, 67.244384765625, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1208,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2738.518798828125, 515.1050415039063, 0, 66, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1209,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2738.518798828125, 571.1050415039063, 0, 66, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1210,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5496, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				630,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6197, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				637,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6546, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				638,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			7217257645810862,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				652,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1828.94970703125, 467.9999694824219, 0, 204, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				653,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3356, 469, 0, 390, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				657,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5447.4833984375, 465.9655151367188, 0, 207, 18, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				658,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5907, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				659,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5156.427734375, 615.413818359375, 0, 392, 24, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				635,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			8338062932011419,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				660,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				661,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			1852979944372106,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				662,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				663,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				664,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				665,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				666,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				667,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			5204899104818269,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			4603418978505064,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			463028981230025,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv5",
		7500,
		720,
		false,
		"Levels E",
		4775714867683911,
		[
		[
			"BG",
			0,
			9593993628466771,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				668,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			4504908814205199,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				682,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				683,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1433, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				684,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6760, 251, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				685,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				686,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3204, 237, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				687,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5692, 238, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				688,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4272, 298, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				601,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			9377648425549908,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				689,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				690,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				691,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				692,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2954, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				693,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4197, 547, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				694,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4960, 615, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				695,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6079, 587, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				696,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7182, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				697,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			632526936447499,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				698,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[806, 460, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				699,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[932, 469, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				700,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2158, 437, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				701,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4137, 435, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				702,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2379, 152, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				703,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2679, 300, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				705,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3711, 580, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				706,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3806, 575, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				707,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3901, 582, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				708,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3476, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				709,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 583.2103881835938, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				710,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-314, 196, 0, 41, 41, 0, 0, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				711,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				712,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				713,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2121, 398, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				714,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4214, 418, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				716,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2637, 263, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				717,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3850, 560, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				718,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3447, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				719,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 187, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				720,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4100, 401, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				721,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2414, 119, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				722,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3931, 548, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				723,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2723, 307, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				724,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-183, 186, 0, 35, 35, 0, 0, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				725,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[860, 412, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				726,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[918, 470, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				727,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[705, 470, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				728,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2346, 118, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				729,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2681, 304, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				730,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2760, 268, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				731,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3797, 577, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				732,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 555.8179321289063, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				733,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5234, 495, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				734,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7177, 577, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				736,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7255, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				737,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5192, 458, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				738,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7204, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				739,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7286, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				740,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5294, 487, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				741,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5236, 499, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				742,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5315, 463, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				743,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7152, 578, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				744,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7433, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				745,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7382, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				746,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7464, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				747,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			530140493388517,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Goal",
			5,
			8671661149285271,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[7150, 549, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				748,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			6,
			3226167179009395,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[75, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				669,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				671,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7644, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				672,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7451, 664, 0, 655, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				673,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7192, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				674,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				675,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3761, 667, 0, 1771, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				676,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5290, 633, 0, 424, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				678,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2410, 410, 0, 905, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				679,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2382, 262, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				680,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3457, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				681,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[947, 607, 0, 504, 225, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				670,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1100, 416, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				677,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1589, 633, 0, 98, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1185,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6340, 664, 0, 92, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1186,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4134, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1187,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			7,
			4229419747212292,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[2339.63427734375, 322.0830078125, 0, 110.5894775390625, 101.7434005737305, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				750,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				751,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[880, 561, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				753,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2425.8740234375, 322.0830078125, 0, 110.5894775390625, 101.7434005737305, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				754,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1054.791625976563, 385.3146057128906, 0, 106.8660354614258, 94.55264282226563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				755,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1145.8447265625, 385.3146057128906, 0, 107.0278244018555, 95.35302734375, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				756,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2668, 410, 0, 396.8989868164063, 161.6526641845703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				757,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5317, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				758,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5265, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				759,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2339.63427734375, 234.4882049560547, 0, 110.5894775390625, 101.7434005737305, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				760,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2425.8740234375, 234.4882049560547, 0, 110.5894775390625, 101.7434005737305, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				761,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3429, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				762,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4122, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				763,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3415, 612, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				765,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3504, 612, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				766,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3415, 518, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				767,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3504, 518, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				768,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				769,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4181, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				770,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				771,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4181, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				772,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2154.349853515625, 411.1990661621094, 0, 396.8989868164063, 161.6526641845703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				773,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2302, 411, 0, 396.8989868164063, 161.6526641845703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				774,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3062, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				775,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3785, 680, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				776,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6340.97705078125, 755, 0, 90.6015625, 100, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				777,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6340.97705078125, 659, 0, 90.6015625, 100, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				778,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[880, 680, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				575,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1017, 680, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				576,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1054.791625976563, 473.8839111328125, 0, 106.8660354614258, 94.55264282226563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				580,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1145.8447265625, 473.8839111328125, 0, 107.0278244018555, 95.35302734375, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				583,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1017, 565, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				573,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1589.4775390625, 582.44970703125, 0, 99.00279998779297, 100.9843139648438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				586,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1589.4775390625, 676.705810546875, 0, 99.00279998779297, 100.9843139648438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				587,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4465, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				592,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5317, 598, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				594,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5265, 599, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				595,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7327.8828125, 676, 0, 411, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				597,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			9551219214306226,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-256, 125, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				779,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[98, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				780,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[850.5620727539063, 501.5517272949219, 0, 307, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				781,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1101, 344, 0, 201, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				782,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2115.11572265625, 338, 0, 311, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				783,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2671.9169921875, 334.3448181152344, 0, 383, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				784,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3130, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				785,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4472, 618, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				786,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5290.962890625, 540, 0, 425, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				787,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3793, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				598,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4133, 472, 0, 200, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				599,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3460, 472, 0, 200, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				600,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			4531485414984212,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				788,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				789,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			1302320732229814,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				790,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				791,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				792,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				793,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				794,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				795,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			5344465253407713,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			9551863239419026,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			4767426498321681,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv6",
		5650,
		720,
		false,
		"Levels E",
		8353458106013046,
		[
		[
			"BG",
			0,
			3801229802095414,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				796,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			2507126443881929,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				810,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				811,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				812,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				813,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				814,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				815,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4472, 408, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				816,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3814, 333, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				752,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			8303971073353955,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				817,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				818,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				819,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				820,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				822,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				823,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				824,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5892, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				825,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			6539512538126138,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				826,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[822, 425, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				827,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[948, 434, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				828,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3170, 201, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				830,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1490.9404296875, 450.0612182617188, 0, 141.3929443359375, 61.63212203979492, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				831,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3881, 547, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				832,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2674, 398, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				833,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2485, 539, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				835,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2980, 553, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				836,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3476, 549, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				837,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3779, 551, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				838,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-314, 196, 0, 41, 41, 0, 0, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				839,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				840,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				841,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3925, 516, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				843,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3247, 184, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				844,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2632, 361, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				845,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2929, 531, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				846,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3447, 519, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				847,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 187, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				848,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3133, 167, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				849,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1522.350463867188, 420.2927551269531, 0, 16.48544120788574, 17.04419326782227, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				850,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3010, 519, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				851,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2786, 401, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				852,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-183, 186, 0, 35, 35, 0, 0, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				853,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[876, 377, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				854,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[934, 435, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				855,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[721, 435, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				856,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1463.020385742188, 419.3906860351563, 0, 22.11883735656738, 22.70215797424316, 0, 0.3425256013870239, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				857,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2676, 402, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				858,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2755, 366, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				859,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2966, 537, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				860,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3742, 524, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				861,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5044, 578, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				862,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5160, 580, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				863,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5256, 576, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				864,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5350, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				865,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5002, 541, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				866,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5299, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				867,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5381, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				868,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5157, 580, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				869,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5046, 582, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				870,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5125, 546, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				871,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5247, 578, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				872,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5528, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				873,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5477, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				874,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5559, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				875,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			8469081321109497,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Goal",
			5,
			5056994583365962,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[5391, 552, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				876,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			6,
			8194603513704457,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				797,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				799,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6037, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				800,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5563.5, 664, 0, 1217, 112, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				801,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5435, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				802,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				803,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[878, 598.5, 0, 311, 247, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				804,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4630, 590, 0, 98, 289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				806,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2690, 508, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				808,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3179, 415, 0, 196, 350, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				809,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1492, 598, 0, 82, 249, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				798,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3187, 649.5, 0, 1623, 147, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				805,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			7,
			1512961645681756,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[2646.600830078125, 578.3775634765625, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				878,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				879,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				880,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[879.0687866210938, 733.3587036132813, 0, 315.51806640625, 114.950798034668, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				881,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2732.43701171875, 578.3775634765625, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				882,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1491.857788085938, 508.2358093261719, 0, 83.83396148681641, 74.9580078125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				884,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5488, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				886,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5140, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				887,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2646.600830078125, 485.3775939941406, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				888,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2732.43701171875, 485.3775939941406, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				889,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 675, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				892,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3136, 386.2728881835938, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				893,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3222, 386.2728881835938, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				894,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3136, 293.2728881835938, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				895,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3222, 293.2728881835938, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				896,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4630.5205078125, 589.4356079101563, 0, 99.04150390625, 101.0627136230469, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				905,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4630.5205078125, 495.4220581054688, 0, 99.04150390625, 101.0627136230469, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				906,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[879.0687866210938, 530.0128173828125, 0, 315.51806640625, 114.950798034668, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				620,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[879.0687866210938, 628.6867065429688, 0, 315.51806640625, 114.950798034668, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				621,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1492.8203125, 575.9192504882813, 0, 83.83396148681641, 84.2713623046875, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				627,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1491.857788085938, 646.8027954101563, 0, 83.83396148681641, 74.9580078125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				639,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1492.8203125, 714.3853759765625, 0, 83.83396148681641, 84.2713623046875, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				640,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2587.70751953125, 653.0321044921875, 0, 430.5814514160156, 156.4396362304688, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				647,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3136, 579.3092041015625, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				648,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3222, 579.3092041015625, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				651,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3136, 486.3092041015625, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				654,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3222, 486.3092041015625, 0, 111.429313659668, 107.8115005493164, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				655,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2999, 653, 0, 430.5814514160156, 156.4396362304688, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				656,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3397, 653, 0, 430.5814514160156, 156.4396362304688, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				704,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3786, 653, 0, 430.5814514160156, 156.4396362304688, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				715,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4630.5205078125, 779.4082641601563, 0, 99.04150390625, 101.0627136230469, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				735,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4630.5205078125, 682.3881225585938, 0, 99.04150390625, 101.0627136230469, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				749,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			1751236450797156,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				908,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[879.6728515625, 481.28515625, 0, 305.225341796875, 24.41802597045898, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				909,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5687, 616, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				910,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2687, 439, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				911,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2932, 585, 0, 305.1194152832031, 19.27769660949707, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				912,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3505, 587, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				913,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				915,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			7338639984195108,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				916,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				917,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			7751566251536481,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				918,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				919,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				920,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				921,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				922,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				923,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			4513224153369979,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			1120032668434695,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			4281827698449799,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv7",
		6200,
		720,
		false,
		"Levels E",
		7999915834255536,
		[
		[
			"BG",
			0,
			4343999097681647,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				924,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			6206612231561195,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				938,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				939,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				940,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				941,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				942,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				943,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4472, 408, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				944,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3752, 277, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1219,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5975, 69, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1220,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			4189106219858574,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				945,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				946,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				947,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				948,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3433, 517, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				949,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4721, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				950,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6240, 295, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				951,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				952,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5892, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				953,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5601, 295, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1218,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			1617212253031543,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				954,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[857, 567, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				955,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[983, 576, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				956,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5019, 236, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				957,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3027, 428, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				958,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1687.81396484375, 581.3275146484375, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				959,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4002, 426, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				960,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2880, 578, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				962,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2975, 573, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				963,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3070, 580, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				964,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3232, 576, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				965,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3749, 577, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				966,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-314, 196, 0, 41, 41, 0, 0, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				967,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				968,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				969,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4982, 197, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				970,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3972, 393, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				971,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3104, 411, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				972,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3019, 558, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				974,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3203, 546, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				975,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 187, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				976,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2990, 394, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				977,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 548, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				978,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3100, 546, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				979,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2876, 578, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				980,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-183, 186, 0, 35, 35, 0, 0, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				981,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[911, 519, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				982,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[969, 577, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				983,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[756, 577, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				984,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 547, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				985,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2845, 543, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				987,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2966, 575, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				988,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3713, 550, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				989,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5044, 578, 0, 191.8642730712891, 80.89051818847656, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				990,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5160, 580, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				991,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5256, 576, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				992,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5350, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				993,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5002, 541, 0, 33.15483093261719, 33.15483093261719, 0, -0.3044672012329102, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				994,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5299, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				995,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5381, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				996,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5157, 580, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				997,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5046, 582, 0, 20.85847473144531, 20.85847473144531, 0, -0.3785259425640106, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				998,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5125, 546, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				999,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5247, 578, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1000,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5528, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1001,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5477, 561, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1002,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5559, 549, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1003,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5412, 237, 0, 179.9411468505859, 75.86369323730469, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				961,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5507, 232, 0, 202.2635498046875, 85.27487945556641, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				973,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5602, 239, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				986,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5764, 235, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1034,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5551, 217, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1035,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5735, 205, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1211,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5632, 205, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1212,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5408, 237, 0, 19.98876953125, 19.98876953125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1213,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5377, 202, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1214,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5498, 234, 0, 26.52010345458984, 26.52010345458984, 0, -1.170406341552734, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1215,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6207, 245, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1216,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6178, 215, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1217,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			1061414100725268,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[424.0940551757813, 573.4616088867188, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				926,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[424.8109741210938, 601.8720092773438, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				933,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2683, 569, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1188,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2684, 598, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1189,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2163, 463, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1191,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2164, 492, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1192,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4618, 335, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1195,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4619, 364, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1196,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			7998635169547821,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[5961.85009765625, 212.5299224853516, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1004,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			5834982922261156,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1007,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1008,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1668.095825195313, 667.4214477539063, 0, 318.9118957519531, 114.2554626464844, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1009,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1127.599365234375, 514.5462646484375, 0, 155.9914093017578, 117.2039794921875, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1011,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1186.945434570313, 519.6611328125, 0, 132.1919708251953, 118.1961059570313, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1012,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5488, 336, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1014,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5140, 337, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1015,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2162.7705078125, 532.2962646484375, 0, 72.38877868652344, 70.03849029541016, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1016,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3909, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1019,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 336, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1020,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2985, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1021,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 611, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1022,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2985, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1023,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 517, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1024,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3952, 605, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1025,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4039, 605, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1026,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3952, 511, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1027,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4039, 511, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1028,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2686, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1030,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3143, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1031,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3800, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1032,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[930.9205322265625, 676.9205322265625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				764,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1127.599365234375, 623.5164184570313, 0, 155.9914093017578, 117.2039794921875, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				829,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1186.945434570313, 628.6312866210938, 0, 132.1919708251953, 118.1961059570313, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				834,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1059.2119140625, 676.9205322265625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				821,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2782, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				842,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2163, 589, 0, 72.38877868652344, 70.03849029541016, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				877,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2163, 653, 0, 72.38877868652344, 70.03849029541016, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				883,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2163, 715, 0, 72.38877868652344, 70.03849029541016, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				885,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4492, 459, 0, 142.1713409423828, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				890,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4583, 459, 0, 142.1713409423828, 140.8300933837891, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				891,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4492, 587, 0, 142.1713409423828, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				897,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4583, 587, 0, 142.1713409423828, 140.8300933837891, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				16,
				898,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4492, 710, 0, 142.1713409423828, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				899,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4583, 710, 0, 142.1713409423828, 140.8300933837891, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				900,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6208, 336, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				901,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5488, 462, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				902,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5140, 463, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				903,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 462, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				904,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6208, 462, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				907,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5488, 587, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				914,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5140, 588, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1005,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 587, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1006,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6208, 587, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1010,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5488, 703, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1013,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5140, 704, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1017,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5840, 703, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1018,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6208, 703, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1029,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			9358572478171537,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				925,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				927,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6436, 338, 0, 116, 791, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				928,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5689.5, 494.5, 0, 1469, 451, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				929,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6006, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				930,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				931,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1669.5, 667, 0, 318, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				932,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4535.5, 561, 0, 231, 346, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				934,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1147, 534, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				935,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3028, 541, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				936,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3995, 533, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				937,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[993, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				807,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2162, 618, 0, 73, 242, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1190,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2913.5, 667, 0, 831, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1193,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3853, 667, 0, 483, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1194,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			4160184931198304,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1036,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1148.558715820313, 460.9999694824219, 0, 207.2108154296875, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1037,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1669.576782226563, 617.9999389648438, 0, 322.238037109375, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1038,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3028, 468, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1039,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2719, 618, 0, 368.5114440917969, 23.28285789489746, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1040,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3851, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1041,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4535.0048828125, 395.9971008300781, 0, 225, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1042,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5192, 278, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1043,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5772, 278, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1033,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			3018661188382937,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				1044,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				1045,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			6611973103713188,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				1046,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				1047,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				1048,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1049,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1050,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1051,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			2199564091189712,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			4218391110623315,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			4139258958341647,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv8",
		6800,
		720,
		false,
		"Levels E",
		7686090849321404,
		[
		[
			"BG",
			0,
			2578002813659991,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1052,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			1185137125728542,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1066,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1067,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1068,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1069,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1070,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1071,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1072,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1101,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			8481777710644619,
			false,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1073,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1074,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1075,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1076,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1077,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1078,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1079,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1080,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1081,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			5422626129829932,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1082,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6180, 328, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1083,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6306, 337, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1084,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2133, 575, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1085,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2770, 578, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1086,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1687.81396484375, 581.3275146484375, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1087,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4165, 339, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1088,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3449, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1093,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 583.2103881835938, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1094,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1096,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1097,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2096, 536, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1098,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4135, 306, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1099,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2847, 561, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1100,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1103,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2733, 544, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1105,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 548, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1106,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6234, 280, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1110,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6292, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1111,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6079, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1112,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 547, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1113,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 555.8179321289063, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1117,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5498, 509, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1129,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5447, 487, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1130,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5529, 475, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1131,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6636, 328, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1245,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6762, 337, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1246,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6690, 280, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1247,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6748, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1248,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6535, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1249,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4482, 339, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1089,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4486, 319, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1090,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4787, 339, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1091,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4815, 318, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1092,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			4147653759077895,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[762, 609, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1221,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[763, 639, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1222,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1047, 609, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1223,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1048, 639, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1224,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1939, 459.6107788085938, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1061,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1940, 489.6107788085938, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1165,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3338, 601, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1225,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3339, 631, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1226,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4328, 503, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1230,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4329, 533, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1231,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4638, 503, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1232,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4639, 533, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1233,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			9320598276268418,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6525, 318, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1132,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			2700546446123529,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1842, 608, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1134,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1135,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1136,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1696.416259765625, 678.4814453125, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1137,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1930, 608, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1138,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1842, 514, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1144,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1930, 514, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1145,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4000.284912109375, 687.7657470703125, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1147,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1148,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2055, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1157,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2116, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1158,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4649, 678, 0, 98, 100, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1161,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[905.1048583984375, 676, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1236,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3346, 671, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1237,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3448.244384765625, 671, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1238,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4345, 688, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1149,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4701, 688, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1151,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4909, 688, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1153,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1142,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1143,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1155,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1156,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1159,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502.4638671875, 584.7115478515625, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1133,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502.4638671875, 676.4802856445313, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1139,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4788, 421, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1140,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4788, 513, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1141,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4484, 421, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1146,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4484, 513, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1171,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4166, 421, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1239,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4166, 513, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1240,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4000, 598.758544921875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1150,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4345, 598.758544921875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1152,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4701, 598.758544921875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1154,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4909, 598.758544921875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1160,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2726, 671, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1162,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2826, 671, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1241,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1102,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1107,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1108,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			5934728899523948,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1053,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1055,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7099, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1056,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6545.5, 631, 0, 1101, 178, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1057,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6571, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				1058,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				1059,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1906.5, 667, 0, 792, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1060,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4453, 633, 0, 1282, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1062,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1887, 538, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1063,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[902, 664, 0, 380, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1054,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2775.5, 667, 0, 205, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1064,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3397, 667, 0, 205, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1065,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4166, 470, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1227,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4483, 470, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1228,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4787, 470, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1229,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 635, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1234,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6542.5, 459, 0, 1094, 178, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1235,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			7337788144705852,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1164,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[903.8807983398438, 618, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1166,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1885, 468, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1167,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2079, 617, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1168,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3396.25634765625, 617.8821411132813, 0, 209.015380859375, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1169,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3969.180908203125, 537.4564819335938, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1170,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4326.78173828125, 536.9971923828125, 0, 217, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1242,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4970.03515625, 537, 0, 249, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1243,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6220.7275390625, 377.2069091796875, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1244,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			9245709524647145,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				1172,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				1173,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			2064331053041621,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				1174,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				1175,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				1176,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1177,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1178,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1179,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			1460475100643668,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			3529230503158737,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			615365629778052,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv9",
		6800,
		720,
		false,
		"Levels E",
		772160747045716,
		[
		[
			"BG",
			0,
			408262379916593,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1510,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			6219633483396186,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1511,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[687, 328, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1512,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1461, 239, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1513,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5431, 312, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1514,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2165, 184, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1515,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2752, 335, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1516,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1517,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1518,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3467, 172, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1468,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4722, 189, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1469,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			7498074835902034,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1519,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1520,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1521,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1522,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3112, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1523,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1524,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4400, 608, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1525,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1526,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1527,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			1760947504947605,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1528,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6180, 328, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1529,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6306, 337, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1530,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2065, 278, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1531,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2818, 388, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1532,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1553, 580, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1533,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4574, 500, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1534,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3952, 498, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1536,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1537,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1538,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2028, 239, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1539,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4544, 467, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1540,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2895, 371, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1541,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2781, 354, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1543,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1588, 547, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1544,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6234, 280, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1545,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6292, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1546,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6079, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1547,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1520, 546, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1548,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3916, 470, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1549,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5455, 504, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1550,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5404, 482, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1551,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5486, 470, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1552,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6636, 328, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1553,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6762, 337, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1554,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6690, 280, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1555,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6748, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1556,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6535, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1557,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			311413393152972,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[422, 562, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1562,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[423, 592, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1563,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088, 555, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1564,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1089, 585, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1565,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1939, 459.6107788085938, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1566,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1940, 489.6107788085938, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1567,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4265, 480, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1572,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4266, 510, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1573,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			4727830047879348,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6525, 318, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1574,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			469647746590984,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1842, 567, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1575,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1576,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1577,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1930, 567, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1579,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1842, 514, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1580,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1930, 514, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1581,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1583,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1593,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1594,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1595,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1596,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1597,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5455, 585, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1598,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5455, 676, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1599,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3954.533447265625, 579.4819946289063, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1602,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3954.533447265625, 674.2131958007813, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1603,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1555.246459960938, 653.897216796875, 0, 88.74381256103516, 84.98126220703125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1604,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1555.246459960938, 732.2286987304688, 0, 88.74381256103516, 84.98126220703125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1605,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2775.572998046875, 474.5455932617188, 0, 104.6390609741211, 109.9087982177734, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1610,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2864, 472.8919677734375, 0, 110.4229965209961, 119.0000152587891, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				1611,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1612,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1613,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1614,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1081.492431640625, 680.507568359375, 0, 142.1713409423828, 140.8300933837891, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				1400,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2033.867553710938, 420.3700866699219, 0, 111.3112716674805, 106.4244842529297, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1401,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2120.669921875, 420.3700866699219, 0, 111.3112716674805, 106.4244842529297, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1402,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2033.867553710938, 368.709228515625, 0, 111.3112716674805, 106.4244842529297, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1404,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2120.669921875, 368.709228515625, 0, 111.3112716674805, 106.4244842529297, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1405,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[872.908447265625, 556.182373046875, 0, 142.1713409423828, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1409,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[966.5511474609375, 556.182373046875, 0, 142.1713409423828, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1410,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[906, 676, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1411,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2436.89794921875, 679.6536254882813, 0, 152.9162139892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1412,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2575.752197265625, 679.6536254882813, 0, 151.2599639892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1413,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2456.03955078125, 205.9719543457031, 0, 444, 196, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1414,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2986, 288, 0, 152.9162139892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1415,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3125, 288, 0, 151.2599639892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1416,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2986, 420, 0, 152.9162139892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1417,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3125, 420, 0, 151.2599639892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1418,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2986, 550, 0, 152.9162139892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1419,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3125, 550, 0, 151.2599639892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1420,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2986, 680, 0, 152.9162139892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1421,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3125, 680, 0, 151.2599639892578, 140.8300933837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1422,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4270.54736328125, 579, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1461,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4270.54736328125, 674, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1462,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4575, 579, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1463,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4575, 674, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1464,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			6972581665943315,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1615,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1616,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7099, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1617,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6545.5, 631, 0, 1101, 178, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1618,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6571, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				1619,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				1620,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1555, 667, 0, 89, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1621,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1887, 538, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1623,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[932.5, 664, 0, 441, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1624,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2504, 665, 0, 286, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1625,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3953, 630, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1627,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4270, 630, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1628,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4574, 630, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1629,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5456, 635, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1630,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6542.5, 459, 0, 1094, 178, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1631,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[919, 549.5, 0, 236, 129, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1392,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2076, 393, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1393,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2455, 195, 0, 196, 455, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1394,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3055, 468.5, 0, 286, 503.0000305175781, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1395,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2867, 474, 0, 286, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1397,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			4367465366673711,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1632,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[903.8807983398438, 618, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1633,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1885, 468, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1634,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2504.3134765625, 613.3793334960938, 0, 288, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1635,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2076.56005859375, 322.0831909179688, 0, 197.4423828125, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1636,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6220.7275390625, 377.2069091796875, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1640,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[918.4122314453125, 489.8274230957031, 0, 239.1826171875, 16.99966430664063, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1465,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3055.000244140625, 223.5517272949219, 0, 288, 25, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1466,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2816, 425, 0, 193, 19, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1467,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			814478566625719,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				1641,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				1642,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			7203913255232787,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				1643,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				1644,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				1645,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1646,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1647,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1648,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			4503126841894508,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			8419097991400009,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			2983556992953703,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv10",
		7200,
		720,
		false,
		"Levels E",
		8601466228620744,
		[
		[
			"BG",
			0,
			2293732192392355,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1927,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			1936851978172909,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1928,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1929,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1930,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1931,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1932,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1933,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1934,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6220, 146, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1935,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5809, 426, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1963,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7034, 154, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1964,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			354629046999638,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1936,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1937,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1938,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1939,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1940,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1941,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1942,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1943,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1944,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			4790369645953266,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1945,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2596, 579, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1948,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2093, 268, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1949,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5753, 303, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1950,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4126, 314, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1951,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3449, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1952,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5382, 300, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1953,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1954,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1955,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2559, 540, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1956,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4096, 281, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1957,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2170, 251, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1958,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1959,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2056, 234, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1960,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5788, 270, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1961,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5720, 269, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1965,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5346, 273, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1966,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6104, 298, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1967,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6053, 276, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1968,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6135, 264, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1969,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6950, 284, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1970,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7076, 293, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1971,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7004, 236, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1972,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7062, 294, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1973,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6849, 294, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1974,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4962, 301, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1975,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4966, 281, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1976,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4667, 301, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1977,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4695, 280, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1978,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6466, 298, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1946,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6518, 295, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1947,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6412, 274, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1962,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			4661379955638483,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1017, 571, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1979,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1018, 601, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1980,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1374, 384, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1981,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1375, 414, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1982,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2221, 267, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1983,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2222, 297, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1984,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3366, 577, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1985,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3367, 607, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1986,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1631, 278, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1989,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1632, 308, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1990,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3057, 578, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2035,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3058, 608, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2039,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3460, 577, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2043,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3461, 607, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2044,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4224, 297, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2048,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4225, 327, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2054,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4794, 295, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2055,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4795, 325, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2056,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			4299615529386131,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6922, 265, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1991,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			4288702019393169,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1993,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1994,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[872.058349609375, 661.4766235351563, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1997,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1008.349853515625, 661.4766235351563, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1998,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3196, 680, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1999,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2627.7822265625, 166.098876953125, 0, 375.3572082519531, 136.3754577636719, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2001,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3346, 671, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2005,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3448.244384765625, 671, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2006,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3541, 680, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2007,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3842, 681, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2008,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6995, 617, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2010,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6995, 510, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2012,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6995, 398, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2014,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5385.564453125, 381.0664978027344, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2015,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5385.564453125, 472.0664978027344, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2016,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4166, 421, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2021,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3884.32958984375, 588.70703125, 0, 283.6660766601563, 109.4140625, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2024,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4796.38134765625, 406.8184509277344, 0, 439.8967590332031, 155.4666137695313, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2026,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2601.8193359375, 677, 0, 163, 131, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2028,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7351, 617, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2029,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7351, 510, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2030,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7351, 398, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2031,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[940, 661, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2004,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1231.15380859375, 476.9328918457031, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2384,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1367.4453125, 476.9328918457031, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2385,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1310.076416015625, 476.9993896484375, 0, 125, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2386,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1472.0615234375, 368.7510375976563, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2387,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1608.35302734375, 368.7510375976563, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2388,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1531.26416015625, 368.7504272460938, 0, 118, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2389,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2072.353759765625, 357.4295959472656, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2390,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2208.353759765625, 357.4295959472656, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2391,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2133.353759765625, 357.4295959472656, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2392,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2565, 166, 0, 375.3572082519531, 136.3754577636719, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1992,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5753.01806640625, 381.0664978027344, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1995,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5753.01806640625, 472.0664978027344, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1996,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6995, 751, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2000,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7351, 751, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2002,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6106.2236328125, 381, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2011,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6106.2236328125, 472, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2013,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6471.005859375, 381, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2027,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6471.005859375, 472, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2393,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4009.056640625, 488.781982421875, 0, 286.6680297851563, 109.4140625, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2023,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4009.056640625, 580.8148193359375, 0, 286.6680297851563, 109.4140625, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2394,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4127.17919921875, 398.1210632324219, 0, 286.6680297851563, 109.4140625, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2395,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4127.17919921875, 490.1210632324219, 0, 286.6680297851563, 109.4140625, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2396,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			6694145028276165,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2032,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2033,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7336, 313, 0, 116, 985, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2034,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6964, 269, 0, 93, 926, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				2036,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				2037,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3404, 667, 0, 792, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2038,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2597, 166.5, 0, 196, 367, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2040,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[939, 662, 0, 248, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2041,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2598.5, 667, 0, 159, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2042,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3884, 635, 0, 283, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2047,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1299, 476, 0, 248, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2377,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1539, 369, 0, 248, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2378,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2140, 358, 0, 248, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2379,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4794, 406.5, 0, 435, 153, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1987,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7064, 526, 0, 517, 392, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1988,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4009, 535, 0, 283, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2045,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4126, 445, 0, 283, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2046,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5385, 426, 0, 104, 191, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2380,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5753, 424.5, 0, 104, 188, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2381,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6106, 425, 0, 104, 189, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2382,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6471, 424.5, 0, 104, 188, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2383,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			8641731165546849,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2049,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[940.0010375976563, 611.865234375, 0, 254.1193389892578, 19.00615501403809, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2050,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1538.810913085938, 320.4667358398438, 0, 248.3853759765625, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2051,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1298.222900390625, 424.6234741210938, 0, 257.8823852539063, 17.90147972106934, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2052,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3183, 620, 0, 347, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2053,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7041.3916015625, 339.3916625976563, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2057,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2139.51904296875, 309.4443359375, 0, 248.3853759765625, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2003,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3556, 620, 0, 347, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2009,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4803, 337, 0, 347, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2017,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			2559184170766997,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				2058,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				2059,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			2081262890178903,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				2060,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				2061,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				2062,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2063,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2064,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2065,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			6858240044046996,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			5175409977005563,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			6208317191370525,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv11",
		6800,
		720,
		false,
		"Levels E",
		5404582920521009,
		[
		[
			"BG",
			0,
			4431102405220307,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1095,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			6141807653178387,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1104,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1109,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1114,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1115,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1116,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1118,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1119,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1120,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			116582889513801,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1121,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1122,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1123,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1124,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1125,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1126,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1127,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1128,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1163,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			1696031456050459,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1250,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6180, 328, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1251,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6306, 337, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1252,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2117, 575, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1253,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3682, 574, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1254,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1419, 366, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1255,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4146, 372, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1256,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 583.2103881835938, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1258,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1259,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1260,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2080, 536, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1261,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4178, 370, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1262,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3759, 557, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1263,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3645, 540, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1265,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1454, 333, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1266,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6234, 280, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1267,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6292, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1268,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6079, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1269,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1386, 332, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1270,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 555.8179321289063, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1271,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5382, 503, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1272,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5331, 481, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1273,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5413, 469, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1274,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6636, 328, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1275,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6762, 337, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1276,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6690, 280, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1277,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6748, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1278,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6535, 338, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1279,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1732, 579, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1324,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1767, 546, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1325,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1699, 545, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1328,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4085.063720703125, 364.6139526367188, 0, 22.97825050354004, 22.97825050354004, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1257,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4123, 340, 0, 22.97825050354004, 22.97825050354004, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1264,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			7453206835493395,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[762, 581, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1284,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[763, 611, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1285,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[976, 476, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1286,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[977, 506, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1287,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1927, 577, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1288,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1928, 607, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1289,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3055, 601, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1290,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3056, 631, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1291,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1189, 367, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2207,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1190, 397, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2208,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2664, 577, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2209,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2665, 607, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2210,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4299, 601, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1294,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4300, 631, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1295,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3923, 601, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1344,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3924, 631, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1349,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			3616282499064035,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6525, 318, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1296,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			7237770889927099,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1868.981201171875, 135, 0, 112.8470458984375, 108.4413528442383, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1297,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1298,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1299,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1855, 678, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1300,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1956.38330078125, 135, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1301,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1868.981201171875, 41, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1302,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1956.38330078125, 41, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1303,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3785.54345703125, 679.37451171875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1304,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1305,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1991, 679, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1307,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4463.82666015625, 679.37451171875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1313,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1315,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1316,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1317,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6184, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1318,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6533, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1319,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5382.63134765625, 585, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1320,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5382.63134765625, 676, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1321,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4050.2578125, 462.2440795898438, 0, 128.6904449462891, 114.2753372192383, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1326,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4050.2578125, 567.577392578125, 0, 128.6904449462891, 114.2753372192383, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1327,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2572.984130859375, 670.6588134765625, 0, 105.9996566772461, 119.6823272705078, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1332,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2640.10693359375, 667.2444458007813, 0, 112.1503524780273, 120.3603668212891, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				1333,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 685, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1334,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 573, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1335,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6889, 441, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1336,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[770.03515625, 667.1112670898438, 0, 117.2320709228516, 116.1260986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1309,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[872.206787109375, 667.1112670898438, 0, 117.2320709228516, 116.1260986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1350,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[985.098876953125, 562, 0, 117.2320709228516, 116.1260986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1351,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088.098876953125, 562, 0, 117.2320709228516, 116.1260986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1359,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1200.253784179688, 454.5021362304688, 0, 117.2320709228516, 116.1260986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1360,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1303.253784179688, 454.5021362304688, 0, 117.2320709228516, 116.1260986328125, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				1361,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1411, 455, 0, 117.2320709228516, 116.1260986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2211,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1512, 453, 0, 117.2320709228516, 116.1260986328125, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				16,
				2212,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1582, 455, 0, 117.2320709228516, 116.1260986328125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2213,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1868.981201171875, 329, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2214,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1956.38330078125, 329, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2215,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1868.981201171875, 235, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2216,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1956.38330078125, 235, 0, 112.8470458984375, 108.4413528442383, 0, 1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2217,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1868.981201171875, 372, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2218,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1956.38330078125, 372, 0, 112.080322265625, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2219,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3064.8154296875, 671.54541015625, 0, 105.9996566772461, 119.6823272705078, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1306,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3156.3818359375, 667.54541015625, 0, 112.1503524780273, 120.3603668212891, 0, 1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				2220,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4176.123046875, 462.2440795898438, 0, 127.9379730224609, 114.2753372192383, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1308,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4176.123046875, 567.577392578125, 0, 127.9379730224609, 114.2753372192383, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1310,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114.876953125, 462.2440795898438, 0, 127.9379730224609, 114.2753372192383, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1311,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114.876953125, 567.577392578125, 0, 127.9379730224609, 114.2753372192383, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1314,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4103.78125, 679.37451171875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1312,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			9465575498477548,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1337,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1338,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7099, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1339,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6545.5, 631, 0, 1101, 178, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1340,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6571, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				1341,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				1342,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1912, 205.5, 0, 196, 443, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1345,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[820, 664, 0, 216, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1346,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2610.5, 667, 0, 180, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1347,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3114, 667, 0, 205, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1348,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5383, 635, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1352,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6542.5, 461, 0, 1094, 174, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1353,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1034, 559, 0, 216, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1343,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1389.5, 452, 0, 495, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2205,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920.5, 664, 0, 513, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2206,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4123.5, 667, 0, 1052, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1292,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 513, 0, 254.0000152587891, 216, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1293,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			9067467655087086,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1354,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1444.73095703125, 407, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1355,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1912.798461914063, 419.1644287109375, 0, 205, 23, 0, 3.141592741012573, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1356,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1924.002075195313, 618.4978637695313, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1357,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3737.556640625, 617.9971313476563, 0, 268, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1358,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6223, 382, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1362,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4111.91455078125, 408.4075317382813, 0, 261.8427734375, 18.92123413085938, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1322,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4508.88671875, 617.048828125, 0, 278.91845703125, 18.92123413085938, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1323,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			4735785200489351,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				1363,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				1364,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			3265443210394495,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				1365,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				1366,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				1367,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1368,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1369,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1370,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			9572303589822433,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			7942316225727282,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			2068565548550706,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv12",
		6800,
		720,
		false,
		"Levels E",
		2744518582668078,
		[
		[
			"BG",
			0,
			8001303201032332,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1649,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			5910644819903029,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1650,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1651,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1652,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1653,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1654,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1655,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1656,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1657,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			7956510429550921,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1658,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1659,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1660,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1661,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1662,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1663,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1664,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1665,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1666,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			2998786140864299,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1667,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6044, 450, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1668,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6170, 459, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1669,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2038, 280, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1670,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2586, 542, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1671,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1368, 396, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1672,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3008, 551, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1673,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3449, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1674,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 583.2103881835938, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1675,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1676,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1677,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2001, 241, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1678,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2978, 518, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1679,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2663, 525, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1680,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1681,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2549, 508, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1682,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1404, 363, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1683,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6098, 402, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1684,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6156, 460, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1685,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5943, 460, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1686,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1336, 362, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1687,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 555.8179321289063, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1688,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5749, 308, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1689,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5698, 286, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1690,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5780, 274, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1691,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6591, 447, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1692,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6717, 456, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1693,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6645, 399, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1694,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6703, 457, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1695,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6490, 457, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1696,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3520, 245, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1697,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3524, 225, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1698,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4947, 458, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1699,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4975, 437, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1700,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[755.384521484375, 544.6154174804688, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2349,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[791.384521484375, 511.6154174804688, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2350,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[723.384521484375, 510.6154174804688, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2351,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			5031605683723061,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[359, 660, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1701,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[360, 690, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1702,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2793, 542, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1707,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2794, 572, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1708,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4062, 221, 0, 93.5186767578125, 93.51866149902344, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				1709,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4061, 191, 0, 15.80311965942383, 72.43095397949219, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				1710,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3393, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1711,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3394, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1712,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[449, 660, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1561,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[450, 690, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1568,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[550, 660, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1569,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[551, 690, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1570,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[654, 660, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1571,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[655, 690, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1578,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[864, 660, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1582,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[865, 690, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1584,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[954, 660, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1585,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[955, 690, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1586,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1055, 660, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1587,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1056, 690, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1588,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1199, 541, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1589,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1200, 571, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1590,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1845, 283, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1591,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1846, 313, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1592,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2212, 283, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1600,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2213, 313, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1601,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2032, 127, 0, 93.5186767578125, 93.51866149902344, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				1606,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2031, 97, 0, 15.80311965942383, 72.43095397949219, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				1607,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4578, 221, 0, 93.5186767578125, 93.51866149902344, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				1608,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4577, 191, 0, 15.80311965942383, 72.43095397949219, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				1609,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3493, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1622,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3494, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1626,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3591, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1637,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3592, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1638,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3689, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1639,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3690, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1703,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3908, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1704,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3909, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1705,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4011, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1706,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4012, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1757,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4113, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1767,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1768,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4214, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1769,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4215, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1770,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4434, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2252,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4435, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2253,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4537, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2254,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4538, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2255,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4639, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2256,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4640, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2257,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4740, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2258,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4741, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2259,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5850, 293, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2260,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5851, 323, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2261,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2059, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2262,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2060, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2263,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2159, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2264,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2160, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2265,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2257, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2266,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2258, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2267,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2355, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2268,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2356, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2269,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1657, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2270,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1658, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2271,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1757, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2272,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1758, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2273,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1855, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2274,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2275,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1953, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2276,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1954, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2277,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1548, 644, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2284,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1549, 674, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2285,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5636, 645, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2278,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5637, 675, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2279,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5540, 645, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2280,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5541, 675, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2281,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5441, 645, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2282,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5442, 675, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2283,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			2587971396589204,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6630, 433, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1713,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			1958590085373489,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1178.717529296875, 635.8064575195313, 0, 117.4120254516602, 113.5999450683594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1714,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[133.0218658447266, 522.7614135742188, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1715,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[133.7614135742188, 400.2440185546875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1716,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2620.58837890625, 644.6085815429688, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1717,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1286.937377929688, 636, 0, 122.2522964477539, 112.5990447998047, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1718,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1752.693481445313, 373.0748596191406, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1719,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1402.829711914063, 635.4556884765625, 0, 120.398193359375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1720,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5873, 668, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1722,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2988, 649, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1723,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3140, 645.6085815429688, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1724,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3186.7041015625, 563, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1727,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3475.31787109375, 333.4484252929688, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1728,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6238, 668, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1732,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5873, 556, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1733,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6238, 556, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1734,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3801.5, 540.9999389648438, 0, 103, 107, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1743,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3801.5, 642.0200805664063, 0, 103, 106, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1744,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2738.453369140625, 340.6937561035156, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1749,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2840.486328125, 340.6937561035156, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1750,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6616.85888671875, 668, 0, 397, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1751,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6616.85888671875, 556, 0, 397, 136, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1752,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[133.9993743896484, 658.812255859375, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2286,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[498, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2287,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1224, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1726,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1581, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2289,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1950, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2290,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2322, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2291,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2685, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2292,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3051, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2293,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2294,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3789, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2295,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4146, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1721,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4507, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1725,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5570, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1731,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5938, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1745,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6299, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1746,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6649, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1747,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4330, 541, 0, 103, 107, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1735,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4330, 642, 0, 103, 106, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1736,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2738, 231, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1739,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2840, 231, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1740,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2738, 122, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1741,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2840, 122, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1742,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4015.326904296875, 133.6731262207031, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1748,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4117.32666015625, 133.6731262207031, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1753,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4014.326904296875, 23.67311859130859, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2296,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4116.32666015625, 23.67311859130859, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2297,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4014.326904296875, -85.32688140869141, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2298,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4116.32666015625, -85.32688140869141, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2299,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4523, 134, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2300,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4625, 134, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2301,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4522, 24, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2302,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4624, 24, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2303,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4522, -85, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2304,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4624, -85, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2305,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3564.640380859375, 333.4484252929688, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2306,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3377.148193359375, 400.8183288574219, 0, 110.0973129272461, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2307,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3564.640380859375, 382.2984924316406, 0, 110.0973129272461, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2308,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3472.330322265625, 402.5540466308594, 0, 105.7938461303711, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2309,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3377.148193359375, 454.7489624023438, 0, 110.0973129272461, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2310,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3472.330322265625, 456.4846801757813, 0, 105.7938461303711, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2311,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3280.418212890625, 480.4860534667969, 0, 110.0973129272461, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2312,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3377.148193359375, 536.1348266601563, 0, 110.0973129272461, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2313,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3276.983642578125, 536.1348266601563, 0, 103.7950668334961, 102.2075958251953, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2314,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1861.245361328125, 373.0748596191406, 0, 112.8470458984375, 109.1831817626953, 0, 3.141592741012573, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2315,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1966.395263671875, 371.2288208007813, 0, 109.1549377441406, 109.1831817626953, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2316,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2075.804931640625, 371.2288208007813, 0, 121.1546936035156, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2317,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2192.920166015625, 371.2288208007813, 0, 109.1549377441406, 120.2581329345703, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2318,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2305.92919921875, 371.2288208007813, 0, 109.1549377441406, 123.0210723876953, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2319,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2025, 13, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2324,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4986, 558, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2339,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5208, 556, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2340,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4986, 684, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2341,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5208, 682, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2342,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4874, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1729,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5206, 759, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1730,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1331.600341796875, 482.0960083007813, 0, 122.2522964477539, 112.5990447998047, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2343,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1403.4013671875, 480.9800415039063, 0, 120.398193359375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2344,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1331.600341796875, 530.7096557617188, 0, 122.2522964477539, 112.5990447998047, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2345,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1407.089111328125, 526.8056640625, 0, 112.0921020507813, 109.1831817626953, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2346,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[759.7059936523438, 623.73974609375, 0, 94.85699462890625, 98.54074096679688, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2347,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[759.7059936523438, 716.7548217773438, 0, 94.85699462890625, 97.61979675292969, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2348,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[862.7763061523438, 758.9999389648438, 0, 375, 144, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2288,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5744.06982421875, 392.6974792480469, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1472,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5828.7373046875, 392.6974792480469, 0, 111.0243072509766, 110.1272888183594, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1737,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5744.06982421875, 438.8253173828125, 0, 111.0243072509766, 110.1272888183594, 0, 1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1738,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5828.7373046875, 438.8253173828125, 0, 111.0243072509766, 110.1272888183594, 0, 3.141592741012573, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1761,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2738, 31, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2320,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2840, 31, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2321,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			5043974731048923,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[136, 575.5, 0, 360, 483, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1754,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1755,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6970, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1756,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6674, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				1758,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 295, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				1759,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1293, 633, 0, 342, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1760,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1368, 504, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1762,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[760, 638.5, 0, 95, 127, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1763,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2032, 371, 0, 674, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1764,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2787, 150, 0, 205, 498, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1765,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3801, 588, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1766,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3761.5, 856, 0, 7569, 336, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1473,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2868, 633, 0, 869, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1470,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3233, 580, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1471,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3323, 508, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1474,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3419, 428, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1475,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3518, 352, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1495,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4066, -1, 0, 205, 384, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1498,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4330, 588, 0, 102, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1499,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5096, 588, 0, 595, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1500,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4573, -1, 0, 205, 384, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1501,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6590, 588, 0, 1802, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1558,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5787, 415, 0, 196, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1559,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2023.807373046875, 13.02953720092773, 0, 369, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1560,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			2480767412157467,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[88.69380187988281, 344.3061828613281, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1771,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1368.045776367188, 430.1809387207031, 0, 210.5807037353516, 15.74980354309082, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1772,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1885.184936523438, 322.17333984375, 0, 374.8216552734375, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1773,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2777.2255859375, 584.8471069335938, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1774,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3518.567138671875, 278.7181396484375, 0, 204.16015625, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1775,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3605, 692, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1776,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5261.2255859375, 493.2604064941406, 0, 217, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1777,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4971, 495, 0, 315, 25, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1778,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6223, 495, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1779,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			4179824751179818,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 281, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				1780,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				1781,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			9217304289809519,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				1782,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				1783,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				1784,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1785,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1786,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1787,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			7005941523095957,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			6677995992679659,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			1894256651396916,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv13",
		6600,
		720,
		false,
		"Levels E",
		5922219722643432,
		[
		[
			"BG",
			0,
			1644147234938883,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1788,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			999146605839742,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1789,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1790,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1791,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1792,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1793,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1794,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1795,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1796,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			7001203584372072,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1797,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1798,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1799,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1800,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1801,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1802,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1803,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1804,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1805,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			2324709435300976,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1806,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6378, 496, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1807,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6504, 505, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1808,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1945, 570, 0, 149.1673736572266, 62.88943481445313, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1809,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2549.36767578125, 504.2145385742188, 0, 129.8494262695313, 54.74486541748047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1810,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1687.81396484375, 581.3275146484375, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1811,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4313, 527, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1812,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3920.8935546875, 513.426025390625, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1813,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4150.29541015625, 583.2103881835938, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1814,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1815,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1816,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1915, 538, 0, 32.54048538208008, 32.54050827026367, 0, -0.2805188298225403, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1817,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4283, 494, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1818,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2601.888671875, 492.4241027832031, 0, 16.20407485961914, 16.20407104492188, 0, 0.4591927528381348, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1819,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3891.8935546875, 483.4259948730469, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1820,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2524.715087890625, 480.6336975097656, 0, 18.90475273132324, 18.90474891662598, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1821,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 548, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1822,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6432, 448, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1823,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6490, 506, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1824,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6277, 506, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1825,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 547, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1826,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4114, 555.8179321289063, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1827,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5495.62109375, 335.4971313476563, 0, 135.9001770019531, 57.29584121704102, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1828,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5454.3740234375, 317.7041931152344, 0, 26.81464576721191, 26.81462478637695, 0, 0.2608476877212524, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1829,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5520.693359375, 307.9989624023438, 0, 22.64557266235352, 22.64555168151856, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1830,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1530, 416, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1831,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1656, 425, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1832,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1584, 368, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1833,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1642, 426, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1834,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1429, 426, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1835,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4462, 354, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1836,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4466, 334, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1837,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4670, 351, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1838,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4698, 330, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1839,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2832.958740234375, 383.9708862304688, 0, 129.8494262695313, 54.74486541748047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1874,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2885.479736328125, 372.1804504394531, 0, 16.20407485961914, 16.20407104492188, 0, 0.4591927528381348, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1875,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2808.30615234375, 360.3900451660156, 0, 18.90475273132324, 18.90474891662598, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				1888,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3095.37890625, 222.1344146728516, 0, 129.8494262695313, 54.74486541748047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1892,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3147.89990234375, 210.3439788818359, 0, 16.20407485961914, 16.20407104492188, 0, 0.4591927528381348, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1917,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3070.726318359375, 198.5535736083984, 0, 18.90475273132324, 18.90474891662598, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2373,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3369.14697265625, 131.3839569091797, 0, 129.8494262695313, 54.74486541748047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2374,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3421.66796875, 119.5935211181641, 0, 16.20407485961914, 16.20407104492188, 0, 0.4591927528381348, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2375,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3344.494384765625, 107.8031158447266, 0, 18.90475273132324, 18.90474891662598, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2376,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			2224596931504296,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[762, 573, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1840,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[763, 603, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1841,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1220, 571, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1842,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1221, 601, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1843,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2159, 474, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1846,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2160, 504, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1847,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1133, 571, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2322,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1134, 601, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2323,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[857, 571, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2325,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[858, 601, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2326,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3745, 524, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1848,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3746, 554, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1849,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3498, 524, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1850,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3499, 554, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1851,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4089, 524, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1905,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4090, 554, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1906,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3917, 354, 0, 93.5186767578125, 93.51866149902344, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				1907,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3916, 324, 0, 15.80311965942383, 72.43095397949219, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				2329,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5837, 495, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2331,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5838, 525, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2332,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5940, 495, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2333,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5941, 525, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2334,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6043, 495, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2335,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6044, 525, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2336,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6144, 495, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2337,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6145, 525, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2338,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6245, 495, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2352,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6246, 525, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2353,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			1723545396518625,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6338, 487, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1852,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			1144327688611859,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1854,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1855,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1600.65087890625, 523.3736572265625, 0, 316.8617248535156, 115.1227722167969, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1856,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2550.6240234375, 562.9530029296875, 0, 80.63275146484375, 78.01487731933594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1858,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3548, 704, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1860,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5990.36474609375, 721.2040405273438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1861,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[905.1048583984375, 676, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1865,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3893, 705, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1868,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4249, 705, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1869,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6339.36474609375, 721.2040405273438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1871,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5990.36474609375, 609.2040405273438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1872,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6339.36474609375, 609.2040405273438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1873,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5496.2734375, 400.7809753417969, 0, 80.777587890625, 78.15517425537109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1876,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5496.2734375, 472.639404296875, 0, 80.777587890625, 78.15517425537109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1877,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4676, 432, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1878,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4676, 524, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1879,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3548, 615, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1884,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3893, 615, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1885,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4249, 615, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1886,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2162.328369140625, 581.0777587890625, 0, 109.4629364013672, 114.1549987792969, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				1889,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6695.36474609375, 721.2040405273438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1890,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6695.36474609375, 609.2040405273438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1891,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1072.976684570313, 676, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2354,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1601, 632, 0, 316.8617248535156, 115.1227722167969, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2355,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1601, 632, 0, 316.8617248535156, 115.1227722167969, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2356,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1601, 740, 0, 316.8617248535156, 115.1227722167969, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2357,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2550.6240234375, 635.525146484375, 0, 80.63275146484375, 78.01487731933594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1853,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2550.6240234375, 708.7348022460938, 0, 80.63275146484375, 78.01487731933594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1857,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2835.788330078125, 441.0462341308594, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1859,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2835.788330078125, 509.0205688476563, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1863,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2835.788330078125, 565.287109375, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2358,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3097.155517578125, 283.1811828613281, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2359,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3097.155517578125, 351.1811828613281, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2360,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3097.155517578125, 408.1811828613281, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2361,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3370, 190.4931335449219, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2362,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3370, 258.4931640625, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2363,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3370, 315.4931640625, 0, 75.08148956298828, 72.64394378662109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2364,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1788.17626953125, 227.0811767578125, 0, 417.3984985351563, 151.6499786376953, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1535,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1788.17626953125, 85.80238342285156, 0, 417.3984985351563, 151.6499786376953, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1542,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1788.17626953125, -56.38848876953125, 0, 417.3984985351563, 151.6499786376953, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2365,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1948.1572265625, 637.51123046875, 0, 90.17491149902344, 87.24723052978516, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2366,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1948.730224609375, 717.6558837890625, 0, 90.17491149902344, 88.38590240478516, 0, -1.570796370506287, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2367,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2162.328369140625, 688.6085815429688, 0, 109.4629364013672, 114.1549987792969, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2368,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4599, 432, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1864,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4599, 524, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1880,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4509, 432, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1881,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4509, 524, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1882,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4431, 432, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				1883,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4431, 524, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2369,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4547, 705, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1870,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4547, 615, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1887,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5496.2734375, 544.3768920898438, 0, 80.777587890625, 78.15517425537109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2370,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5496.2734375, 616.2352905273438, 0, 80.777587890625, 78.15517425537109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2371,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5496.2734375, 688.6170043945313, 0, 80.777587890625, 78.15517425537109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2372,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3912.281494140625, 246.5170288085938, 0, 410.8988037109375, 149.2884979248047, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1862,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3912.281494140625, 116.2012176513672, 0, 410.8988037109375, 149.2884979248047, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1866,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3912.281494140625, -22.27639770507813, 0, 410.8988037109375, 149.2884979248047, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1867,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			742711505741989,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[208, 664, 0, 504, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1893,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1894,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6939, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1895,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6355, 631, 0, 1101, 178, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1896,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6380, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				1897,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				1898,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4043, 648, 0, 1369, 202, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1900,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1598.5, 592, 0, 313, 254, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1901,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[986, 664, 0, 548, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1902,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1787, 5, 0, 409, 590, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1903,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2161, 624, 0, 106, 197, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1904,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5496, 549, 0, 80, 375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1908,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3909, 104, 0, 401, 432, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1844,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2550.5, 624, 0, 77, 197, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1845,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1948, 693, 0, 88, 197, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1899,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2834.5, 505, 0, 75, 197, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1909,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3097.5, 345, 0, 75, 197, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2327,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3370, 252, 0, 74, 197, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2328,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4553, 481, 0, 352, 199, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2330,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			6954537230055134,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1910,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[903.8807983398438, 618, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1911,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1597.845336914063, 470.6819763183594, 0, 316.9310302734375, 26.40975952148438, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1912,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1787.484375, 290.6561889648438, 0, 409.5377502441406, 25.87493324279785, 0, 3.141592741012573, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1913,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3514.60009765625, 554.9971313476563, 0, 308, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1914,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3937, 551, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1915,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4554.14599609375, 388.9999694824219, 0, 351, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1916,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6034, 552, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1918,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			4167673499238107,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160.9163055419922, 557.7393798828125, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				1919,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				1920,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			533519205000834,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				1921,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				1922,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				1923,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1924,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1925,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1926,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			8805536793278363,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			6539076771531417,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			8392668445332018,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv14",
		6800,
		720,
		false,
		"Levels E",
		5550987198555834,
		[
		[
			"BG",
			0,
			9312632915857354,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				1371,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			9700376643562751,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1372,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1373,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				1374,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1375,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				1376,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1377,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1378,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				1379,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			6097039805031187,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1380,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1381,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1382,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1383,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1384,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1385,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1386,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1387,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				1388,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			579918461374371,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1389,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6558, 569, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1390,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6684, 578, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1391,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3449, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				1396,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1398,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1399,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				1403,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6612, 521, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1406,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6670, 579, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1407,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6457, 579, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				1408,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			2684601579327231,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[462, 580, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1423,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[463, 610, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1424,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[556, 580, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1280,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[557, 610, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1281,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[826, 580, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1282,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[827, 610, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1283,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[913, 580, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1329,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[914, 610, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1330,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1180, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1331,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1181, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1479,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1407, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1425,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1408, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1426,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1502, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1482,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1503, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1483,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1819, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1484,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1820, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1485,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1919, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1486,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1920, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1487,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2018, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1427,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2019, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1428,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2115, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1488,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2116, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1489,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2367, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1490,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1491,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2543, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1492,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2544, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2221,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2715, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2222,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2716, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2223,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3380, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1429,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3381, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1430,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3478, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1431,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3479, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1432,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3855, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2228,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3856, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2229,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3953, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2230,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3954, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2231,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4227, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2232,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4228, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2233,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4496, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2234,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4497, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2235,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4771, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2236,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4772, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2237,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4871, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2238,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4872, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2239,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5156, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2240,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5157, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2241,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5375, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2242,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5376, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2243,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5695, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2244,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5696, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2245,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5790, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2246,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5791, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2247,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3010, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2224,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3011, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2225,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3186, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2226,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3187, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2227,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6124, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				1433,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6125, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				1434,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6218, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2248,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6219, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2249,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6312, 582, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2250,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6313, 612, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2251,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			121670250044112,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6525, 546, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				1435,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			4748231283577997,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1437,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1438,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[632, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1436,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[986, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1439,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1353, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1440,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1719, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1441,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2090, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1442,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2454, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1443,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2819, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1444,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3188, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1445,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3552, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1446,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3920, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1447,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4288, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1448,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4658, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1449,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5024, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1450,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5391, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1451,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5759, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1452,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6129, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1453,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6499, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1454,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6844, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				1455,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			1896327458596007,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[3521, 664, 0, 7130, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1476,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1477,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7099, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				1478,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6571, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				1480,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				1481,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			20052807759871,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1493,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[903.8807983398438, 618, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1494,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1772, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1496,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3396.25634765625, 617.8821411132813, 0, 209.015380859375, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1497,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2777, 612.8275756835938, 0, 459, 19, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1456,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3927.9345703125, 612.9999389648438, 0, 399, 19, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1457,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4703, 613, 0, 399, 19, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1458,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5442, 613, 0, 399, 19, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1459,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6338, 613, 0, 399, 19, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				1460,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			5737920596844734,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				1502,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				1503,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			4384728018389114,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				1504,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				1505,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				1506,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1507,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1508,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				1509,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			6010152210757957,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			3349732285017513,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			2433577825954898,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv15",
		6800,
		720,
		false,
		"Levels E",
		8326311620444016,
		[
		[
			"BG",
			0,
			1729117064361992,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				2066,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			1086524432679863,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2067,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2068,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				2069,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4939, 194, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2070,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2071,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2072,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3874, 216, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2073,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2074,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			7446820972276639,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246.27880859375, 570.40625, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2075,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 587, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2076,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 591, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2077,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 586, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2078,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 525, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2079,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2080,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2081,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 577, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2082,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 595, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2083,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			5597266064771353,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 564, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2084,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6180, 271, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2085,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6306, 280, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2086,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2961, 425, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2087,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2604, 578, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2088,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[922, 485, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2089,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4017, 280, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2090,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3293, 293, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2091,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 523, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2093,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 540, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2094,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2924, 386, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2095,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3987, 247, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2096,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2681, 561, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2097,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3264, 263, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2098,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2567, 544, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2099,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[957, 451, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2100,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6234, 223, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2101,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6292, 281, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2102,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6079, 281, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2103,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[889, 450, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2104,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6636, 271, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2109,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6762, 280, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2110,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6690, 223, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2111,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6748, 281, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2112,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6535, 281, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2113,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4334, 280, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2114,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4338, 260, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2115,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4758, 280, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2116,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4786, 259, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2117,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1112, 392, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2151,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1147, 358, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2155,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1079, 357, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2168,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1407, 393, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2169,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1442, 359, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2192,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1374, 358, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2195,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1693, 579, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3665,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1728, 545, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3669,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1660, 544, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3670,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			9443821344951528,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[2731, 579, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2118,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2732, 609, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2119,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4934, 276, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2124,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4935, 306, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2125,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4121, 277, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2126,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4122, 307, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2127,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4532, 277, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2128,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4533, 307, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2129,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3068, 425, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2022,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3069, 455, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2025,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3407, 289, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2177,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3408, 319, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2179,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			4590766926203595,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6459, 253, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				2130,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			8328129734760954,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[143.7108764648438, 675.7332153320313, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2132,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[275, 676, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2133,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4000, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2138,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1185.72607421875, 487.3648071289063, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2143,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4345, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2146,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4701, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2147,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4909, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2148,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4000, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2162,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4345, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2163,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4701, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2164,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4909, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2165,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2600.1806640625, 670, 0, 137, 119, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2166,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2722.8193359375, 670, 0, 139, 119, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2167,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1294.276245117188, 487.3648071289063, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3656,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1037.997924804688, 580.727294921875, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3657,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1308, 581, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3658,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1442, 581, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3659,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[903, 675, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2134,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1242, 675, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3660,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1586, 675, 0, 383.5386047363281, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3661,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2966, 514, 0, 137, 119, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2131,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3035, 514, 0, 139, 119, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2135,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3298, 380, 0, 137, 119, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2136,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3367, 380, 0, 139, 119, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2137,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5021, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2140,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5021, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2141,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4000, 676.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2142,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4345, 676.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2144,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4701, 676.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2145,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4909, 676.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2156,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4000, 587.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2157,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4345, 587.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2158,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4701, 587.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2159,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4909, 587.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2160,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5021, 676.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2161,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5021, 587.865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3662,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6166, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2139,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6511, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2149,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6867, 466, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2150,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6166, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2152,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6511, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2153,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6867, 377, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2154,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6166, 677, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2170,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6511, 677, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3663,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6867, 677, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3664,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6166, 588, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3666,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6511, 588, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3667,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6867, 588, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3668,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			4900320494083348,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[209.5, 664, 0, 507, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2171,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2172,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7099, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2173,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6529, 631, 0, 1101, 178, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2174,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6502, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				2175,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 564, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				2176,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4507.5, 522, 0, 1391, 424, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2178,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1242.5, 664, 0, 1061, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2180,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2661, 667, 0, 259, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2181,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2999, 513, 0, 205, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2182,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6525, 428, 0, 1096, 240, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2187,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1241, 570, 0, 784, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2018,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1239, 473, 0, 483, 104, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2019,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3333, 378, 0, 205, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2020,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			7747798891050907,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 618, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2188,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1231, 429, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2189,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2635, 618, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2190,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4039, 318, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2191,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4748, 314, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2193,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5097, 316, 0, 217, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2194,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6205, 317, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2196,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			2039890290843317,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 551, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				2197,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				2198,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			4325414976995017,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				2199,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				2200,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				2201,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2202,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2203,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2204,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			3121654184960702,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			2585856527321221,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			7616739205427732,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv16",
		6550,
		942,
		false,
		"Levels E",
		4361428814380573,
		[
		[
			"BG",
			0,
			4139841796903523,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				2654,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			7170685384732587,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2655,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2656,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				2657,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2658,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2659,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2660,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2661,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2662,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			1194122967745416,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 799, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2663,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 815, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2664,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 819, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2665,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 814, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2666,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 753, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2667,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 805, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2668,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 823, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2669,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 805, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2670,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 823, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2671,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			4265149864735806,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[141, 790, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2672,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6057, 479, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2673,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6183, 488, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2674,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2393, 595, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2675,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2770, 578, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2676,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2959, 453, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2678,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3427, 394, 0, 168.0330505371094, 70.84320831298828, 0, -1.570796370506287, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2679,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[63, 749, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2681,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[185, 766, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2682,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2356, 556, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2683,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2929, 420, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2684,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2847, 561, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2685,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3397, 423, 0, 33.15483093261719, 33.15483093261719, 0, -1.309948444366455, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2686,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2733, 544, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2687,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6111, 431, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2689,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6169, 489, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2690,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5956, 489, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2691,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3737, 794, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2694,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3686, 772, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2695,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3768, 760, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2696,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6505, 476, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2697,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6631, 485, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2698,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6559, 428, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2699,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6617, 486, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2700,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6404, 486, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2701,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 795, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2741,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1531, 756, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2782,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[691, 792, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2677,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[613, 751, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2688,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[735, 768, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2692,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			2335717081700813,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[4430, 664.0003662109375, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2708,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428, 632.0003662109375, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2709,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4844, 664.0003662109375, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2710,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4842, 632.0003662109375, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2711,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213, 664.0003662109375, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2712,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211, 632.0003662109375, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2713,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5831, 489, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2714,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5831, 517, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2715,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			8638156443180081,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6304, 452, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				2716,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			1105868042601147,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[144, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2718,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[418, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2719,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1570.3115234375, 979.0612182617188, 0, 120.8391418457031, 116.9157943725586, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2721,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1570.3115234375, 885.0612182617188, 0, 120.8391418457031, 116.9157943725586, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2723,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2489, 894, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2724,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5823, 776, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2725,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2697.258544921875, 536.0596923828125, 0, 104.6390609741211, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2730,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2799.258544921875, 536.0596923828125, 0, 110.0973129272461, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2731,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3518.492431640625, 184.3249969482422, 0, 378.988037109375, 136.3754577636719, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2733,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3518.492431640625, 394.3370056152344, 0, 378.988037109375, 136.3754577636719, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2734,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6172, 776, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2735,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5822.681640625, 716.652587890625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2736,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6171.681640625, 716.652587890625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2737,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5822.681640625, 584.652587890625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2738,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6171.681640625, 584.652587890625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2739,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428, 682, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2746,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428, 774, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2747,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3619.492431640625, 184.3249969482422, 0, 378.988037109375, 136.3754577636719, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2750,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3619.492431640625, 394.3370056152344, 0, 378.988037109375, 136.3754577636719, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2751,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6528, 776, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2754,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6527.681640625, 716.652587890625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2755,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6527.681640625, 584.652587890625, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2756,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[668, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2092,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2342.9755859375, 668.6410522460938, 0, 85.70770263671875, 82.92498016357422, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2105,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2426.492919921875, 668.6410522460938, 0, 85.70770263671875, 82.92498016357422, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2106,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2488.86083984375, 668.6410522460938, 0, 85.70770263671875, 82.92498016357422, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2107,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2697.258544921875, 642.97314453125, 0, 104.6390609741211, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2717,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2799.258544921875, 642.97314453125, 0, 110.0973129272461, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2720,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2697.258544921875, 737.7451171875, 0, 104.6390609741211, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2722,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2799.258544921875, 737.7451171875, 0, 110.0973129272461, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2726,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2697.258544921875, 819.637451171875, 0, 104.6390609741211, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2727,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2799.258544921875, 819.637451171875, 0, 110.0973129272461, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2729,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2667.966064453125, 894, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2108,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2843.545654296875, 536.0596923828125, 0, 104.6390609741211, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2752,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2945.545654296875, 536.0596923828125, 0, 110.0973129272461, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2753,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3031.946533203125, 536.0596923828125, 0, 110.0973129272461, 112.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2777,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3487.15478515625, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2728,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3666.15478515625, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2732,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428, 864.1983642578125, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2748,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428, 956.1983642578125, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2749,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4842.3935546875, 682, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2742,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4842.3935546875, 774, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2743,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4842.3935546875, 864, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2744,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4842.3935546875, 956, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2745,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213.05224609375, 682, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2778,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213.05224609375, 774, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2779,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213.05224609375, 864, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2783,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213.05224609375, 956, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3671,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			2704715591021507,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[403, 900.5, 0, 894, 149, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2757,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2758,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6784, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2759,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6348, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				2760,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 781, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				2761,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2749, 775.5, 0, 205, 376, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2771,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428, 796, 0, 100.57275390625, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2772,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6226, 679, 0, 1178, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2773,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4843, 796, 0, 100.57275390625, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2774,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5212, 796, 0, 100.57275390625, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2775,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1570, 901, 0, 119, 149, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2762,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2521, 901, 0, 439, 149, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2764,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2417, 668, 0, 232, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2763,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2865.37548828125, 535.0054931640625, 0, 437.249267578125, 108.0109252929688, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2765,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3570, 199.5, 0, 232, 759, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2766,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3574.5, 901, 0, 546, 149, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2767,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			568636489151856,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 833, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2776,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2861.724365234375, 486.9971008300781, 0, 422, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2780,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3461, 834, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2781,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6221, 526, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2784,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2515, 834, 0, 422, 22, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2740,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			5524830600874261,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160.4455718994141, 765.9008178710938, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				2785,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				2786,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			8141349008534265,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				2787,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				2788,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				2789,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2790,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2791,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2792,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			8737801738937331,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			2854882399751142,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			3359411109749762,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv17",
		5600,
		942,
		false,
		"Levels E",
		5405515905306987,
		[
		[
			"BG",
			0,
			280650562835503,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				2120,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			8517929062233596,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2121,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2122,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				2123,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2183,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2184,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2185,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2186,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2397,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			5090702670647027,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 789, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2398,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 805, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2399,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 809, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2400,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 804, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2401,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 743, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2402,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 795, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2403,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 813, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2404,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 795, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2405,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 813, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2406,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			9175651550192059,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 789, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2407,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1988, 661, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2410,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2732, 237, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2411,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1213, 185, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2412,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3449, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2414,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 748, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2416,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 765, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2417,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1951, 622, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2418,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2809, 220, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2420,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2421,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2695, 203, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2422,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1248, 152, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2423,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1180, 151, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2427,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5498, 255, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2429,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5447, 233, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2430,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5529, 221, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2431,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4386, 256, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2437,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4390, 236, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2438,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4721, 256, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2439,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4749, 235, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2440,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[807, 789, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2516,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[729, 748, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3712,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[851, 765, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3713,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[629, 360, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3714,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[551, 319, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3715,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[673, 336, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3716,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[451, 572, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3717,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[373, 531, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3718,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[495, 548, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3719,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368, 400, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3720,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2331, 361, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3721,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5192, 247, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2413,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5297, 247, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2415,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			104837873242185,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[4934, 276, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2443,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4935, 306, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2444,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4532, 277, 0, 93.5186767578125, 93.51866149902344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2447,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4533, 307, 0, 15.80311965942383, 72.43095397949219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2448,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			2005331569133419,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[5267, 222, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				2408,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			9879518707484041,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[144, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2455,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[472.6294860839844, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2456,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1621, 304, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2457,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[959.4677734375, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2460,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4458.912109375, 431.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2461,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1212.10009765625, 760.9597778320313, 0, 125.8732528686523, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2467,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4803.912109375, 431.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2469,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5159.912109375, 431.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2470,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5367.912109375, 431.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2471,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4458.912109375, 342.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2485,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4803.912109375, 342.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2486,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5159.912109375, 342.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2487,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5367.912109375, 342.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2488,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[831.861083984375, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2680,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1088.765014648438, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2693,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[877.793212890625, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2466,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[793.1754150390625, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2702,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[711.5008544921875, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2703,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[624.5863037109375, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2704,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[542.9117431640625, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2705,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[458.9214477539063, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2706,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[339.5556030273438, 576.4465942382813, 0, 99.68875122070313, 96.45211029052734, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3673,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[418.5792846679688, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2707,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[334.5889892578125, 655.4732666015625, 0, 89.64168548583984, 86.73124694824219, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3672,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[339.5556030273438, 487.7219848632813, 0, 99.68875122070313, 96.45211029052734, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3674,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[340, 404, 0, 99.68875122070313, 96.45211029052734, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3675,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[340, 315, 0, 99.68875122070313, 96.45211029052734, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3676,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[340, 223, 0, 99.68875122070313, 96.45211029052734, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3677,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[340, 134, 0, 99.68875122070313, 96.45211029052734, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3678,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[340, 49, 0, 99.68875122070313, 96.45211029052734, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3679,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1124, 436.0025634765625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3680,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1042, 436.0025634765625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3681,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[957, 436.0025634765625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3682,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[876, 436.0025634765625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3683,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[789, 436.0025634765625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3684,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[707, 436.0025634765625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3685,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[623, 436.0025634765625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3686,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[563, 436.3560791015625, 0, 89.64168548583984, 77.64650726318359, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3687,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1212.10009765625, 628.258544921875, 0, 125.8732528686523, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3688,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1212.10009765625, 494.3328552246094, 0, 125.8732528686523, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3689,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1212.10009765625, 359.243408203125, 0, 125.8732528686523, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3690,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1212.10009765625, 281.1393737792969, 0, 125.8732528686523, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3691,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1335.513305664063, 747.9556884765625, 0, 111.6142120361328, 131.4040679931641, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				3692,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1412.035278320313, 747.9556884765625, 0, 111.6142120361328, 131.4040679931641, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				3693,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1509.366821289063, 747.9556884765625, 0, 111.6142120361328, 131.4040679931641, 0, -1.570796370506287, 1, 0.5, 0.5, 0, 0, []],
				16,
				3694,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1750.28662109375, 304, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3695,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1621, -53, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3696,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1750, -53, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3697,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2100, 750.7979736328125, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2454,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1994, 750.7979736328125, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2458,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1888, 750.7979736328125, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2459,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2586.000732421875, 676.2344970703125, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2463,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2480.000732421875, 676.2344970703125, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2464,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2374.000732421875, 676.2344970703125, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				3698,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2368.320068359375, 468.6111145019531, 0, 100.9834823608398, 82.19264221191406, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3699,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2696, 809, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2489,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2772, 809, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2490,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2696, 459, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3700,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2772, 459, 0, 375.3572082519531, 136.3754577636719, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3701,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3463.51123046875, 334.3457946777344, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2462,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3386.654296875, 334.3457946777344, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2468,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3463.51123046875, 436.6966857910156, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2473,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3386.654296875, 436.6966857910156, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2475,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3463.51123046875, 539.2119750976563, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2477,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3386.654296875, 539.2119750976563, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2478,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3463.51123046875, 647.4164428710938, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2479,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3386.654296875, 647.4164428710938, 0, 111.6142120361328, 117.0000152587891, 0, 4.770000145981612e-007, 1, 0.5, 0.5, 0, 0, []],
				16,
				2480,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5614.912109375, 431.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2465,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5614.912109375, 342.911865234375, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2481,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4459, 639, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2482,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4804, 639, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2483,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5160, 639, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2484,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5368, 639, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3702,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4459, 550, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3703,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4804, 550, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3704,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5160, 550, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3705,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5368, 550, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3706,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5615, 639, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3707,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5615, 550, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3708,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			7880806617598342,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[599.5, 913, 0, 1287, 174, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2494,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2495,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5780, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2496,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5309, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				2498,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 781, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				2499,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3424, 490, 0, 182, 424, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2500,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1686, 237.5, 0, 259, 505, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2502,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1412, 749, 0, 323, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2503,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2733, 643, 0, 205, 750, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2507,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[645.5, 655, 0, 714, 85, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2501,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1210, 524, 0, 122, 629, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2505,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[338, 300.5, 0, 98, 694, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3491,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[855, 437, 0, 673, 76, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3492,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1995, 749, 0, 323, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2506,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2478, 676, 0, 314, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3493,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2369.5, 469, 0, 100, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3494,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5009, 490, 0, 1476, 424, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3495,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			8235048045046638,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 836, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2508,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[904, 834, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2509,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1994, 700, 0, 295, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2510,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2475.611083984375, 626.2438354492188, 0, 313.4607543945313, 19.80471038818359, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2511,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3423.4482421875, 283.3462524414063, 0, 184.29736328125, 17.591552734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2512,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4440.8994140625, 283.505859375, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2513,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4797.8994140625, 283.505859375, 0, 217, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2514,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5440.8994140625, 283.505859375, 0, 249, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2515,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[708, 621, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3709,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[908, 407, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3710,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1419.191040039063, 701.2354125976563, 0, 289.5379638671875, 21.65519332885742, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3711,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			2147982713297916,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 768, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				2517,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				2518,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			1409109427815199,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				2519,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				2520,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				2521,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2522,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2523,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2524,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			3384281315584643,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			7477409501326889,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			9571528411274067,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv18",
		6550,
		942,
		false,
		"Levels E",
		2812798491197372,
		[
		[
			"BG",
			0,
			6682043509871944,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				2441,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			4263095486649083,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2442,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2445,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				2446,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2449,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2450,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2451,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2452,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2497,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			9468057848206342,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 795, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2504,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 811, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2525,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 815, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2526,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 810, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2527,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 749, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2528,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 801, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2529,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 819, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2530,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 801, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2531,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 819, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2532,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			3910913091688079,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[124, 782, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2533,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6044, 468, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2534,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6170, 477, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2535,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2002, 463, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2536,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2732, 236, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2537,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1220, 463, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2538,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2897, 899, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2539,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3648, 514, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2540,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4010, 509, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2541,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[46, 741, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2542,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[168, 758, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2543,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1965, 424, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2544,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2867, 866, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2545,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2809, 219, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2546,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3619, 484, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2547,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2695, 202, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2548,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1255, 430, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2549,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6098, 420, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2550,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6156, 478, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2551,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5943, 478, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2552,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1187, 429, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2553,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3974, 481, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2554,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6472, 475, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2558,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6598, 484, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2559,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6526, 427, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2560,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6584, 485, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2561,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6371, 485, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2562,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3422, 900, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2563,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3426, 880, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2564,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			2005851907380926,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[984.7576904296875, 598.8541259765625, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2567,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[984.7576904296875, 626.8541259765625, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2568,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4429.515625, 546.8255615234375, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2648,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4427.515625, 514.8255615234375, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2649,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4844, 547, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2650,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4842, 515, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2651,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5213, 547, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2626,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211, 515, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2646,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5831, 489, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2569,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5831, 517, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2570,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			729834393277008,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6304, 458, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				2571,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			2348455704180523,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[162, 892, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2573,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[515, 893, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2574,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[885.9519653320313, 672.878662109375, 0, 91.40532684326172, 88.4376220703125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2578,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5822, 776, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2580,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682.149658203125, 326.3827514648438, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2585,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784.149658203125, 326.3827514648438, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2586,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3953, 823, 0, 375.3572082519531, 136.3754577636719, 0, 1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2587,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6171, 776, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2590,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5822, 716, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2591,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6171, 716, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2592,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5822, 584, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2593,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6171, 584, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2594,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428.8388671875, 565.7118530273438, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2599,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428.8388671875, 629.4794311523438, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2600,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6527, 776, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2609,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6527, 716, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2610,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6527, 584, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2611,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[966.0366821289063, 673.31005859375, 0, 91.40532684326172, 88.4376220703125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2409,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1210.5673828125, 664.2213745117188, 0, 351.0685119628906, 127.5508499145508, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2419,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2370.208984375, 470.488525390625, 0, 101, 76, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2426,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1899.471435546875, 554.6676635742188, 0, 329.1890258789063, 119.6015548706055, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2424,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682.149658203125, 431.0847473144531, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2425,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784.149658203125, 431.0847473144531, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2428,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682.149658203125, 532.6777954101563, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2432,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784.149658203125, 532.6777954101563, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2433,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682.149658203125, 632.374267578125, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2434,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784.149658203125, 632.374267578125, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2435,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682.149658203125, 742.5919799804688, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2436,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784.149658203125, 742.5919799804688, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2453,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682.149658203125, 853.361572265625, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2472,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784.149658203125, 853.361572265625, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2474,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3263.1259765625, 30.20767211914063, 0, 131, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2492,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3388.4228515625, 30.20767211914063, 0, 132.5154876708984, 137.4153442382813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2493,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3263.1259765625, 151.4564819335938, 0, 131, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2572,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3388.4228515625, 151.4564819335938, 0, 132.5154876708984, 137.4153442382813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2575,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3263.1259765625, 269.2410888671875, 0, 131, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2576,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3388.4228515625, 269.2410888671875, 0, 132.5154876708984, 137.4153442382813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2577,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3263.1259765625, 383.5614013671875, 0, 131, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2581,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3388.4228515625, 383.5614013671875, 0, 132.5154876708984, 137.4153442382813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2582,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3263.1259765625, 511.7387084960938, 0, 131, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2584,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3388.4228515625, 511.7387084960938, 0, 132.5154876708984, 137.4153442382813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2607,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3263.1259765625, 638.7612915039063, 0, 131, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2608,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3388.4228515625, 638.7612915039063, 0, 132.5154876708984, 137.4153442382813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3722,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3263.1259765625, 769.2481689453125, 0, 131, 137, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3723,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3388.4228515625, 769.2481689453125, 0, 132.5154876708984, 137.4153442382813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3724,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3004, 993, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3725,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3357, 994, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3726,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3717, 994, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3727,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682, 948, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2476,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2784, 948, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2491,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3502.580322265625, 786, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3728,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3598.31689453125, 786, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2601,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3673.89794921875, 786, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3729,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3612, 589.8482666015625, 0, 103.1594696044922, 97.52198791503906, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3730,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3708, 589.8482666015625, 0, 103.1594696044922, 97.52198791503906, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3731,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3784, 589.8482666015625, 0, 103.1594696044922, 97.52198791503906, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3732,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3860.298828125, 589.8482666015625, 0, 103.1594696044922, 97.52198791503906, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3733,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3936.298828125, 589.8482666015625, 0, 103.1594696044922, 97.52198791503906, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3734,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4022.139404296875, 589.8482666015625, 0, 103.1594696044922, 97.52198791503906, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3735,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3997.6875, 821.0006103515625, 0, 375, 145, 0, -1.570796370506287, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2579,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428.8388671875, 724.1390380859375, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2583,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428.8388671875, 790.0218505859375, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2588,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4843, 566, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2589,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4843, 629, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2597,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4843, 724, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2598,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4843, 790, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2602,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211.3681640625, 565.3682861328125, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2603,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211.3681640625, 628.3682861328125, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2604,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211.3681640625, 723.3682861328125, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2605,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211.3681640625, 789.3682861328125, 0, 103.1594696044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2606,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			3961945914584479,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[326, 881, 0, 740, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2612,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2613,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6784, 358, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2614,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6348, 306, 0, 93, 687, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				2615,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 781, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				2616,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3325.5, 397.5, 0, 253, 871, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2617,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2733, 643, 0, 205, 750, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2620,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[924.5, 671, 0, 169, 85, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2621,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1210, 666.5, 0, 122, 344, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2622,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1899, 552, 0, 323, 110, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2625,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2369.5, 469, 0, 100, 79, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2627,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3978.5, 851.5, 0, 185, 481, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2628,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3341.5, 1008, 0, 1094, 159, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2618,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3563, 783, 0, 323, 93, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2619,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3817, 589, 0, 513, 93, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2623,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4428.2138671875, 679, 0, 100.57275390625, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2624,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6226, 679, 0, 1178, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2647,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4843.0400390625, 679, 0, 100.57275390625, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2652,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5212, 679, 0, 100.57275390625, 322, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2653,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			1869524991069715,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[217, 835, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2629,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[924.3711547851563, 632.9498291015625, 0, 173.3683776855469, 12.96660995483398, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2630,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1854.660400390625, 499.993896484375, 0, 238.238037109375, 17.2691650390625, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2631,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3072, 937, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2632,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3719, 932.9632568359375, 0, 209.015380859375, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2633,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3916.037109375, 546.5284423828125, 0, 319.2146606445313, 17.56289863586426, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2634,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5747.80419921875, 523.4357299804688, 0, 217, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2635,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6196, 527, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2637,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1209.018676757813, 497.845703125, 0, 129.8153991699219, 13.53994369506836, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2595,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3586.034423828125, 738.6930541992188, 0, 253.1376953125, 15.864013671875, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2596,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			7791819846288229,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160.4455718994141, 765.9008178710938, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				2638,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				2639,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			238762080146875,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				2640,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				2641,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				2642,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2643,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2644,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2645,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			9381659682971765,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			7906592851813208,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			1761483160210391,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv19",
		6650,
		942,
		false,
		"Levels E",
		8107882748100652,
		[
		[
			"BG",
			0,
			5380108470833285,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				2768,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			6110569835033483,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 432, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2769,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 577, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2770,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 497, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				2793,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 511, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2794,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 559, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2795,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 467, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2796,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 567, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2797,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 350, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2798,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			1904689259546613,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[243, 783, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2799,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[776, 800, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2800,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1679, 804, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2801,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2105, 799, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2802,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2641, 738, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2803,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3644, 790, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2804,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4217, 808, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2805,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5499, 790, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2806,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6362, 808, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2807,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			341250991767683,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 749, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2808,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6330, 751, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2809,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6456, 760, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2810,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1203, 287, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2811,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1793, 760, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2812,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1688, 543, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2813,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4527, 596, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2815,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4839, 762, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2816,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 708, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2817,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 725, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2818,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1166, 248, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2819,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1870, 743, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2821,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4498, 566, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2822,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1756, 726, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2823,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 510, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2824,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6384, 703, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2825,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6442, 761, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2826,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6229, 761, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2827,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 509, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2828,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4803, 734, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				2829,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[634, 345, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2881,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[597, 306, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2882,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[777, 552, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2883,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[740, 513, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2885,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[503, 759, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2886,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[466, 720, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2887,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2750, 758, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2890,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2827, 741, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2891,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2713, 724, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				2892,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3082, 590, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3770,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3159, 573, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3771,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3045, 556, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3772,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			9602921766311137,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1167, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2842,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1167, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2843,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4038, 828, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2844,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4036, 790.60498046875, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2845,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3312, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2902,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3312, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2905,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3402, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2906,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3402, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2907,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3494, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2908,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3494, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2909,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3837, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2910,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3837, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2911,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3921, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2934,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3921, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2935,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4271, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2936,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4271, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2937,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4355, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2938,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4355, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2939,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4161, 828, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2940,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4159, 790.60498046875, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2941,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3616, 828, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2942,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3614, 789.7111206054688, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2943,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3739, 828, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2944,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3737, 789.7111206054688, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2945,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2952, 762, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2846,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2952, 790, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2847,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[977, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2848,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[977, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2849,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[441, 556, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2946,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[441, 584, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2947,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1057, 290, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2948,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1057, 318, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2949,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1372, 429, 0, 81.09866333007813, 81.09866333007813, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				2950,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1372, 401, 0, 15.52919387817383, 71.17547607421875, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				2951,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5046, 757, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				2952,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5046, 785, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				2953,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5694.58642578125, 825.2688598632813, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				2954,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5692.58642578125, 790.1220703125, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				2955,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			6805624198829265,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6303, 731, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				2852,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			4382962896493807,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[153.5372161865234, 867.4208374023438, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2854,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[507, 868, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2855,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[799.6298217773438, 631.068359375, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2858,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3073.941650390625, 710.49072265625, 0, 168.5437469482422, 173.8619537353516, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2866,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3186.53076171875, 710.49072265625, 0, 161, 174, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2867,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5692.60205078125, 842.4130859375, 0, 105.1204071044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2876,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5692.60205078125, 933.4130859375, 0, 105.1204071044922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2877,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3820.334716796875, 869.4282836914063, 0, 429.888427734375, 156.1878204345703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2884,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[880, 868, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2555,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1262, 868, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2556,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1641, 868, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2557,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2015, 868, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2565,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[711.37548828125, 631.068359375, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2566,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[624.3714599609375, 631.068359375, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2636,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[538.6353149414063, 631.068359375, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2865,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[450.3777465820313, 631.068359375, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3736,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[367.6534423828125, 618.0570678710938, 0, 104.6390609741211, 114.8066558837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3737,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[319, 618, 0, -103, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3738,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[368, 521, 0, 104.6390609741211, 114.8066558837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3739,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[319, 521, 0, -103, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3740,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[368, 411.3258666992188, 0, 104.6390609741211, 114.8066558837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3741,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[319, 411.3258666992188, 0, -103, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3742,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[368, 303.485595703125, 0, 104.6390609741211, 114.8066558837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3743,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[319, 303.485595703125, 0, -103, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3744,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[368, 201.9217376708984, 0, 104.6390609741211, 114.8066558837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3745,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[319, 201.9217376708984, 0, -103, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3746,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[368, 95.29724884033203, 0, 104.6390609741211, 114.8066558837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3747,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[319, 95.29724884033203, 0, -103, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3748,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[368, -13.6123046875, 0, 104.6390609741211, 114.8066558837891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3749,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[319, -13.6123046875, 0, -103, 115, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3750,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[878.85009765625, 420.4801940917969, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2888,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[790.5957641601563, 420.4801940917969, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2889,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[703.5917358398438, 420.4801940917969, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3751,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[617.8555908203125, 420.4801940917969, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3752,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[965.2176513671875, 420.4801940917969, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3753,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1068.426025390625, 385.1261596679688, 0, -126.4429931640625, 131.6719055175781, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3754,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1068.426025390625, 505.9963989257813, 0, -126.4429931640625, 131.6719055175781, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3755,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1068.426025390625, 624.2705078125, 0, -126.4429931640625, 131.6719055175781, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3756,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1068.426025390625, 732.1146240234375, 0, -126.4429931640625, 131.6719055175781, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3757,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1435.416748046875, 365.2916259765625, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3758,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1347.416748046875, 365.2916259765625, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3759,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1260.416748046875, 365.2916259765625, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3760,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1174.416748046875, 365.2916259765625, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3761,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1591.343383789063, 365, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3762,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1503.343383789063, 365, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3763,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1972, 493, 0, 343, 121, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2853,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1972, 378, 0, 343, 121, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2857,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1972, 263, 0, 343, 121, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2859,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1972, 149, 0, 343, 121, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2862,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1972, 36, 0, 343, 121, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2863,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1610.843627929688, 617.5377807617188, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3764,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1522.843627929688, 617.5377807617188, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3765,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1435.843627929688, 617.5377807617188, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3766,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1349.843627929688, 617.5377807617188, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3767,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1766.843627929688, 617.5377807617188, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3768,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1678.843627929688, 617.5377807617188, 0, 92.31976318359375, 89.32236480712891, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3769,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1972, 603.3001708984375, 0, 343, 121, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2856,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6432, 869, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2861,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6806, 869, 0, 394.3659057617188, 157.7334899902344, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2871,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3418, 869, 0, 429.888427734375, 156.1878204345703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2860,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3051, 869, 0, 429.888427734375, 156.1878204345703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2868,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2898.88671875, 869, 0, 429.888427734375, 156.1878204345703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2869,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4485.193359375, 710, 0, 168.5437469482422, 173.8619537353516, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2870,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4598.193359375, 710, 0, 161, 174, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				2872,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4640, 869, 0, 429.888427734375, 156.1878204345703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2864,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4237, 869, 0, 429.888427734375, 156.1878204345703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2873,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4862, 869, 0, 429.888427734375, 156.1878204345703, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2874,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			4988849255372559,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1081.5, 886.5, 0, 2251, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2893,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2894,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6784, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2895,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6348, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				2896,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 752, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				2897,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[631, 630, 0, 426, 85, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2900,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1070, 618, 0, 122, 595, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2901,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[345, 264, 0, 148, 818, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2929,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[806.5, 419, 0, 467, 85, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2930,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1970, 288, 0, 339, 745, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2931,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1352, 364.0829162597656, 0, 566, 85, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2932,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1577, 617, 0, 544, 85, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2933,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3879, 887, 0, 2385, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2898,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3127, 720, 0, 270, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2899,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4538, 720, 0, 270, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2903,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5692.3603515625, 887, 0, 103.61767578125, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2904,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6676.5, 887, 0, 884, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				2956,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			7656670079552307,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 799, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2912,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[708, 800, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2913,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2103, 798, 0, 205, 23, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2914,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1398, 330, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2915,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3127.839599609375, 631.51708984375, 0, 270.26416015625, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2916,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4851, 799, 0, 319.2146606445313, 20.16824531555176, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2917,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4539.21630859375, 631, 0, 269.318359375, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2918,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6919, 797, 0, 249, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2919,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6466, 802, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2920,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[653, 596, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2875,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[829, 385, 0, 361, 27, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2878,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1452, 799, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2879,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1593, 581, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				2880,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			9603826338316252,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 737, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				2921,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				2922,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			9709892224885986,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				2923,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				2924,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				2925,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2926,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2927,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				2928,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			6048995587906201,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			2687458162597714,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			1150932125233675,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv20",
		6650,
		942,
		false,
		"Levels E",
		3411487050967079,
		[
		[
			"BG",
			0,
			4092211438434688,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				2957,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			717907688916907,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 292, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2958,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 437, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2959,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 357, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				2960,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 371, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2961,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 419, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				2962,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 327, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2963,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 427, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2964,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 210, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				2965,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			6671658977218447,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 791, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2966,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 807, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2967,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 811, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2968,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 806, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2983,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 745, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2984,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 797, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2985,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 815, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2986,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 797, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2987,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 815, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				2988,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			6592339589245236,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[141, 749, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2989,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6347, 527, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2990,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6473, 536, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2991,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1402, 573, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2992,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2213, 390, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2993,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1687.81396484375, 581.3275146484375, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2994,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3702, 588, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2995,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3054, 628, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2996,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3958, 435, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				2997,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[63, 708, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2998,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[185, 725, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				2999,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1365, 534, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3000,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3672, 555, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3001,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2290, 373, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3002,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3025, 598, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3003,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2176, 356, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3004,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1723, 548, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3005,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6401, 479, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3006,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6459, 537, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3007,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6246, 537, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3008,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1655, 547, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3009,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3922, 407, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3010,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5505.06396484375, 532.53662109375, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3011,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5454.06396484375, 510.53662109375, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3012,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5536.06396484375, 498.53662109375, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3013,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4640.0673828125, 382.7946166992188, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3019,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4644.0673828125, 362.7946166992188, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3020,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			158090918021576,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1195, 768, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3023,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1195, 796, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3024,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1533, 578, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3047,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1533, 606, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3048,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1659, 463, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3049,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1659, 491, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3050,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1741, 463, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3051,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1741, 491, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3052,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1998, 565, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3053,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1998, 593, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3054,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2309, 396, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3055,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2309, 424, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3056,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2393, 396, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3057,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2393, 424, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3058,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2677, 519, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3110,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2677, 547, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3111,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2751, 697, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3112,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2751, 725, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3114,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2832, 697, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3115,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2832, 725, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3116,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2914, 697, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3117,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2914, 725, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3118,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3239, 620, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3119,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3239, 648, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3138,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3155, 620, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3139,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3155, 648, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3140,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3462, 503, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3141,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3462, 531, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3142,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3378, 503, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3143,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3378, 531, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3144,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3810, 589, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3145,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3810, 617, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3146,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3605, 589, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3147,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3605, 617, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3148,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4110.72509765625, 435.6446838378906, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3149,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4110.72509765625, 463.6446838378906, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3150,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4463, 383, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3039,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4463, 411, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3040,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4542, 383, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3151,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4542, 411, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3152,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4739, 516, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3153,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4739, 544, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3154,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4812, 516, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3155,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4812, 544, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3156,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4893, 516, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3157,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4893, 544, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3158,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4976, 516, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3159,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4976, 544, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3160,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5187, 366, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3161,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5187, 394, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3162,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5396, 537, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3163,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5396, 565, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3164,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4277.443359375, 280.0905151367188, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3027,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4277.443359375, 308.0905151367188, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3028,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5104.0849609375, 366, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3041,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5104.0849609375, 394, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3042,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			7535895616985882,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6305, 509, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				3063,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			6051818717984012,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1397.516967773438, 757.4830322265625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3064,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[169.6877746582031, 869.0528564453125, 0, 426.5556030273438, 154.9769592285156, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3065,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[578, 869, 0, 426.5556030273438, 154.9769592285156, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3066,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1519.919555664063, 757.4830322265625, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3068,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1397.516967773438, 663.4830322265625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3069,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1519.919555664063, 663.4830322265625, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3070,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6422.75146484375, 887.6932983398438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3072,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6771.75146484375, 887.6932983398438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3082,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6422.75146484375, 775.6932983398438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3083,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6771.75146484375, 775.6932983398438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3084,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6422.75146484375, 643.6932983398438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3085,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6771.75146484375, 643.6932983398438, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3086,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1312.391723632813, 869, 0, 426.5556030273438, 154.9769592285156, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2814,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1452.785034179688, 757.4830322265625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2830,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1452.785034179688, 663.4830322265625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2831,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1474.326416015625, 869, 0, 426.5556030273438, 154.9769592285156, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				2820,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1629.654541015625, 654.633056640625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2832,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1804.166748046875, 654.633056640625, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2833,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1629.654541015625, 549.7266845703125, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2834,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1804.166748046875, 549.7266845703125, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2835,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1719.987548828125, 654.633056640625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2836,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1719.987548828125, 549.7266845703125, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2837,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1911.575439453125, 754.4805297851563, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2838,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2086.087646484375, 754.4805297851563, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2839,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1911.575439453125, 649.5741577148438, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2840,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2086.087646484375, 649.5741577148438, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2841,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2001.908447265625, 754.4805297851563, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2850,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2001.908447265625, 649.5741577148438, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				2851,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2197.27294921875, 584.154052734375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3067,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2371.78515625, 584.154052734375, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3073,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2197.27294921875, 479.2476806640625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3074,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2371.78515625, 479.2476806640625, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3076,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2287.60595703125, 584.154052734375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3773,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2287.60595703125, 479.2476806640625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3774,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2480.029541015625, 710.8505859375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3775,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2654.541748046875, 710.8505859375, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3776,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2480.029541015625, 605.9442138671875, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3777,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2654.541748046875, 605.9442138671875, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3778,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2570.362548828125, 710.8505859375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3779,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2570.362548828125, 605.9442138671875, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3780,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2764.048095703125, 889.4390258789063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3099,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2938.048095703125, 889.4390258789063, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3100,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2764.048095703125, 784.4390258789063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3781,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2938.048095703125, 784.4390258789063, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3782,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2854.048095703125, 889.4390258789063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3783,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2854.048095703125, 784.4390258789063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3784,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3050.091064453125, 816.9764404296875, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3785,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3224.091064453125, 816.9764404296875, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3786,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3050.091064453125, 711.9764404296875, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3787,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3224.091064453125, 711.9764404296875, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3788,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3140.091064453125, 816.9764404296875, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3789,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3140.091064453125, 711.9764404296875, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3790,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3334.229248046875, 688.8599243164063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3077,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3508.229248046875, 688.8599243164063, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3078,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3334.229248046875, 583.8599243164063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3791,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3508.229248046875, 583.8599243164063, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3792,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3424.229248046875, 688.8599243164063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3793,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3424.229248046875, 583.8599243164063, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3794,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3621.3173828125, 777.9642944335938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3795,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3795.3173828125, 777.9642944335938, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3796,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3621.3173828125, 672.9642944335938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3797,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3795.3173828125, 672.9642944335938, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3798,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3711.3173828125, 777.9642944335938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3799,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3711.3173828125, 672.9642944335938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3800,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3909, 624.7191162109375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3071,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4083, 624.7191162109375, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3075,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3909, 519.7191162109375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3079,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4083, 519.7191162109375, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3080,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3999, 624.7191162109375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3081,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3999, 519.7191162109375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3089,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4194.408203125, 467.1206970214844, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3090,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4368.408203125, 467.1206970214844, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3091,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4194.408203125, 362.1206970214844, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3092,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4368.408203125, 362.1206970214844, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3093,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4284.408203125, 467.1206970214844, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3094,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4284.408203125, 362.1206970214844, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3095,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4481.517578125, 570.562744140625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3096,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4655.517578125, 570.562744140625, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3097,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4481.517578125, 465.5627746582031, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3098,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4655.517578125, 465.5627746582031, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3801,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4571.517578125, 570.562744140625, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3802,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4571.517578125, 465.5627746582031, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3803,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4766.34375, 703.5170288085938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3804,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4940.34375, 703.5170288085938, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3805,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4766.34375, 598.51708984375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3806,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4940.34375, 598.51708984375, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3807,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4856.34375, 703.5170288085938, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3808,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4856.34375, 598.51708984375, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3809,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5054.046875, 553.7439575195313, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3810,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5228.046875, 553.7439575195313, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3811,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5054.046875, 448.7439575195313, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3812,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5228.046875, 448.7439575195313, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3813,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5144.046875, 553.7439575195313, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3814,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5144.046875, 448.7439575195313, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3815,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5341.677734375, 721.51220703125, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3087,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5515.677734375, 721.51220703125, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3088,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5341.677734375, 616.51220703125, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3816,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5515.677734375, 616.51220703125, 0, 113, 109, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3817,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5431.677734375, 721.51220703125, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3818,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5431.677734375, 616.51220703125, 0, 112.8470458984375, 109.1831817626953, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3819,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			7073311377275741,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[373, 886.5, 0, 834, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3104,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3105,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6784, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3106,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6348, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				3107,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 752, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				3108,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1458.613525390625, 708.6215209960938, 0, 236.2270965576172, 199.7569427490234, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3113,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6676.5, 778.5, 0, 884, 404, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3120,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1392, 887, 0, 582, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3109,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1717, 616, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3025,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1999, 716, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3026,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2284, 545, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3029,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2567, 673, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3030,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2853, 851, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3031,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3136, 777, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3032,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3422, 651, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3033,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3709, 737, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3034,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3995, 586, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3035,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4281, 429, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3036,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4568, 532, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3037,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4853, 666, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3038,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5141, 515, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3045,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5428, 683, 0, 285, 241, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3046,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			3944563848350301,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[179, 802.522705078125, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3121,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6465, 583, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3129,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			2190049697627693,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 737, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				3130,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				3131,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			5202688283478741,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				3132,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				3133,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				3134,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3135,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3136,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3137,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			6471114319051246,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			6014945124009378,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			4408223001555377,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv21",
		7250,
		942,
		false,
		"Levels E",
		4146571492135325,
		[
		[
			"BG",
			0,
			9853135168590057,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				3043,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			3045536206912023,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3044,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3059,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3060,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3061,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3062,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3165,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3166,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6461, 220, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3167,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5815, 439, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3014,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7144, 487, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3015,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			4131625234201348,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 791, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3168,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 808, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3169,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 812, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3170,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 807, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3171,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 746, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3172,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 798, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3173,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 816, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3174,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 798, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3175,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 816, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3176,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			9620743181599891,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 753, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3177,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6734, 747, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3178,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6860, 756, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3179,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1904, 579, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3180,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3081, 589, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3181,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[871.6246948242188, 763.3793334960938, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3182,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3393, 764, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3183,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3449, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3184,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4062, 760, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3185,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 712, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3186,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 729, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3187,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1867, 540, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3188,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3363, 731, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3189,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3158, 572, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3190,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3191,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3044, 555, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3192,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[907.6246948242188, 730.3793334960938, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3193,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6788, 699, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3194,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6846, 757, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3195,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6633, 757, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3196,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[839.6246948242188, 729.3793334960938, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3197,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4025, 733, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3198,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7190, 747, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3202,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7316, 756, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3203,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7244, 699, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3204,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7302, 757, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3205,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7089, 757, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3206,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3741, 768, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3207,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3745, 748, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3208,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4582, 768, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3209,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4610, 747, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3210,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4585, 573, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3315,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4548, 546, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3820,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5211, 475, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3821,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5174, 448, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3822,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			267528893185716,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[5037, 762, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3247,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5037, 790, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3248,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5807, 825, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3249,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5805, 793, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3250,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3231, 595, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3213,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3231, 623, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3214,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3502, 444, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3217,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3502, 472, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3218,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3772, 306, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3219,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3772, 334, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3220,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1830, 760, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3221,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1830, 788, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3222,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1748, 760, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3223,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1748, 788, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3224,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1663, 760, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3225,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1663, 788, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3226,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			8667638959661392,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6893, 741, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				3251,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			2620393312789272,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1904.359619140625, 758.3659057617188, 0, 98.35009765625, 98.46650695800781, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3252,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[168.4227600097656, 869.49560546875, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3253,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[876.576416015625, 965.4571533203125, 0, 136, 126, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3256,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1904.359619140625, 664.3659057617188, 0, 98, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3257,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[876.576416015625, 856.6537475585938, 0, 136, 126, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3258,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3059.517822265625, 802.5949096679688, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3265,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3192.9033203125, 802.5949096679688, 0, 146.2417297363281, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3266,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4537.78369140625, 640.7421264648438, 0, 80.02397155761719, 77.42578887939453, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3275,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[314, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3016,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1596.388427734375, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3017,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1745.1689453125, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3018,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2897, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3021,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3289, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3022,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3694, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3101,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4105, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3102,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4515, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3103,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4894, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3122,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3059.517822265625, 688.4403076171875, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3123,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3192.9033203125, 688.4403076171875, 0, 146.2417297363281, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3124,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3329.706298828125, 600.1709594726563, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3125,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3463.091796875, 600.1709594726563, 0, 146.2417297363281, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3126,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3329.706298828125, 535.3010864257813, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3127,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3463.091796875, 535.3010864257813, 0, 146.2417297363281, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3128,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3598.82421875, 462.2300109863281, 0, 135, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3211,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3732.82421875, 462.2300109863281, 0, 145.8446502685547, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3212,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3598.82421875, 397.2300109863281, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3239,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3732.82421875, 397.2300109863281, 0, 145.6029205322266, 124.5405731201172, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3240,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 166.0390167236328, 0, 135, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3254,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4429, 166.0390167236328, 0, 145.8446502685547, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3255,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 49.92756652832031, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3259,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4429, 49.92756652832031, 0, 145.6029205322266, 124.5405731201172, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3261,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 396.458984375, 0, 135, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3262,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4429, 396.458984375, 0, 145.8446502685547, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3263,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 280.3475341796875, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3264,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4429, 280.3475341796875, 0, 145.6029205322266, 124.5405731201172, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3267,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 617.6632690429688, 0, 135, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3268,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4429, 617.6632690429688, 0, 145.8446502685547, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3269,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 501.5518188476563, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3277,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4429, 501.5518188476563, 0, 145.6029205322266, 124.5405731201172, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3278,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4612.2744140625, 640.7421264648438, 0, 80.02397155761719, 77.42578887939453, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3276,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4689.34521484375, 640.7421264648438, 0, 80.02397155761719, 77.42578887939453, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3279,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4766.27587890625, 640.7421264648438, 0, 80.02397155761719, 77.42578887939453, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3280,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4806.31103515625, 640.7421264648438, 0, 80.02397155761719, 77.42578887939453, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3281,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4873.12939453125, 640.7421264648438, 0, 80.02397155761719, 77.42578887939453, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3282,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6824.970703125, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3260,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7203.970703125, 869, 0, 424.0343017578125, 154.0609130859375, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3270,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5130.03369140625, 685.1282958984375, 0, 135, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3271,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5264.03369140625, 685.1282958984375, 0, 145.8446502685547, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3272,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5130.03369140625, 569.1282958984375, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3273,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5264.03369140625, 569.1282958984375, 0, 145.6029205322266, 124.5405731201172, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3274,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5130.03369140625, 918.8162841796875, 0, 135, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3283,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5264.03369140625, 918.8162841796875, 0, 145.8446502685547, 125, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3284,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5130.03369140625, 802.8162841796875, 0, 135.3970794677734, 125.4594268798828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3285,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5264.03369140625, 802.8162841796875, 0, 145.6029205322266, 124.5405731201172, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3286,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5804.69189453125, 938.293701171875, 0, 104.5078125, 98.46650695800781, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3287,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5804.69189453125, 844.293701171875, 0, 104.15771484375, 104, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3288,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			2380875845446343,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[238.5, 886.5, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3292,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3293,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7375, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3294,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6939, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				3295,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 752, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				3296,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3879, 887, 0, 2385, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3304,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3127, 720, 0, 270, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3305,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5199, 742, 0, 270, 467, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3306,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5805, 887, 0, 103.61767578125, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3307,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7055, 887, 0, 881, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3308,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[876, 887, 0, 133, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3297,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1670.5, 887, 0, 572, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3298,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1903.5, 709, 0, 98, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3299,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3397, 566, 0, 270, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3300,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3667, 429, 0, 270, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3301,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4363, 360, 0, 270, 628, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3302,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4705, 640, 0, 416, 75, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3303,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			5471636429503283,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[176, 803, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3309,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1515.229614257813, 796.6845092773438, 0, 260, 16, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3310,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2920.537841796875, 801.6126098632813, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3312,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3101, 634, 0, 209.015380859375, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3313,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5200.025390625, 514.8394775390625, 0, 272.4990234375, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3316,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6853.94970703125, 802.0504150390625, 0, 458, 32, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3317,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3367, 479, 0, 209.015380859375, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3289,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3641, 340, 0, 209.015380859375, 22.16888427734375, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3290,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3728, 802, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3291,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4443, 802, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3311,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4705.2548828125, 609.4071044921875, 0, 408.66015625, 20.60955810546875, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3314,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			1565557514595754,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 737, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				3318,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				3319,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			1709957797914968,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				3320,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				3321,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				3322,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3323,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3324,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3325,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			9259012608831768,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			5262801945794642,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			1684016561136179,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv22",
		7250,
		942,
		false,
		"Levels E",
		4024284700674425,
		[
		[
			"BG",
			0,
			8905131261820335,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				3215,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			9739412169925469,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 362, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3216,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 507, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3227,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 427, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3228,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 441, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3229,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 489, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3230,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 397, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3231,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 497, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3232,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 280, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3233,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			1972744722209209,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 783, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3234,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 799, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3235,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 803, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3236,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 798, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3237,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 737, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3238,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 789, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3241,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 807, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3242,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 789, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3243,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 807, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3244,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			3088947221160735,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[121, 748, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3245,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6715, 748, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3246,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6841, 757, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3326,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2479, 341, 0, 183.3621978759766, 77.30601501464844, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3327,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2883, 337, 0, 192.3211364746094, 81.0831298828125, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3328,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1475, 598, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3329,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4165, 339, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3330,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3449, 583, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3331,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3987, 765, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3332,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[43, 707, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3333,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[165, 724, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3334,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2442, 302, 0, 40, 40, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3335,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4135, 306, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3336,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2960, 320, 0, 24, 24, 0, 0.4591928720474243, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3337,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3420, 553, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3338,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2846, 303, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3339,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1510, 565, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3340,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6769, 700, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3341,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6827, 758, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3342,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6614, 758, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3343,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1442, 564, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3344,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3951, 737, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3345,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7171, 748, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3349,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7297, 757, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3350,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7225, 700, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3351,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7283, 758, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3352,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7070, 758, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3353,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4951, 764, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3354,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4955, 744, 0, 35.49647903442383, 35.49647903442383, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3355,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			4042779627722168,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1049, 659, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3358,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1049, 687, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3359,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[822, 659, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3360,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[822, 687, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3361,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4653, 762, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3362,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4653, 790, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3363,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5807, 825, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3364,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5805, 793, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3365,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3284, 445, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3366,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3284, 473, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3367,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3502, 444, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3368,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3502, 472, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3369,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1593, 627, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3372,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1593, 655, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3373,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1343, 627, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3376,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1343, 655, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3377,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2097, 518.129150390625, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3371,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2097, 546.129150390625, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3374,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1855.940673828125, 518.129150390625, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3375,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1847, 546.129150390625, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3425,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1973, 554, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3426,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1971, 518.1654663085938, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3433,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2636, 407, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3434,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2634, 373.9276428222656, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3435,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2740, 364, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3454,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2740, 392, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3455,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3076, 364, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3456,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3076, 392, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3457,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4169, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3458,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4169, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3459,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4169, 575, 0, 81.09866333007813, 81.09866333007813, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				3460,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4169, 547, 0, 15.52919387817383, 71.17547607421875, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				3461,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4305, 826, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3462,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4303, 794, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3463,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4426, 826, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3464,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4424, 794, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3465,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4544, 826, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3466,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4542, 794, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3467,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			8927611130922213,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6893, 741, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				3378,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			3058803084638983,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[167.06689453125, 867.9966430664063, 0, 421.3319091796875, 153.0790710449219, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3380,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832.3368530273438, 718.2374877929688, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3384,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3313.42578125, 603.7604370117188, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3392,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3415.42578125, 603.7604370117188, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3393,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5805.41162109375, 843.7978515625, 0, 105.5598602294922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3402,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5805.41162109375, 934.7978515625, 0, 105.5598602294922, 99.81013488769531, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3403,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2451.6435546875, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3414,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2551.6435546875, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3415,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[316.4285278320313, 867.9966430664063, 0, 421.3319091796875, 153.0790710449219, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3199,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1029.280517578125, 718.2374877929688, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3200,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[930.2815551757813, 718.2374877929688, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3201,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1369.876586914063, 686.3880004882813, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3379,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1566.876586914063, 686.3880004882813, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3381,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1467.876586914063, 686.3880004882813, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3382,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1875.226318359375, 575.5103759765625, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3383,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2072.226318359375, 575.5103759765625, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3385,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1973.226318359375, 575.5103759765625, 0, 118.8953323364258, 115.0350952148438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				3388,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2649.20166015625, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3389,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2749.20166015625, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3391,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2844.033447265625, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3823,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2944.033447265625, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3824,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3042.662109375, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3825,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3142.662109375, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3826,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3210.552978515625, 431.8558959960938, 0, 104.6390609741211, 116.7118072509766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3827,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3481, 603.4795532226563, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3828,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3313.42578125, 531.9951171875, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3829,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3415.42578125, 531.9951171875, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3830,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3481, 531.7142333984375, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3831,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4085.17626953125, 868, 0, 421.3319091796875, 153.0790710449219, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3386,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4482.66064453125, 868, 0, 421.3319091796875, 153.0790710449219, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3394,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4867.6376953125, 868, 0, 421.3319091796875, 153.0790710449219, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3395,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6823, 869, 0, 421.3319091796875, 153.0790710449219, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3387,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7220, 869, 0, 421.3319091796875, 153.0790710449219, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3390,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 522.72607421875, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3396,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4196, 522.72607421875, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3397,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4262, 521.72607421875, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3398,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 450.72607421875, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3399,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4196, 450.72607421875, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3400,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4262, 450.72607421875, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3401,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 343, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3404,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4196, 343, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3405,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4262, 342, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3406,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 271, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3407,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4196, 271, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3408,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4262, 271, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3409,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 161, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3410,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4196, 161, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3411,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4262, 160, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3412,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, 89, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3413,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4196, 89, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3416,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4262, 89, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3417,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4094, -19, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3418,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4196, -19, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3832,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4262, -20, 0, 110.0973129272461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3833,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			3060829267264138,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[238.5, 886.5, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3419,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3420,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7375, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3421,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6939, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				3422,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 752, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				3423,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4474, 887, 0, 1195, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3424,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5805, 887, 0, 103.61767578125, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3427,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7055, 887, 0, 881, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3428,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[931, 718, 0, 315.8287658691406, 113.35888671875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3429,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3397, 566, 0, 270, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3432,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1469, 686, 0, 315.8287658691406, 113.35888671875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3430,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1974, 575, 0, 315.8287658691406, 113.35888671875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3431,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2830.5859375, 431, 0, 861, 113, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3453,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4180, 242, 0, 270, 673, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3370,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			2269601977644136,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 802, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3436,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2914.265869140625, 378.2758483886719, 0, 244, 16, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3439,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3400.529541015625, 478.1455078125, 0, 209.015380859375, 17.00192260742188, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3440,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4004.552734375, 798.1121215820313, 0, 251.9300689697266, 15.91714954376221, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3441,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4903.98388671875, 799.409912109375, 0, 317, 20, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3442,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6832.13232421875, 800.308349609375, 0, 403.3595581054688, 20.50565910339356, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3444,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			1257514919561955,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 737, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				3445,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				3446,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			2311467877564988,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				3447,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				3448,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				3449,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3450,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3451,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3452,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			6647672174890505,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			5188869943384558,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			8507319589395197,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv23",
		7250,
		942,
		false,
		"Levels E",
		4560557096675195,
		[
		[
			"BG",
			0,
			6630160089405814,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				3468,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			8818525852582644,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 212, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3469,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 357, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3470,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 277, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3471,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 291, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3472,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 339, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3473,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 247, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3474,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 347, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3475,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6391, 130, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3476,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			5692648994006426,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 793, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3477,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 810, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3478,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 814, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3479,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 809, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3480,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 732, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3481,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3482,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3483,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3484,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3485,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			1000645007615853,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 753, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3486,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7098, 591, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3487,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7224, 600, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3488,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3031, 601, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3496,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3723.42578125, 595.6082763671875, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3498,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4518, 597, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3499,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 712, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3500,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 729, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3501,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3694.42578125, 565.6082763671875, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3505,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3066, 568, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3507,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7152, 543, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3508,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7210, 601, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3509,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6997, 601, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3510,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2998, 567, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3511,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4481, 570, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3512,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6362, 604, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3513,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6311, 582, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3514,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6393, 570, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3515,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			6426749483886683,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[857, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3527,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[857, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3528,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1935, 827, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3545,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1933, 795, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3546,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5182, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3553,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5182, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3554,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3915, 390, 0, 81.09866333007813, 81.09866333007813, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				3555,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3915, 362, 0, 15.52919387817383, 71.17547607421875, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				3556,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4115, 664, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3557,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4113, 632, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3558,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5360, 662, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3559,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5358, 630, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3560,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5637, 662, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3561,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5635, 630, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3562,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1130, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3525,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1130, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3526,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1374, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3531,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1374, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3532,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1451, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3610,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1451, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3615,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1832, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3636,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1832, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3637,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2126, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3638,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2126, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3639,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2048, 827, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3640,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2046, 795, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3641,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1258, 827, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3537,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1256, 795, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3538,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[991, 827, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3539,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[989, 795, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3540,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2455, 827, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3541,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2453, 795, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3542,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3235, 603, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3543,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3235, 631, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3544,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4322, 390, 0, 81.09866333007813, 81.09866333007813, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				14,
				3533,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4322, 362, 0, 15.52919387817383, 71.17547607421875, 0, 3.141592741012573, 1, 0.5, 0.5, 0, 0, []],
				13,
				3534,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5460, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3535,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5460, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3536,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5762, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3551,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5762, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3552,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6484, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3642,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6484, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3643,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6678, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3644,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6678, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3645,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6790, 662, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3646,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6788, 630, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3647,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6912, 662, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3648,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6910, 630, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3649,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1746, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3650,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1746, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3651,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1535, 767, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3652,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1535, 795, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3653,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3153, 603, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3549,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3153, 631, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3550,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2344, 827, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3654,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2342, 795, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3655,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5460, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3547,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5460, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3548,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			1388849984563006,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 573, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				3563,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			3806461248114893,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[172.7436676025391, 870.6986694335938, 0, 433.2225952148438, 157.3992156982422, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3565,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3794, 294.197998046875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3571,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4139, 294.197998046875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3579,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4470, 294, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3580,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3794, 205.197998046875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3595,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4139, 205.197998046875, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3596,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4470, 205, 0, 375.3572082519531, 136.3754577636719, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3597,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3005.66796875, 688.9498901367188, 0, 104.6390609741211, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3599,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3111.0087890625, 688.9498901367188, 0, 115.3204574584961, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3600,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[310.7445068359375, 870.6986694335938, 0, 433.2225952148438, 157.3992156982422, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3346,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1037, 871, 0, 433.2225952148438, 157.3992156982422, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3347,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1455, 871, 0, 433.2225952148438, 157.3992156982422, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3348,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1876, 871, 0, 433.2225952148438, 157.3992156982422, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3356,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2298, 871, 0, 433.2225952148438, 157.3992156982422, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3357,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3213.008056640625, 688.9498901367188, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3437,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3692.946533203125, 688.3073120117188, 0, 115.3204574584961, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3438,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3759.518310546875, 688.3073120117188, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3443,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4082, 688, 0, 115.3204574584961, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3529,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4148, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3530,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4483, 688, 0, 115.3204574584961, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3566,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4553.10302734375, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3567,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5075.740234375, 688, 0, 115.3204574584961, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3572,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5184.76220703125, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3573,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5290.12255859375, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3574,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5396.3505859375, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3575,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502.70703125, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3576,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5608.69140625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3577,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5710.19287109375, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3578,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5785.0341796875, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3581,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6353.66650390625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3582,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6459.66650390625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3583,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6565.66650390625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3584,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6671.66650390625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3585,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6777.66650390625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3586,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6879.66650390625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3587,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6954.66650390625, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3588,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7035, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3589,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7141, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3590,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7247, 688, 0, 111.5084457397461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3591,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			8465450067137854,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[238.5, 886.5, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3604,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3605,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7375, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3606,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				3607,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 752, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				3608,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3111, 686, 0, 315.8287658691406, 113.35888671875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3614,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4134, 256.5, 0, 1059, 210, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3617,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1665.5, 887, 0, 1690, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3635,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3724.5859375, 686, 0, 179, 113, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3609,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4116, 686, 0, 179, 113, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3612,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4516, 686, 0, 179, 113, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3613,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5428, 686, 0, 819, 113, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3616,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6871, 686, 0, 1145, 113, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3611,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			2843651619801192,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[182, 802, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3618,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3047.10888671875, 633.6951904296875, 0, 188.841552734375, 14.6046142578125, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3622,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3724.93359375, 631.6478271484375, 0, 181.2200317382813, 13.92776679992676, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3623,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4516.84912109375, 633.72802734375, 0, 181.2200317382813, 13.92776679992676, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3564,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			5634493833599113,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 737, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				3627,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				3628,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			1680258800977794,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				3629,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				3630,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				3631,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3632,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3633,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3634,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			9306676379551158,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			4264949177141355,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			3311626972472027,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv24",
		7250,
		942,
		false,
		"Levels E",
		3916226316274411,
		[
		[
			"BG",
			0,
			5476266089273058,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				3489,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			4275129113892566,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 304, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3490,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 449, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3497,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 369, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3502,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 383, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3503,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 431, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3504,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 339, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3506,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 439, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3516,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 432, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3517,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 299, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3928,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 479, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3929,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			2054298142192911,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 793, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3518,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 810, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3519,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 814, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3520,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 809, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3521,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 732, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3522,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3523,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3524,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3568,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3569,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			3236617348621747,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 778.8431396484375, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3570,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6996, 783, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3592,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7122, 792, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3593,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[977, 790, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3594,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2429.49658203125, 406.1603393554688, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3598,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3868.0234375, 407.2408142089844, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3601,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 737.8431396484375, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3602,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 754.8431396484375, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3603,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2400.49658203125, 376.1603393554688, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3619,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1012, 757, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3620,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7050, 735, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3621,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7108, 793, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3624,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6895, 793, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3625,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[944, 756, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3626,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3831.0234375, 380.2408142089844, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3834,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5288, 789, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3835,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5237, 767, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3836,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 755, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3837,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1697, 598, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3921,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1686, 601, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3922,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1735, 564, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3923,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4578.13720703125, 595, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3924,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4541.13720703125, 568, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3925,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			619494778811449,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1091.305786132813, 788.5383911132813, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3840,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1091.305786132813, 816.5383911132813, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3841,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1199.1708984375, 846.95947265625, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3852,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1197.1708984375, 814.95947265625, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3853,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1316.476684570313, 788.5383911132813, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3854,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1316.476684570313, 816.5383911132813, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3855,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1434.319702148438, 846.95947265625, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3856,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1432.319702148438, 814.95947265625, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3857,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1551.62548828125, 788.5383911132813, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3858,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1551.62548828125, 816.5383911132813, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3859,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1809, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3862,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1809, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3863,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1916, 658, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3864,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1914, 626, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3865,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2034, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3868,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2034, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3869,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2152, 658, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3871,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2150, 626, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3872,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2269, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3873,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2269, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3886,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2529, 410.8467407226563, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3889,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2529, 438.8467407226563, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3890,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2636, 468.8467407226563, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3891,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2634, 436.8467407226563, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3892,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2754, 410.8467407226563, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3893,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2754, 438.8467407226563, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3941,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2872, 468.8467407226563, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3942,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2870, 436.8467407226563, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3944,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2989, 410.8467407226563, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3945,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2989, 438.8467407226563, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3946,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3188, 225, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3860,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3188, 253, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3861,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3295, 283, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3866,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3293, 251, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3867,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3413, 225, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3887,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3413, 253, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3888,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3531, 283, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3947,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3529, 251, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3948,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3648, 225, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4440,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3648, 253, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4441,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3999, 414, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4442,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3999, 442, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4443,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4106, 472, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4444,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4104, 440, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4445,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4224, 414, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4446,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4224, 442, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4447,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4342, 472, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4448,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4340, 440, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4449,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4459, 414, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4450,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4459, 442, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4451,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4699, 598.4244995117188, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4452,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4699, 626.4244995117188, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4453,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4806, 656.4244995117188, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4454,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4804, 624.4244995117188, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4455,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4924, 598.4244995117188, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4456,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4924, 626.4244995117188, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4457,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5042, 656.4244995117188, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4458,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5040, 624.4244995117188, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4459,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5159, 598.4244995117188, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4460,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5159, 626.4244995117188, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4461,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5425, 790.8074951171875, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3842,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5425, 818.8074951171875, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3843,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5532, 848.8074951171875, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3848,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5530, 816.8074951171875, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3849,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5650, 790.8074951171875, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3850,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5650, 818.8074951171875, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3851,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5768, 848.8074951171875, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3874,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5766, 816.8074951171875, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3875,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5885, 790.8074951171875, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3876,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5885, 818.8074951171875, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3877,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6322.81689453125, 849.8167724609375, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3879,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6320.81689453125, 817.8167724609375, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				3880,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			3595011819635274,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 776, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				3896,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			7562410999729328,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[147.6775817871094, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3897,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6321.47998046875, 876.3692016601563, 0, 121.9371566772461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3926,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[330.5933837890625, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3838,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1103, 937.92626953125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3839,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1430.346801757813, 937.92626953125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3881,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1103, 875.6254272460938, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3882,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1430.346801757813, 875.6254272460938, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3883,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1823, 746, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3884,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2150, 746, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3885,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1823, 684, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3894,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2150, 684, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3895,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2537.922607421875, 558.9537353515625, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3906,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2864.922607421875, 558.9537353515625, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3907,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2537.922607421875, 496.9537353515625, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3908,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2864.922607421875, 496.9537353515625, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3909,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3254.984619140625, 370.6782531738281, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3904,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3581.984619140625, 370.6782531738281, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3905,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3254.984619140625, 308.6782531738281, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3910,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3581.984619140625, 308.6782531738281, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3911,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3968, 559, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3898,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 559, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3899,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3968, 497, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3900,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 497, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3901,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4680, 747, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3902,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5007, 747, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3903,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4680, 685, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3912,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5007, 685, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3913,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5403.7333984375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3914,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5730.7333984375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3915,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5403.7333984375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3916,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5730.7333984375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3917,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7037, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3918,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7220, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				3919,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6321.47998046875, 987.1962280273438, 0, 121.9371566772461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				3920,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			7003905980263358,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[239, 912, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3936,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3937,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3938,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				3939,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 766.768310546875, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				3940,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1263.5, 912, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3943,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1982, 721, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4438,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2700, 533, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4439,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3418, 345, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3870,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4130, 533, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3844,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4842, 721, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3845,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5565, 912, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3846,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7275.5, 912, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3847,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6320.5, 912, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3878,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			9048058161916035,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[185.8339691162109, 827.3141479492188, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3949,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2430.49658203125, 442.1603393554688, 0, 181.2200317382813, 13.92776679992676, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3951,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3867.0234375, 443.2408142089844, 0, 181.2200317382813, 13.92776679992676, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3952,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4577.13720703125, 631, 0, 181.2200317382813, 13.92776679992676, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				3927,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			1936162916024658,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 759.1688842773438, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				3953,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				3954,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			8735654913718407,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				3955,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				3956,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				3957,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3958,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3959,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				3960,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			2693499626404283,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			6746979833191238,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			5384551845507377,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv25",
		7250,
		942,
		false,
		"Levels E",
		720361422190543,
		[
		[
			"BG",
			0,
			8167480749092251,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				3930,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			6009746486493691,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 304, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3931,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 449, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3932,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 369, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3933,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 383, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3934,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 431, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				3935,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 339, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3950,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 439, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3961,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 432, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				3962,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 299, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3963,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 479, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				3964,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			6829835036223132,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 793, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3965,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 810, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3966,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 814, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3967,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 809, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3968,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 732, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3969,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3970,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3971,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3972,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				3973,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			4645108843789901,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 778.8431396484375, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3974,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6996, 783, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3975,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7122, 792, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3976,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[977, 790, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3977,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3868.0234375, 407.2408142089844, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3979,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 737.8431396484375, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3980,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 754.8431396484375, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3981,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1012, 757, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3983,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7050, 735, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3984,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7108, 793, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3985,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6895, 793, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3986,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[944, 756, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3987,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3831.0234375, 380.2408142089844, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3988,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5288, 789, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3989,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5237, 767, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				3990,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 755, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3991,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1697, 598, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3992,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1686, 601, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				3993,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1735, 564, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3994,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4746, 786, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				3995,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4709, 759, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				3996,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			8624708005080469,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1091.305786132813, 788.5383911132813, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				3997,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1091.305786132813, 816.5383911132813, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				3998,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1199.1708984375, 846.95947265625, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				3999,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1197.1708984375, 814.95947265625, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4000,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1316.476684570313, 788.5383911132813, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4001,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1316.476684570313, 816.5383911132813, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4002,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1434.319702148438, 846.95947265625, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4003,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1432.319702148438, 814.95947265625, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4004,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1551.62548828125, 788.5383911132813, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4005,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1551.62548828125, 816.5383911132813, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4006,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3999, 414, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4037,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3999, 442, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4038,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4106, 472, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4039,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4104, 440, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4040,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4224, 414, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4041,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4224, 442, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4042,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4342, 472, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4043,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4340, 440, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4044,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4459, 414, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4045,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4459, 442, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4046,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5425, 790.8074951171875, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4057,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5425, 818.8074951171875, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4058,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5532, 848.8074951171875, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4059,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5530, 816.8074951171875, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4060,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5650, 790.8074951171875, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4061,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5650, 818.8074951171875, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4062,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5768, 848.8074951171875, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4063,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5766, 816.8074951171875, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4064,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5885, 790.8074951171875, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4065,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5885, 818.8074951171875, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4066,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6322.81689453125, 849.8167724609375, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4067,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6320.81689453125, 817.8167724609375, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4068,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1954, 505, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4007,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1952, 473, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4008,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2547, 505, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4009,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2545, 473, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4010,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3088, 505, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4011,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3086, 473, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4012,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2091, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4013,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2091, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4014,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2398, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4015,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2398, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4016,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2680, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4017,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2680, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4018,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2949, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4019,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2949, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4020,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3226, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4021,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3226, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4022,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2187.631103515625, 659, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4023,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2185.631103515625, 627, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4024,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2303.095458984375, 659, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4025,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2301.095458984375, 627, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4026,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2760.140380859375, 659, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4027,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2758.140380859375, 627, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4028,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2875.604736328125, 659, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4029,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2873.604736328125, 627, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4030,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3304.146728515625, 659, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4031,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3302.146728515625, 627, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4032,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3419.611083984375, 659, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4033,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3417.611083984375, 627, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4034,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1810, 600, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4035,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1810, 628, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4036,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5274, 698, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4047,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5272, 666, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4048,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4509, 848, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4049,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4507, 816, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4050,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4612, 784, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4051,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4612, 812, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4052,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5126, 784, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4053,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5126, 812, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4054,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5014, 848, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4055,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5012, 816, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4056,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4883, 784, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4132,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4883, 812, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4133,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			9786489407017777,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 776, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				4069,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			9300943432914019,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[147.6775817871094, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4070,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6321.47998046875, 876.3692016601563, 0, 121.9371566772461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4071,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[330.5933837890625, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4072,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1102, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4073,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1420, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4074,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1102, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4075,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1420, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4076,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1823, 746, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4077,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2150, 746, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4078,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1823, 684, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4079,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2150, 684, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4080,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3968, 559, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4089,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 559, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4090,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3968, 497, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4091,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4295, 497, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4092,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5353, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4097,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5730.7333984375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4098,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5353, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4099,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5730.7333984375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4100,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7037, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4101,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7220, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4102,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6321.47998046875, 987.1962280273438, 0, 121.9371566772461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4103,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2528, 746, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4081,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2528, 684, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4082,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2906, 746, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4083,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2906, 684, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4084,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3283, 746, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4085,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3283, 684, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4086,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4638, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4087,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4996, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4088,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4638, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4093,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4996, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4094,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1900.941040039063, 572.6996459960938, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4095,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2001.032958984375, 572.6996459960938, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4096,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1900.941040039063, 531.377685546875, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4314,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2001.032958984375, 531.377685546875, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4315,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2491.577392578125, 573, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4316,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2591.577392578125, 573, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4317,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2491.577392578125, 531, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4318,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2591.577392578125, 531, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4319,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3038.708984375, 573, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4320,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3138.708984375, 573, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4321,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3038.708984375, 531, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4322,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3138.708984375, 531, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4323,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5222.53759765625, 769.098388671875, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4324,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5322.53759765625, 769.098388671875, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4325,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5222.53759765625, 727.098388671875, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4326,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5322.53759765625, 727.098388671875, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4327,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822.18408203125, 546, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4328,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4924.83154296875, 546, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4329,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822.18408203125, 504, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4330,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4924.83154296875, 504, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4331,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822, 390, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4332,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4925, 390, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4333,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822, 348, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4334,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4925, 348, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4335,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822, 234, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4336,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4925, 234, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4337,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822, 192, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4338,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4925, 192, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4339,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822, 87, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4340,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4925, 87, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4341,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4822, 45, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4342,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4925, 45, 0, 109.5932998657227, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4343,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			5824513000356027,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[239, 912, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4104,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4105,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4106,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				4107,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 766.768310546875, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				4108,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1257.5, 912, 0, 704, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4109,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2548.5, 721, 0, 1849, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4110,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4130, 533, 0, 716, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4113,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5179.5, 912, 0, 1487, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4115,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7275.5, 912, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4116,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6320.5, 912, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4117,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1950, 550, 0, 203.3331756591797, 153.3197784423828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4111,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2541, 550, 0, 203.3331756591797, 153.3197784423828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4130,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3087, 550, 0, 203.3331756591797, 153.3197784423828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4131,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4871.5, 209, 0, 207, 777, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4112,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5272, 744, 0, 203.3331756591797, 153.3197784423828, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4114,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			4666904268000559,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[185.8339691162109, 827.3141479492188, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4118,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3867.0234375, 443.2408142089844, 0, 181.2200317382813, 13.92776679992676, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4120,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4745, 822, 0, 181.2200317382813, 13.92776679992676, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4121,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			6176147123231411,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 759.1688842773438, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				4122,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				4123,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			8536412284639101,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				4124,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				4125,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				4126,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4127,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4128,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4129,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			4590821243086364,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			4945716762421483,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			3409093919592575,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv26",
		7250,
		942,
		false,
		"Levels E",
		6108738911994212,
		[
		[
			"BG",
			0,
			9522747419514962,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				4134,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			2589773398385501,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 304, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4135,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 449, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4136,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 369, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4137,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 383, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4138,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 431, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4139,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 339, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4140,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 439, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4141,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 432, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4142,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 299, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4143,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 479, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4144,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			4250011465150023,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 793, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4145,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 810, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4146,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 814, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4147,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 809, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4148,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 732, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4149,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4150,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4151,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4152,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4153,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			8307449756736922,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 778.8431396484375, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4154,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6996, 783, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4155,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7122, 792, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4156,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3406.751220703125, 596.2224731445313, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4158,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3658.720947265625, 595.274658203125, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4159,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 737.8431396484375, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4160,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 754.8431396484375, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4161,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3377.751220703125, 566.2224731445313, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4162,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7050, 735, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4164,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7108, 793, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4165,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6895, 793, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4166,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3621.720947265625, 568.274658203125, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4168,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5288, 789, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4169,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5237, 767, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4170,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5319, 755, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4171,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1777.155029296875, 598, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4172,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1766.155029296875, 601, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4173,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1815.155029296875, 564, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4174,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4781.31396484375, 603.6929931640625, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4175,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4744.31396484375, 576.6929931640625, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4176,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3725.02880859375, 583.1497802734375, 0, 24.82596206665039, 24.82596206665039, 0, 1.308820724487305, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4157,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3658.085693359375, 601.3321533203125, 0, 24.82596206665039, 24.82596206665039, 0, 0.3658824861049652, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4163,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			6512013197712842,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1886, 597, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4177,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1886, 625, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4178,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1340.53759765625, 849.92431640625, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4179,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1338.53759765625, 817.92431640625, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4180,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3917, 849, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4183,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3915, 817, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4184,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6322.81689453125, 849.8167724609375, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4207,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6320.81689453125, 817.8167724609375, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4208,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2024.359252929688, 658.2486572265625, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4188,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2022.359252929688, 626.2486572265625, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4189,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2726.353759765625, 658.6366577148438, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4190,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2724.353759765625, 626.6366577148438, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4191,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4017, 790, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4181,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4017, 818, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4182,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4132, 849, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4192,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4130, 817, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4193,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4232, 790, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4194,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4232, 818, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4195,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3526, 658.6366577148438, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4196,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3524, 626.6366577148438, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4197,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4313, 790, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4185,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4313, 818, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4186,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4423, 849, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4198,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4421, 817, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4199,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4523, 790, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4200,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4523, 818, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4201,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4638, 849, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4202,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4636, 817, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4203,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4883, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4204,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4883, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4205,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4964, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4206,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4964, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4209,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5071, 665, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4210,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5069, 633, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4211,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5180, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4212,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5180, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4213,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5261, 606, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4214,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5261, 634, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4215,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5368, 665, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4216,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5366, 633, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4217,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			262227364480079,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 776, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				4251,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			8416122407251266,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[147.6775817871094, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4252,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6321.47998046875, 876.3692016601563, 0, 121.9371566772461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4253,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[330.5933837890625, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4254,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1918.98681640625, 746, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4259,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1918.98681640625, 684, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4261,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4044.506103515625, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4279,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4526.7177734375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4280,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4044.506103515625, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4281,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4526.7177734375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4282,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7037, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4283,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7220, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4284,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6321.47998046875, 987.1962280273438, 0, 121.9371566772461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4285,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2725.900634765625, 685.2540893554688, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4218,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2725.900634765625, 754.720947265625, 0, 106.7664184570313, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4219,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3535.203369140625, 746, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4220,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3535.203369140625, 684, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4221,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4258.02099609375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4222,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4258.02099609375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4223,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4922, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4224,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4922, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4225,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5389.78076171875, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4226,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5389.78076171875, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4227,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5178.671875, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4228,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5178.671875, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4229,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			3346181115105522,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[239, 912, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4286,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4287,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 450, 0, 116, 915, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4288,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				4289,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 766.768310546875, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				4290,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1338, 912, 0, 106, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4291,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1917, 721, 0, 403, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4292,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7275.5, 912, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4295,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6320.5, 912, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4296,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2725.00048828125, 721, 0, 102.948486328125, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3978,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3533, 721, 0, 403, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				3982,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4283, 912, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4119,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5153, 730, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4187,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			5460579309773709,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[185.8339691162109, 827.3141479492188, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4302,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7103.51025390625, 825.950439453125, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4230,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			1336132626696575,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160, 759.1688842773438, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				4306,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				4307,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			9657999977653707,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				4308,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				4309,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				4310,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4311,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4312,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4313,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			7888702559261419,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			9491281269305839,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			7549125395681038,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv27",
		7250,
		942,
		false,
		"Levels E",
		56618275671276,
		[
		[
			"BG",
			0,
			826204008641995,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				4167,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			4572957102017938,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 304, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4231,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 449, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4232,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 369, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4233,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 383, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4234,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 431, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4235,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 339, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4236,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 439, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4237,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 432, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4238,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 299, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4239,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 479, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4240,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			8078055639425668,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 793, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4241,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 810, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4242,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 814, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4243,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 809, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4244,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 732, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4245,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4246,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4247,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4248,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4249,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			5541162482418743,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 778.8431396484375, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4250,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7015, 604, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4255,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7141, 613, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4256,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3002, 786, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4257,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3543, 785, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4258,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 737.8431396484375, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4260,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 754.8431396484375, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4262,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2973, 756, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4263,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7069, 556, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4264,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7127, 614, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4265,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6914, 614, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4266,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3506, 758, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4267,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1568, 373, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4268,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1517, 351, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4269,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1599, 339, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4270,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2105, 589, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4271,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2094, 592, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4272,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2143, 555, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4273,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4781.31396484375, 603.6929931640625, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4274,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4744.31396484375, 576.6929931640625, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4275,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3609, 773, 0, 24.82596206665039, 24.82596206665039, 0, 1.308820724487305, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4276,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3542, 791, 0, 24.82596206665039, 24.82596206665039, 0, 0.3658824861049652, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4277,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1215, 786, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4516,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1164, 764, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4517,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1246, 752, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4518,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			8662060035142283,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[2159.683837890625, 246.3161926269531, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4298,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2157.683837890625, 214.3161926269531, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4299,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6027, 673.6826782226563, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4300,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6025, 641.6826782226563, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4301,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2259.683837890625, 187.3161926269531, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4345,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2259.683837890625, 215.3161926269531, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4346,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2374.683837890625, 246.3161926269531, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4347,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2372.683837890625, 214.3161926269531, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4348,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2474.683837890625, 187.3161926269531, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4349,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2474.683837890625, 215.3161926269531, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4350,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4241, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4353,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4241, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4354,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4351, 852, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4355,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4349, 820, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4356,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4451, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4357,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4451, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4358,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4566, 852, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4359,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4564, 820, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4360,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4895, 609, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4361,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4895, 637, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4362,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4976, 609, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4363,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4976, 637, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4364,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5083, 668, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4365,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5081, 636, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4366,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5192, 609, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4367,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5192, 637, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4368,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5273, 609, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4369,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5273, 637, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4370,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5380, 668, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4371,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5378, 636, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4372,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6517, 667.6826782226563, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4303,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6515, 635.6826782226563, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4304,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3908, 852, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4352,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3906, 820, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4408,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4008, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4423,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4008, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4424,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4672, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4427,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4672, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4428,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3232, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4344,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3232, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4351,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3342, 852, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4425,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3340, 820, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4426,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3442, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4429,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3442, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4430,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3134, 852, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4433,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3132, 820, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4434,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3650, 793, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4437,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3650, 821, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4462,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2582, 246, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4431,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2580, 214, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4432,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682, 187, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4435,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2682, 215, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4436,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1946, 246, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4463,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1944, 214, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4464,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2046, 187, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4465,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2046, 215, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4466,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			1801527094563019,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 610, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				4373,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			12284185568464,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[147.6775817871094, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4374,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6516.91943359375, 695.3133544921875, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4375,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[330.5933837890625, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4376,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4044.506103515625, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4379,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4526.7177734375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4380,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4044.506103515625, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4381,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4526.7177734375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4382,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7131.4541015625, 712.7898559570313, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4383,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6517, 769, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4385,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4258.02099609375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4390,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4258.02099609375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4391,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4922, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4392,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4922, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4393,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5389.78076171875, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4394,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5389.78076171875, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4395,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5178.671875, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4396,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5178.671875, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4397,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1080, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4294,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1425, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4297,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3265, 49.67470550537109, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4378,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3499, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4389,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3135.47412109375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4467,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3135.47412109375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4468,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2309.015869140625, 359, 0, 145.4093933105469, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4377,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2309.015869140625, 491.2844848632813, 0, 145.4093933105469, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4386,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2309.015869140625, 618.111572265625, 0, 145.4093933105469, 143.1484527587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4387,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1905.906860351563, 648.9967041015625, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4388,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1976.751342773438, 648.9967041015625, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4469,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2049.692626953125, 648.9967041015625, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4470,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2119.2314453125, 648.9967041015625, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4471,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2197.022216796875, 648.9966430664063, 0, 83.66754913330078, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4472,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1457.287963867188, 439.427734375, 0, 76.99591827392578, 74.32186889648438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4473,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1528.287963867188, 439.427734375, 0, 76.99591827392578, 74.32186889648438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4474,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1601.287963867188, 439.427734375, 0, 76.99591827392578, 74.32186889648438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4475,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1670.287963867188, 439.427734375, 0, 76.99591827392578, 74.32186889648438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4476,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1748.287963867188, 439.427734375, 0, 83.66754913330078, 74.32186889648438, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4477,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1909.816650390625, 252.3770599365234, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4478,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1980.816650390625, 252.3770599365234, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4479,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2053.816650390625, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4480,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2122.816650390625, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4481,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2194.2841796875, 252.3770599365234, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4482,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265.2841796875, 252.3770599365234, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4483,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2338.2841796875, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4484,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2407.2841796875, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4485,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2479.100830078125, 252.3770599365234, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4486,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2550.100830078125, 252.3770599365234, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4487,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2623.100830078125, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4488,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2692.100830078125, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4489,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2716.809326171875, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4490,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2785.809326171875, 252.3770446777344, 0, 76.99591827392578, 76.37384033203125, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4491,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6026.12158203125, 700.9772338867188, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4492,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6026, 774, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4493,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7131, 762.7525024414063, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4384,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3451, 49.67470550537109, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4497,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3794, 52, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4498,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4079, 49.67470550537109, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4499,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3265, 177.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4500,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3451, 177.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4501,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3794, 177.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4502,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4079, 177.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4503,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3265, 298.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4504,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3451, 298.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4505,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3794, 298.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4506,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4079, 298.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4507,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3265, 424.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4508,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3451, 424.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4509,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3794, 424.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4510,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4079, 424.6747131347656, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4511,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3265, 548.6746826171875, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4512,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3451, 548.6746826171875, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4513,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3794, 548.6746826171875, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4514,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4079, 548.6746826171875, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4515,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			9126072544330265,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[239, 912, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4398,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4399,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 311.5, 0, 116, 1310, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4400,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				4401,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 766.768310546875, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				4402,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1250, 912, 0, 730, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4403,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2307, 485.5, 0, 141, 404, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4404,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7373, 736, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4405,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6025, 736, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4406,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2054.5, 648.5, 0, 374, 74, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4407,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4283, 912, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4409,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5153, 730, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4410,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1605, 439, 0, 374, 74, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4421,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2347, 252, 0, 951, 74, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4422,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3669.5, 260, 0, 1200, 715, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4278,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3316, 912, 0, 750, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4293,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6515, 730, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4305,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			6229012365467933,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[185.8339691162109, 827.3141479492188, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4411,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2052, 618, 0, 361.6835632324219, 22.85146713256836, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4412,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1606.037109375, 407.5447082519531, 0, 361.6835632324219, 22.85146713256836, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4494,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1077.856811523438, 826.0255126953125, 0, 361.6835632324219, 22.85146713256836, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4495,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1500.933349609375, 822.0540771484375, 0, 240.1561126708984, 15.17326164245606, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4496,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			1621958811222102,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160.8422088623047, 755.7241821289063, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				4413,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				4414,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			7176457366666735,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				4415,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				4416,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				4417,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4418,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4419,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4420,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			8914355676351345,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			8495912358184614,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			6815943666427899,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv28",
		7250,
		942,
		false,
		"Levels E",
		5945435650046439,
		[
		[
			"BG",
			0,
			1838795983114144,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				4519,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			2598919761516746,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 304, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4520,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 449, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4521,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 369, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4522,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 383, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4523,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 431, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4524,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 339, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4525,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 439, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4526,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 432, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4527,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 299, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4528,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 479, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4529,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			7774815163303059,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 793, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4530,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 810, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4531,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 814, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4532,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 809, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4533,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 732, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4534,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4535,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4536,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4537,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4538,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			7098385069603007,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 778.8431396484375, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4539,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7015, 604, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4540,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7141, 613, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4541,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3002, 786, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4542,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 737.8431396484375, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4544,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 754.8431396484375, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4545,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2973, 756, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4546,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7069, 556, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4547,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7127, 614, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4548,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6914, 614, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4549,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2105, 589, 0, 162.0545654296875, 68.32266235351563, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4554,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2094, 592, 0, 18.89444351196289, 18.89444351196289, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4555,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2143, 555, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4556,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4781.31396484375, 603.6929931640625, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4557,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4744.31396484375, 576.6929931640625, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4558,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1215, 786, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4561,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1164, 764, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4562,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1246, 752, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4563,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4168, 789, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4543,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4131, 762, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4550,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			3249607022872641,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6027, 673.6826782226563, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4566,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6025, 641.6826782226563, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4567,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6517, 667.6826782226563, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4594,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6515, 635.6826782226563, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4595,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1357.355102539063, 631.305419921875, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4616,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1355.355102539063, 599.305419921875, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4617,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1154, 572, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4618,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1154, 600, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4619,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1231, 572, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5336,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1231, 600, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5337,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1613.804321289063, 532.9324340820313, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5338,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1613.804321289063, 560.9324340820313, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5339,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1738.274658203125, 593.8755493164063, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5340,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1736.274658203125, 561.8755493164063, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5341,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1921.468872070313, 391.6848449707031, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5342,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1921.468872070313, 419.6848449707031, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5343,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2196, 594, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5344,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2194, 562, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5345,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2071, 533, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5346,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2071, 561, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5347,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2313, 533, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5348,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2313, 561, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5349,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2456, 392, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5350,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2456, 420, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5351,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 594, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5352,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2642, 562, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5353,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2761, 533, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5354,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2761, 561, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5355,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3147, 851, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5356,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3145, 819, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5357,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3268, 851, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5358,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3266, 819, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5359,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2860, 786, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5360,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2860, 814, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5361,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3480, 786, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5362,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3480, 814, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5363,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4275, 790, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5364,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4275, 818, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5365,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3615, 851, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5366,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3613, 819, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5367,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4534, 851, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5368,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4532, 819, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5369,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4407, 851, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5370,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4405, 819, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5371,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4992, 602, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5372,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4992, 630, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5373,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4884, 668, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5374,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4882, 636, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5375,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5536, 668, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5378,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5534, 636, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5379,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5288, 602, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5380,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5288, 630, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5381,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5414, 668, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5376,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5412, 636, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5377,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5139.83935546875, 469.1786499023438, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4584,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5139.83935546875, 497.1786499023438, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4585,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			7418673071820015,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 610, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				4620,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			4180326639852402,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[147.6775817871094, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4621,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6516.91943359375, 695.3133544921875, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4622,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[330.5933837890625, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4623,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4298.7978515625, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4624,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4298.7978515625, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4626,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7131.4541015625, 712.7898559570313, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4628,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6517, 769, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4629,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4407.716796875, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4630,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4407.716796875, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4631,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4922, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4632,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4922, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4633,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5389.78076171875, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4634,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5389.78076171875, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4635,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5178.671875, 756.1091918945313, 0, 410.0185241699219, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4636,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5178.671875, 694.1091918945313, 0, 410.0185241699219, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4637,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1298.67919921875, 888, 0, 414.3226013183594, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4638,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1170.14208984375, 636.681640625, 0, 79.52523040771484, 71.52139282226563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4652,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1226.38427734375, 636.681640625, 0, 79.52523040771484, 71.52139282226563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4653,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1287.810546875, 636.681640625, 0, 79.52523040771484, 71.52139282226563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4654,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1351.27734375, 636.681640625, 0, 79.52523040771484, 71.52139282226563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4655,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6026.12158203125, 700.9772338867188, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4671,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6026, 774, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4672,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7131, 762.7525024414063, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4673,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1413.356689453125, 636.681640625, 0, 79.52523040771484, 71.52139282226563, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4639,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1784.396606445313, 631.16259765625, 0, 414.3226013183594, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4646,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1784.396606445313, 680.9974365234375, 0, 414.3226013183594, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4647,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2188.328125, 631.16259765625, 0, 414.3226013183594, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4648,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2188.328125, 680.9974365234375, 0, 414.3226013183594, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4649,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2601.2392578125, 631.16259765625, 0, 429.6468200683594, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4650,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2601.2392578125, 680.9974365234375, 0, 429.6468200683594, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4651,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1952.014404296875, 497.2804565429688, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4656,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2424, 496, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4657,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2487, 497, 0, 145, 150, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4658,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1890.155639648438, 497.2804565429688, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4644,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3171.63037109375, 548.0616455078125, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4564,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3272.41064453125, 548.0616455078125, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4565,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3171.63037109375, 409.0667419433594, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4568,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3272.41064453125, 409.0667419433594, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4569,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3172, 270, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4570,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3272, 270, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4571,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3172, 133.4327392578125, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4572,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3272, 133.4327392578125, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4573,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3172, -4.03302001953125, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4574,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3272, -4.03302001953125, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4575,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3269, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4576,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3269, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4577,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3512.928466796875, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4578,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3512.928466796875, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4579,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3033, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4580,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3033, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4581,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5105.83447265625, 572.371826171875, 0, 145.4093933105469, 150.4266510009766, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4582,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5168.83447265625, 573.371826171875, 0, 145, 150, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4583,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			6254555339659391,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[239, 912, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4693,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4694,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 311.5, 0, 116, 1310, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4695,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				4696,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 766.768310546875, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				4697,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1296.246826171875, 912, 0, 408.4937744140625, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4698,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7373, 736, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4700,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6025, 736, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4701,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5153, 730, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4704,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3269.5, 912, 0, 867, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4708,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6515, 730, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4709,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2193.5, 655, 0, 1235, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4699,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4350.5, 912, 0, 495, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4702,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5136, 570, 0, 203, 143, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4703,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1919, 494, 0, 203, 143, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4705,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1292, 635, 0, 321, 68, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4707,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2454, 494, 0, 203, 143, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4706,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3220.5, 270, 0, 241, 695, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5335,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			514922559816469,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[185.8339691162109, 827.3141479492188, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4710,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2988.154296875, 822.930908203125, 0, 200.4740905761719, 14.98641586303711, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4711,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1287, 826, 0, 361.6835632324219, 22.85146713256836, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4713,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5136.85595703125, 501.9852905273438, 0, 208.0403900146484, 11.73225212097168, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4714,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			3657135919692289,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160.8422088623047, 755.7241821289063, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				4715,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				4716,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			6610666384914203,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				4717,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				4718,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				4719,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4720,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4721,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4722,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			7623461080425139,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			1335752435030887,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			740855258881289,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv29",
		7250,
		942,
		false,
		"Levels E",
		5512322577120055,
		[
		[
			"BG",
			0,
			7194500265335528,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				4723,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			266926293746234,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 304, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4724,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 449, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4725,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 369, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4726,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 383, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4727,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 431, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4728,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 339, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4729,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 439, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4730,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 432, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4731,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 299, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4732,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 479, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4733,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			7593530338062935,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 793, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4734,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 810, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4735,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 814, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4736,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 809, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4737,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 732, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4738,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4739,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4740,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 800, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4741,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 818, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4742,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			5012064503023294,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 778.8431396484375, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4743,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7015, 604, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4744,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7141, 613, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4745,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4524, 790, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4746,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 737.8431396484375, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4748,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 754.8431396484375, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4749,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4495, 760, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4750,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7069, 556, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4751,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7127, 614, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4752,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6914, 614, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4753,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1766, 591, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4765,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1715, 569, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4766,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1797, 557, 0, 28, 28, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				4767,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			2590822094622978,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6192, 668, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4798,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6190, 636, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4799,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[972.1053466796875, 848.8744506835938, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4820,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[970.1053466796875, 816.8744506835938, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4821,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1073, 791, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4822,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1073, 819, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4823,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1484, 849, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4560,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1482, 817, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4586,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1603, 791, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4587,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1603, 819, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4588,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1216, 849, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4589,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1214, 817, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4590,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1350, 791, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4591,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1350, 819, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4592,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1847, 593, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4593,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1847, 621, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4596,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1960, 653, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4597,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1958, 621, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4598,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2503, 492, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4599,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2503, 520, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4600,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2382, 552, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4601,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2380, 520, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4602,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2603, 492, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4603,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2603, 520, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4604,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3101, 359, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4605,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3101, 387, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4606,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2980, 419, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4607,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2978, 387, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4608,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3201, 359, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4609,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3201, 387, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4610,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3703, 228, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4611,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3703, 256, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4612,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3582, 288, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4613,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3580, 256, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4614,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3803, 228, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4615,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3803, 256, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4625,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4296, 790, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4627,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4296, 818, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4640,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4186, 850, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4641,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4184, 818, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4642,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4396, 790, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4643,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4396, 818, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4645,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4667, 850, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4659,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4665, 818, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4660,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5177, 655, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4661,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5175, 623, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4662,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5331, 655, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4663,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5329, 623, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4664,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			942668603523987,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 610, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				4824,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			5347729686689332,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[147.6775817871094, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4825,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6192.19970703125, 695, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4826,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[330.5933837890625, 887.9659423828125, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4827,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4526.7177734375, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4829,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4526.7177734375, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4831,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7131.4541015625, 712.7898559570313, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4832,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6192.19970703125, 769, 0, 119.6227035522461, 119.0000152587891, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4833,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4312, 938, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4834,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4312, 876, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4835,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1080, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4842,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1447, 888, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4843,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1762.666381835938, 669.8207397460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4850,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7131, 762.7525024414063, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4877,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1856.17041015625, 669.8207397460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4665,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1948.919311523438, 669.8207397460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4666,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2002.251220703125, 669.8207397460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4667,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2349.98974609375, 569.6176147460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4668,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2442.98974609375, 569.6176147460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4669,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2535.98974609375, 569.6176147460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4670,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2588.98974609375, 569.6176147460938, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4674,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2962.304443359375, 433.4380187988281, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4675,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3055.304443359375, 433.4380187988281, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4676,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3148.304443359375, 433.4380187988281, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4677,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3201.304443359375, 433.4380187988281, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4678,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3567, 305.1513671875, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4679,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3660, 305.1513671875, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4680,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3753, 305.1513671875, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4681,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3806, 305.1513671875, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4682,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5136.1708984375, 670.51416015625, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4683,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5229.1708984375, 670.51416015625, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4684,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5322.1708984375, 670.51416015625, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4685,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5375.1708984375, 670.51416015625, 0, 99.85499572753906, 98.30237579345703, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				16,
				4686,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4292.69482421875, 526.7728271484375, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4687,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4382.83251953125, 526.7728271484375, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4688,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4292.69482421875, 424.8006896972656, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4689,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4382.83251953125, 424.8006896972656, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4690,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4292.69482421875, 322.807373046875, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4691,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4382.83251953125, 322.807373046875, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4692,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4292.69482421875, 219.7205810546875, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4712,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4382.83251953125, 219.7205810546875, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4768,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4292.69482421875, 116.3784027099609, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4769,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4382.83251953125, 116.3784027099609, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4770,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4292.69482421875, 11.61639404296875, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4771,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4382.83251953125, 11.61639404296875, 0, 111.0243072509766, 110.1272888183594, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4772,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			3454531093754682,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[239, 912, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4897,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 575, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4898,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 311.5, 0, 116, 1310, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4899,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 414, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				4900,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 766.768310546875, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				4901,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1261, 912, 0, 752, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4902,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7373, 736, 0, 872, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4904,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1881.5, 668.5, 0, 335, 93, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4906,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4337, 265.5, 0, 200, 628, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4907,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4421.5, 912, 0, 613, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4912,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6190, 730, 0, 116, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4913,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2468, 568, 0, 335, 93, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4551,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3081, 432, 0, 335, 93, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4552,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3684, 303, 0, 335, 93, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4553,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5255, 669, 0, 335, 93, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4559,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			2809227353405494,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[185.8339691162109, 827.3141479492188, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4914,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7115.7568359375, 651.8673095703125, 0, 345.3782958984375, 25.32615470886231, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4918,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			6428511718978295,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160.8422088623047, 755.7241821289063, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				4919,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1352, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				4920,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			1652274862417791,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				4921,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				4922,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				4923,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4924,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4925,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4926,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			7327433177557038,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			7386411512567123,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			3127037635444287,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv30",
		7250,
		720,
		false,
		"Levels E",
		9807217052668868,
		[
		[
			"BG",
			0,
			3388335198580482,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				4927,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			2082192948414283,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 82, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4928,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 227, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4929,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 147, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4930,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 161, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4931,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 209, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4932,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 117, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4933,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 217, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4934,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 210, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4935,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 77, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4936,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 257, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4937,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			294723248872386,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 571, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4938,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 588, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4939,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 592, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4940,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 587, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4941,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 510, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4942,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 578, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4943,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 596, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4944,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 578, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4945,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 596, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4946,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			6589930021485345,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 557, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4947,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7068, 557, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4948,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7194, 566, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4949,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2402, 568, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4950,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3937, 566, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4951,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 516, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4952,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 533, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4953,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2373, 538, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4954,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7122, 509, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4955,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7180, 567, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4956,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6967, 567, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4957,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3900, 539, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4958,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4794, 566, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4965,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4757, 539, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4966,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4003, 554, 0, 24.82596206665039, 24.82596206665039, 0, 1.308820724487305, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4967,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3936, 572, 0, 24.82596206665039, 24.82596206665039, 0, 0.3658824861049652, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4968,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			3648034053516495,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1731.253051757813, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5010,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1731.253051757813, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5011,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1045.688110351563, 626.8325805664063, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5016,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1043.688110351563, 594.8325805664063, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5017,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1638, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4759,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1636, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4760,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1828, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4761,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1826, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4762,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2564, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4763,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2562, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4764,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3296, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4773,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3294, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4774,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4075, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4775,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4075, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4776,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4171, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4779,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4169, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4780,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5673, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4777,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5671, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4778,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6581, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4783,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6579, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4784,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			1924540624493964,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 560.22900390625, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				5028,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			3698160159701961,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[148, 666, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5029,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1734.009399414063, 661.46484375, 0, 309, 133, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5031,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4045, 716, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5032,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4045, 654, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5034,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4097, 716, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5038,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4097, 654, 0, 391.0317077636719, 116.4134216308594, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5039,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2467.51416015625, 661, 0, 309, 133, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4781,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[330.5130310058594, 666.5130004882813, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4782,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1044.168701171875, 651.5126953125, 0, 112.7699890136719, 111.8588638305664, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4785,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1044.168701171875, 749.9508666992188, 0, 112.7699890136719, 111.8588638305664, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4786,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3293.503662109375, 652, 0, 112.7699890136719, 111.8588638305664, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4787,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3293.503662109375, 750, 0, 112.7699890136719, 111.8588638305664, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4788,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5670.505859375, 652, 0, 123.4980621337891, 111.8588638305664, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4789,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5670.505859375, 750, 0, 123.4980621337891, 111.8588638305664, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4790,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4793.65625, 665.0794067382813, 0, 152.1860504150391, 137.8432922363281, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4791,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4793.65625, 785.844482421875, 0, 152.1860504150391, 137.8432922363281, 0, 0, 1, 0.5, 0.5033556818962097, 0, 0, []],
				17,
				4792,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7129.14404296875, 661, 0, 309, 133, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4793,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6505.16259765625, 661, 0, 301.36181640625, 133, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4794,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			4101389998417587,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[239, 690, 0, 565, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5101,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 353, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5102,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 90, 0, 116, 1310, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5103,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 192, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				5104,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 545, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				5105,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1043.41162109375, 690, 0, 110.687255859375, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5106,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4068, 690, 0, 441, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5111,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3293.0048828125, 690, 0, 112.78125, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				5116,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1732, 690, 0, 304, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4747,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2466, 690, 0, 304, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4754,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4794, 690, 0, 151, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4755,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5670, 690, 0, 123, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4756,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6503, 690, 0, 297, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4757,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7317, 690, 0, 683, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4758,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			676175556569305,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[186, 605, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				5118,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2410.47900390625, 600.1380615234375, 0, 193.6640319824219, 13.97146224975586, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				5119,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3951.8291015625, 602.019775390625, 0, 209, 16, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				5120,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7112.16845703125, 602, 0, 273.19677734375, 16, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4795,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6439.9384765625, 600.2343139648438, 0, 170.74267578125, 12.5865478515625, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4796,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			4572976264570801,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[161, 534, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				5123,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1130, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				5124,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			2000488319893118,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				5125,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				5126,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				5127,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				5128,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				5129,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				5130,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			8088632465598356,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			4558660868741999,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			8472328938013233,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Lv31",
		7250,
		720,
		false,
		"Levels E",
		710081537738646,
		[
		[
			"BG",
			0,
			2743870314227307,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				4797,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Cloud",
			1,
			394957955148176,
			true,
			[255, 255, 255],
			true,
			0.6000000238418579,
			0.6000000238418579,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[154, 82, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4800,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 227, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4801,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1273, 147, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4802,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4980, 161, 0, 365, 111, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4803,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2265, 209, 0, 283.1461791992188, 86.10746765136719, 0, 0, 1, 0.501369833946228, 0.5045045018196106, 0, 0, []],
				19,
				4804,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2994, 117, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4805,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3888, 217, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4806,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5891, 210, 0, 265.7724609375, 88.5908203125, 0, 0, 1, 0.5013774037361145, 0.5041322112083435, 0, 0, []],
				20,
				4807,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6573, 77, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4808,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7113, 257, 0, 265.8612060546875, 82.14812469482422, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				21,
				4809,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Mountain",
			2,
			6403722133333643,
			true,
			[255, 255, 255],
			true,
			0.699999988079071,
			0.699999988079071,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[246, 571, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4810,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[779, 588, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4811,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1682, 592, 0, 682.2288818359375, 307.5071105957031, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4812,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2108, 587, 0, 721.7174682617188, 309.1874694824219, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4813,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2644, 510, 0, 997.4417724609375, 427.3091735839844, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4814,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3647, 578, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4815,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4220, 596, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4816,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5502, 578, 0, 754.5458984375, 323.2513427734375, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4817,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6365, 596, 0, 622.2943115234375, 266.5940856933594, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				18,
				4818,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Grass",
			3,
			3900269909557758,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[146, 557, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4819,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7068, 557, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4828,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7194, 566, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4830,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3677, 568, 0, 168.0330505371094, 70.84320831298828, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4836,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4369, 566, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4837,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[68, 516, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4838,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[190, 533, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4839,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3648, 538, 0, 33.15483093261719, 33.15483093261719, 0, 0.2608479559421539, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				4840,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7122, 509, 0, 25.2586612701416, 25.2586612701416, 0, 0.3321165144443512, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4841,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7180, 567, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4844,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6967, 567, 0, 25.2586612701416, 25.2586612701416, 0, -0.3944860398769379, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4845,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4332, 539, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4846,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2756, 566, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4847,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2719, 539, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4848,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4435, 554, 0, 24.82596206665039, 24.82596206665039, 0, 1.308820724487305, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4849,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4368, 572, 0, 24.82596206665039, 24.82596206665039, 0, 0.3658824861049652, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				4851,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6063, 566, 0, 192.04345703125, 80.96605682373047, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4961,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5535, 566, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				4963,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5498, 539, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				5054,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5601, 554, 0, 24.82596206665039, 24.82596206665039, 0, 1.308820724487305, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				5055,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5534, 572, 0, 24.82596206665039, 24.82596206665039, 0, 0.3658824861049652, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				5056,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1850, 566, 0, 176.5948791503906, 74.45289611816406, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				5057,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1891, 553, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				5058,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1807, 580, 0, 24.82596206665039, 24.82596206665039, 0, 0.8223757743835449, 1, 0.5142857432365418, 0.5142857432365418, 0, 0, []],
				15,
				5059,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[885, 557, 0, 234.2771606445313, 98.77190399169922, 0, 0, 1, 0.5017421841621399, 0.5041322112083435, 0, 0, []],
				12,
				5060,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[807, 516, 0, 41, 41, 0, -0.2805185914039612, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				5061,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[929, 533, 0, 29.46183967590332, 29.46183967590332, 0, 0.4123650193214417, 1, 0.5121951103210449, 0.5121951103210449, 0, 0, []],
				8,
				5062,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Saw",
			4,
			9524656846762181,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[662, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4852,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[662, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4853,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[548, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4856,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[546, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4857,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[750, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4854,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[750, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4855,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1026, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4858,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1026, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4859,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1288, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4860,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1288, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4861,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1161, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4862,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1159, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4863,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1430, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4864,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1428, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4865,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1554, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4866,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1554, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4867,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1647, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4868,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1647, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4869,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1736, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4870,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1736, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4871,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2075, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4903,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2075, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4905,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1971, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4908,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1969, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4909,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2296, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4910,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2296, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4911,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2192, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4915,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2190, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4916,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2384, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4917,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2384, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4976,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2639, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4977,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2639, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4978,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2519, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4979,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2517, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4980,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2872, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4981,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2872, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4982,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3102, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4983,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3102, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4984,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2982, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4985,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2980, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4986,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3348, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4987,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3348, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4988,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3228, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4989,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3226, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4990,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3445, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4991,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3445, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4992,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3533, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4993,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3533, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4994,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3822, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4995,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3822, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				4996,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3923, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				4997,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3921, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				4998,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4037, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				4999,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4037, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5000,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4138, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5001,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4136, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5002,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4246, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5003,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4246, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5004,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4501, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5007,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4501, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5008,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4602, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5009,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4600, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5012,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4719, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5005,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4719, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5006,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4814, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5013,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4814, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5014,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4931, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5015,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4929, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5018,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5048, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5019,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5048, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5020,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5132, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5021,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5132, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5022,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5266, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5023,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5264, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5024,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5402, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5025,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5402, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5026,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5671, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5027,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5671, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5030,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5801, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5033,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5799, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5035,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5937, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5036,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5937, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5037,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6206, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5040,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6206, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5041,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6305, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5042,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6305, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5043,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6397, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5044,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6397, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5045,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6543, 627, 0, 96, 78, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				24,
				5046,
				[
				],
				[
				[
					1,
					700,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6541, 595, 0, 111, 15, 0, 0, 1, 0.5045045018196106, 0.5333333611488342, 0, 0, []],
				25,
				5047,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6704, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5048,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6704, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5049,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6793, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5050,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6793, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5051,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6892, 567, 0, 81.09866333007813, 81.09866333007813, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				14,
				5052,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6892, 595, 0, 15.52919387817383, 71.17547607421875, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				13,
				5053,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Goal",
			5,
			9856625012631832,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[6995, 560.22900390625, 0, 115.8697662353516, 130.0166625976563, 0, 0, 1, 0.5, 0.5025906562805176, 0, 0, []],
				22,
				4872,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"BrickMass",
			6,
			2135115166253316,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[148, 664, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4873,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[521, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4881,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[894, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4874,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1268, 664, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4875,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1641, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4876,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2014, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4878,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2378, 664, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4879,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2751, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4880,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3124, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4882,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3498, 664, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4883,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3871, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4884,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4244, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4885,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4608, 664, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4886,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4981, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4887,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5354, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4888,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[5728, 664, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4889,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6101, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4890,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6474, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				4891,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[6822, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5063,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7195, 665, 0, 391.0317077636719, 142.0703430175781, 0, 0, 1, 0.5017300844192505, 0.5, 0, 0, []],
				7,
				5064,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Solid",
			7,
			4857826714476662,
			false,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[3844, 690, 0, 7775, 187, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4892,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-60, 353, 0, 116, 731, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4893,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7653, 90, 0, 116, 1310, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				52,
				4894,
				[
				],
				[
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7038, 192, 0, 93, 903, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				51,
				4895,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[161, 545, 0, 76, 111, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				4896,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"GrassCover",
			8,
			9428931518346415,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[186, 605, 0, 459, 29, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4959,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3686, 600, 0, 193.6640319824219, 13.97146224975586, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4960,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[7112.16845703125, 602, 0, 273.19677734375, 16, 0, 0, 1, 0.501089334487915, 0.517241358757019, 0, 0, []],
				11,
				4962,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Character",
			9,
			3923834591286024,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[160.3323974609375, 539.8338012695313, 0, 100, 100, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				4964,
				[
				],
				[
				[
					500,
					1500,
					1600,
					900,
					2000,
					1000,
					0,
					1,
					0,
					0
				],
				[
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[962, 1130, 0, 128, 128, 0, 0, 1, 0, 0.5, 0, 0, []],
				23,
				4969,
				[
				],
				[
				],
				[
					10,
					360,
					1,
					400,
					50,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0,
					0.7
				]
			]
			],
			[			]
		]
,		[
			"LevelUI",
			10,
			5700324151436189,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				49,
				4970,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[145, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				4971,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Level:10",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 61, 0, 219, 83, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				4972,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"00:00:00",
					0.5,
					0,
					1,
					1,
					1,
					0,
					-30,
					0
				]
			]
,			[
				[1127, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4973,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"MELHOR TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[643, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4974,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"TEMPO",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
,			[
				[142, 30, 0, 165, 84, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				4975,
				[
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CURRENT LEVEL",
					0.2,
					0,
					1,
					1,
					1,
					0,
					-12,
					0
				]
			]
			],
			[			]
		]
,		[
			"ResultUI",
			11,
			7184697726003598,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"TouchPad",
			12,
			3526777054662041,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			13,
			2472654828574098,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"AllComplete",
			14,
			6127287357455151,
			false,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[640, 171, 0, 1086, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5085,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"CONGRATULATIONS ! YOU HAVE CLEARED ALL LEVELS !",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
,	[
		"Loader",
		1280,
		720,
		false,
		"Loader E",
		1020357650482203,
		[
		[
			"BG",
			0,
			4683810484649331,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 1280, 720, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				5086,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Carregando",
			1,
			528714031956305,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[454, 367, 0, 400, 15, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				5088,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[678, 337, 0, 352, 64, 0, 0, 1, 0.5, 0.5, 0, 0, [[0.63, 0.58, 0.47]]],
				43,
				5089,
				[
					[0]
				],
				[
				],
				[
					107,
					85,
					"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.,;:?!-_~#\"'&()[]|`\\/@°+=*$£€<>",
					"Carregando...",
					0.4,
					0,
					1,
					1,
					1,
					0,
					-24,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[["noise", "Noise", [0.1, 1]],["gamma", "Gamma", [1.5]]]
	]
	],
	[
	[
		"CharacterControl E",
		[
		[
			1,
			"ActiveTime",
			0,
			5,
false,false,6629193051144364,false
		]
,		[
			1,
			"UIPostJump",
			0,
			0,
false,false,6940381965516532,false
		]
,		[
			1,
			"DefaultSpeed",
			0,
			500,
false,false,3063539281794001,false
		]
,		[
			1,
			"MaxSpeed",
			0,
			800,
false,false,2086818289414172,false
		]
,		[
			0,
			null,
			false,
			null,
			638229745409499,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				9652047285440131,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				8898644417997415,
				false
				,[
				[
					11,
					"UIPostJump"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7976804263760721,
			[
			[
				-1,
				cr.system_object.prototype.cnds.LayerVisible,
				null,
				0,
				false,
				false,
				false,
				1455561333108851,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				5112616370025704,
				false
				,[
				[
					1,
					[
						2,
						"CharacterSys"
					]
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			12285412098581,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Else,
				null,
				0,
				false,
				false,
				false,
				5258833961171392,
				false
			]
,			[
				-1,
				cr.system_object.prototype.cnds.TriggerOnce,
				null,
				0,
				false,
				false,
				false,
				5702553944156489,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				1363304312445301,
				false
				,[
				[
					1,
					[
						2,
						"CharacterSys"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7662985202359558,
			[
			[
				-1,
				cr.system_object.prototype.cnds.LayerVisible,
				null,
				0,
				false,
				false,
				false,
				3818160066511237,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
			],
			[
			[
				50,
				cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
				"PlatformPlus",
				8811205768851186,
				false
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				4958081329973575,
				false
				,[
				[
					1,
					[
						2,
						"CharacterSys"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				50,
				cr.plugins_.Sprite.prototype.acts.SetAnim,
				null,
				5179121685100583,
				false
				,[
				[
					1,
					[
						2,
						"run"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				50,
				cr.behaviors.PlatformPlus.prototype.acts.SetMaxSpeed,
				"PlatformPlus",
				4694931219428031,
				false
				,[
				[
					0,
					[
						0,
						300
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8161405512252038,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Else,
				null,
				0,
				false,
				false,
				false,
				5344686504086994,
				false
			]
,			[
				-1,
				cr.system_object.prototype.cnds.TriggerOnce,
				null,
				0,
				false,
				false,
				false,
				9206602290884181,
				false
			]
			],
			[
			[
				50,
				cr.behaviors.PlatformPlus.prototype.acts.SetMaxSpeed,
				"PlatformPlus",
				2334445200736319,
				false
				,[
				[
					0,
					[
						23,
						"DefaultSpeed"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				1379112709621666,
				false
				,[
				[
					1,
					[
						2,
						"CharacterSys"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			[true, "CharacterSys"],
			false,
			null,
			8166274803404138,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8166274803404138,
				false
				,[
				[
					1,
					[
						2,
						"CharacterSys"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "GlobalSettings"],
				false,
				null,
				9682168285056632,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					9682168285056632,
					false
					,[
					[
						1,
						[
							2,
							"GlobalSettings"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					827132861501794,
					[
					[
						50,
						cr.behaviors.PlatformPlus.prototype.cnds.OnJump,
						"PlatformPlus",
						1,
						false,
						false,
						false,
						7924009099693051,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						9925127554240237,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							6705761727174619,
							false
							,[
							[
								7,
								[
									22,
									50,
									"PlatformPlus",
									cr.behaviors.PlatformPlus.prototype.exps.MaxSpeed,
									false,
									null
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									23,
									"MaxSpeed"
								]
							]
							]
						]
						],
						[
						[
							50,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							3254897353771009,
							false
							,[
							[
								1,
								[
									2,
									"boost"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						5452800837971112,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							138471925346697,
							false
						]
						],
						[
						[
							50,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							4199979676241867,
							false
							,[
							[
								1,
								[
									2,
									"jump"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9480597107483263,
					[
					[
						50,
						cr.behaviors.PlatformPlus.prototype.cnds.IsOnFloor,
						"PlatformPlus",
						0,
						false,
						false,
						false,
						4346118439248555,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8205822503706285,
						[
						[
							50,
							cr.behaviors.PlatformPlus.prototype.cnds.IsMoving,
							"PlatformPlus",
							0,
							false,
							false,
							false,
							6941722957528982,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							4871401732317842,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								2048418421977507,
								false
								,[
								[
									7,
									[
										22,
										50,
										"PlatformPlus",
										cr.behaviors.PlatformPlus.prototype.exps.MaxSpeed,
										false,
										null
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										23,
										"MaxSpeed"
									]
								]
								]
							]
							],
							[
							[
								50,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								1074733686474012,
								false
								,[
								[
									1,
									[
										2,
										"boost"
									]
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							2507451130315009,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								3344104072896476,
								false
							]
							],
							[
							[
								50,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								9599761240433803,
								false
								,[
								[
									1,
									[
										2,
										"run"
									]
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						9941928776882615,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							1702499313635047,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							true,
							null,
							4924551342666655,
							[
							[
								50,
								cr.behaviors.PlatformPlus.prototype.cnds.OnLand,
								"PlatformPlus",
								1,
								false,
								false,
								false,
								3305746243475719,
								false
							]
,							[
								50,
								cr.behaviors.PlatformPlus.prototype.cnds.IsOnFloor,
								"PlatformPlus",
								0,
								false,
								false,
								false,
								1177465988171226,
								false
							]
							],
							[
							]
							,[
							[
								0,
								null,
								true,
								null,
								6273442477958667,
								[
								[
									6,
									cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
									null,
									0,
									false,
									false,
									false,
									6931745941742596,
									false
									,[
									[
										4,
										55
									]
									]
								]
,								[
									6,
									cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
									null,
									0,
									false,
									false,
									false,
									4064586887097786,
									false
									,[
									[
										4,
										54
									]
									]
								]
,								[
									6,
									cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
									null,
									0,
									false,
									false,
									false,
									9046908993757812,
									false
									,[
									[
										4,
										56
									]
									]
								]
,								[
									1,
									cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
									null,
									0,
									false,
									false,
									false,
									7384082320789183,
									false
									,[
									[
										9,
										39
									]
									]
								]
,								[
									1,
									cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
									null,
									0,
									false,
									false,
									false,
									4734883774128049,
									false
									,[
									[
										9,
										37
									]
									]
								]
,								[
									0,
									cr.plugins_.gamepad.prototype.cnds.CompareAxis,
									null,
									0,
									false,
									false,
									false,
									7317649657037809,
									false
									,[
									[
										0,
										[
											0,
											0
										]
									]
,									[
										3,
										0
									]
,									[
										8,
										1
									]
,									[
										0,
										[
											0,
											0
										]
									]
									]
								]
								],
								[
								]
								,[
								[
									0,
									null,
									false,
									null,
									1202195698427849,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										1336128127605175,
										false
										,[
										[
											7,
											[
												22,
												50,
												"PlatformPlus",
												cr.behaviors.PlatformPlus.prototype.exps.MaxSpeed,
												false,
												null
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												23,
												"MaxSpeed"
											]
										]
										]
									]
									],
									[
									[
										50,
										cr.plugins_.Sprite.prototype.acts.SetAnim,
										null,
										329632026803578,
										false
										,[
										[
											1,
											[
												2,
												"boost"
											]
										]
,										[
											3,
											1
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									3731922527828326,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										2616641130998559,
										false
									]
									],
									[
									[
										50,
										cr.plugins_.Sprite.prototype.acts.SetAnim,
										null,
										204582045698514,
										false
										,[
										[
											1,
											[
												2,
												"run"
											]
										]
,										[
											3,
											1
										]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								9492652750560763,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									7573368401145057,
									false
								]
								],
								[
								[
									50,
									cr.plugins_.Sprite.prototype.acts.SetAnim,
									null,
									2293143794663251,
									false
									,[
									[
										1,
										[
											2,
											"idle"
										]
									]
,									[
										3,
										1
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					2027570207093293,
					[
					[
						6,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						false,
						false,
						1667150667241352,
						false
						,[
						[
							4,
							56
						]
						]
					]
,					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
						null,
						0,
						false,
						false,
						false,
						804246913766398,
						false
						,[
						[
							9,
							16
						]
						]
					]
,					[
						0,
						cr.plugins_.gamepad.prototype.cnds.IsButtonDown,
						null,
						0,
						false,
						false,
						false,
						4772241773097269,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							7
						]
						]
					]
					],
					[
					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SetMaxSpeed,
						"PlatformPlus",
						3816387598321675,
						false
						,[
						[
							0,
							[
								23,
								"MaxSpeed"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7787771652690165,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						5509073794792849,
						false
					]
					],
					[
					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SetMaxSpeed,
						"PlatformPlus",
						2249109917948078,
						false
						,[
						[
							0,
							[
								23,
								"DefaultSpeed"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "GamepadControl"],
				false,
				null,
				3653168923220802,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					3653168923220802,
					false
					,[
					[
						1,
						[
							2,
							"GamepadControl"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7022526554519324,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.CompareAxis,
						null,
						0,
						false,
						false,
						false,
						6275787649255955,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							0
						]
,						[
							8,
							4
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.Sprite.prototype.acts.SetMirrored,
						null,
						5265552816011976,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						8357990493250504,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6291138668181934,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.CompareAxis,
						null,
						0,
						false,
						false,
						false,
						4369449448710018,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							0
						]
,						[
							8,
							2
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.Sprite.prototype.acts.SetMirrored,
						null,
						3427369163297739,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						2374821541279687,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6561755766421837,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.IsButtonDown,
						null,
						0,
						false,
						false,
						false,
						905576035991235,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							0
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9041734557431854,
						false
						,[
						[
							11,
							"UIPostJump"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						4398307440236591,
						false
						,[
						[
							3,
							2
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "KeyboardControl"],
				false,
				null,
				5497538550293169,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					5497538550293169,
					false
					,[
					[
						1,
						[
							2,
							"KeyboardControl"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					6896627612511654,
					[
					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
						null,
						0,
						false,
						false,
						false,
						4383259296360098,
						false
						,[
						[
							9,
							39
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.Sprite.prototype.acts.SetMirrored,
						null,
						4406761547221413,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						985056440822543,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4048289228923773,
					[
					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
						null,
						0,
						false,
						false,
						false,
						3263460830942812,
						false
						,[
						[
							9,
							37
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.Sprite.prototype.acts.SetMirrored,
						null,
						3333061555972387,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						7135766066773111,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					6124256937108931,
					[
					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
						null,
						0,
						false,
						false,
						false,
						4039969116016372,
						false
						,[
						[
							9,
							32
						]
						]
					]
,					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
						null,
						0,
						false,
						false,
						false,
						9932458213032718,
						false
						,[
						[
							9,
							38
						]
						]
					]
					],
					[
					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						843267554263535,
						false
						,[
						[
							3,
							2
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "TouchControl"],
				false,
				null,
				7270484080182998,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					7270484080182998,
					false
					,[
					[
						1,
						[
							2,
							"TouchControl"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "TouchPadActive"],
					false,
					null,
					482051909535348,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						482051909535348,
						false
						,[
						[
							1,
							[
								2,
								"TouchPadActive"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						6367095813386776,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							8251076750886729,
							false
							,[
							[
								11,
								"ActiveTime"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetLayerVisible,
							null,
							4183695184278463,
							false
							,[
							[
								5,
								[
									2,
									"TouchPad"
								]
							]
,							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3428197300387459,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							8258468126690012,
							false
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetLayerVisible,
							null,
							8823401596453708,
							false
							,[
							[
								5,
								[
									2,
									"TouchPad"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4150398292036292,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Every,
							null,
							0,
							false,
							false,
							false,
							6713750500491379,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							8684945902161977,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								1463278967080948,
								false
								,[
								[
									11,
									"ActiveTime"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								165277180555065,
								false
								,[
								[
									11,
									"ActiveTime"
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							9673476897088985,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								1928853340121637,
								false
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								6817219078603069,
								false
								,[
								[
									11,
									"ActiveTime"
								]
,								[
									7,
									[
										5,
										[
											23,
											"ActiveTime"
										]
										,[
											0,
											1
										]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1696828967497377,
						[
						[
							6,
							cr.plugins_.Touch.prototype.cnds.IsInTouch,
							null,
							0,
							false,
							false,
							false,
							6235694419626208,
							false
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1563936124703932,
							false
							,[
							[
								11,
								"ActiveTime"
							]
,							[
								7,
								[
									0,
									5
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7900568581608812,
					[
					[
						6,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						false,
						false,
						3216362891167085,
						false
						,[
						[
							4,
							55
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.Sprite.prototype.acts.SetMirrored,
						null,
						395919367037802,
						false
						,[
						[
							3,
							1
						]
						]
					]
,					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						2732580130783919,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1239735811402438,
					[
					[
						6,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						false,
						false,
						4332712383655434,
						false
						,[
						[
							4,
							56
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7350321026060392,
						[
						[
							56,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							984726792147841,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							50,
							cr.plugins_.Sprite.prototype.acts.SetMirrored,
							null,
							3896734732744811,
							false
							,[
							[
								3,
								1
							]
							]
						]
,						[
							50,
							cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
							"PlatformPlus",
							7230289310077813,
							false
							,[
							[
								3,
								1
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6610836844227093,
						[
						[
							56,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							5088567186047371,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							50,
							cr.plugins_.Sprite.prototype.acts.SetMirrored,
							null,
							2253692262634841,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							50,
							cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
							"PlatformPlus",
							1569277775334053,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1367983445852585,
					[
					[
						6,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						false,
						false,
						5096018965129396,
						false
						,[
						[
							4,
							54
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.Sprite.prototype.acts.SetMirrored,
						null,
						619883042190779,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						5948400317005445,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					317191976249686,
					[
					[
						6,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						false,
						false,
						1821989625655537,
						false
						,[
						[
							4,
							57
						]
						]
					]
					],
					[
					[
						50,
						cr.behaviors.PlatformPlus.prototype.acts.SimulateControl,
						"PlatformPlus",
						2187945941255099,
						false
						,[
						[
							3,
							2
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Levels E",
		[
		[
			2,
			"ResultUI E",
			false
		]
,		[
			2,
			"UI E",
			false
		]
,		[
			2,
			"CharacterControl E",
			false
		]
,		[
			1,
			"LevelStartTrigger",
			0,
			0,
false,false,3946664607217724,false
		]
,		[
			1,
			"CurrentLevel",
			0,
			0,
false,false,8311803894743172,false
		]
,		[
			1,
			"StarCount",
			0,
			0,
false,false,8574590340945709,false
		]
,		[
			1,
			"3StarTime",
			0,
			0,
false,false,353032713730169,false
		]
,		[
			1,
			"2StarTime",
			0,
			0,
false,false,7713198420125652,false
		]
,		[
			1,
			"Second",
			0,
			1000,
false,false,6713232244071419,false
		]
,		[
			0,
			null,
			false,
			null,
			9503571316755183,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				4589965112676718,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9248204347251226,
				false
				,[
				[
					11,
					"StarCount"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2983277778340339,
				false
				,[
				[
					11,
					"3StarTime"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				414501029539519,
				false
				,[
				[
					11,
					"2StarTime"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				7990478993775011,
				false
				,[
				[
					11,
					"LevelStartTrigger"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				49,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				630476816831702,
				false
				,[
				[
					7,
					[
						2,
						"00:00:00"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				8472437765130432,
				false
				,[
				[
					1,
					[
						2,
						"GameStartTrigger"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				5822208342815579,
				[
				],
				[
				[
					58,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					5102091113508645,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					56,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					6746969977946634,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					57,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					6238491925295389,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					3097938147437196,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					55,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					7836784870661596,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerParallax,
					null,
					8132133763172016,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerOpacity,
					null,
					6775076853223025,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
,					[
						0,
						[
							0,
							80
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3179583995274959,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				7916484288814512,
				false
				,[
				[
					7,
					[
						20,
						50,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
,				[
					8,
					4
				]
,				[
					7,
					[
						4,
						[
							19,
							cr.system_object.prototype.exps.layoutheight
						]
						,[
							0,
							280
						]
					]
				]
				]
			]
			],
			[
			[
				50,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				652655156415549,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.RestartLayout,
				null,
				7335166582511424,
				false
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			4097000960246881,
			[
			[
				50,
				cr.plugins_.Sprite.prototype.cnds.OnCollision,
				null,
				0,
				false,
				false,
				true,
				8376728252212346,
				false
				,[
				[
					4,
					14
				]
				]
			]
,			[
				50,
				cr.plugins_.Sprite.prototype.cnds.OnCollision,
				null,
				0,
				false,
				false,
				true,
				1381641198665136,
				false
				,[
				[
					4,
					24
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				1587862034477207,
				false
				,[
				[
					4,
					23
				]
,				[
					5,
					[
						2,
						"Character"
					]
				]
,				[
					0,
					[
						20,
						50,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						50,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				50,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3139278368652637,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3971037335398354,
				false
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.RestartLayout,
				null,
				1446906158008917,
				false
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6837743712262288,
			[
			[
				2,
				cr.plugins_.Arr.prototype.cnds.CompareXY,
				null,
				0,
				false,
				false,
				false,
				883060488330629,
				false
				,[
				[
					0,
					[
						23,
						"CurrentLevel"
					]
				]
,				[
					0,
					[
						0,
						2
					]
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				38,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				4563895082802093,
				false
				,[
				[
					7,
					[
						2,
						"--:--"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6292045971903283,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Else,
				null,
				0,
				false,
				false,
				false,
				5171782319790685,
				false
			]
			],
			[
			[
				38,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				7049201521324313,
				false
				,[
				[
					7,
					[
						20,
						4,
						cr.plugins_.CAMFTimeManager.prototype.exps.ConvertNumberToMMSSMM,
						true,
						null
						,[
[
							20,
							2,
							cr.plugins_.Arr.prototype.exps.At,
							false,
							null
							,[
[
								23,
								"CurrentLevel"
							]
,[
								0,
								2
							]
							]
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4877872491635781,
			[
			],
			[
			[
				39,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				9831719722426871,
				false
				,[
				[
					7,
					[
						10,
						[
							2,
							"Level:"
						]
						,[
							4,
							[
								23,
								"CurrentLevel"
							]
							,[
								0,
								1
							]
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				4725846080775774,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6066174002548575,
					false
					,[
					[
						11,
						"LevelStartTrigger"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					49,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					4582408809644962,
					false
					,[
					[
						7,
						[
							20,
							4,
							cr.plugins_.CAMFTimeManager.prototype.exps.MMSSMM,
							true,
							null
							,[
[
								2,
								"LevelTime"
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1029177341247045,
			[
			[
				1,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				2796338034847469,
				false
				,[
				[
					9,
					89
				]
				]
			]
			],
			[
			[
				3,
				cr.plugins_.WebStorage.prototype.acts.ClearLocal,
				null,
				329244823404306,
				false
			]
			]
		]
,		[
			0,
			[true, "GameStartTrigger"],
			false,
			null,
			6890862477349865,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6890862477349865,
				false
				,[
				[
					1,
					[
						2,
						"GameStartTrigger"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8123317194255496,
				[
				[
					50,
					cr.plugins_.Sprite.prototype.cnds.OnCollision,
					null,
					0,
					false,
					false,
					true,
					5348346416656331,
					false
					,[
					[
						4,
						53
					]
					]
				]
				],
				[
				[
					4,
					cr.plugins_.CAMFTimeManager.prototype.acts.TimeCountUp,
					null,
					1460899961681726,
					false
					,[
					[
						1,
						[
							2,
							"LevelTime"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					417235924864038,
					false
					,[
					[
						11,
						"LevelStartTrigger"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					708055197275977,
					false
					,[
					[
						1,
						[
							2,
							"GameStartTrigger"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "StarSys"],
			false,
			null,
			7651074674839657,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7651074674839657,
				false
				,[
				[
					1,
					[
						2,
						"StarSys"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4392625499468829,
				[
				[
					50,
					cr.plugins_.Sprite.prototype.cnds.OnCollision,
					null,
					0,
					false,
					false,
					true,
					9568806347138305,
					false
					,[
					[
						4,
						51
					]
					]
				]
				],
				[
				[
					4,
					cr.plugins_.CAMFTimeManager.prototype.acts.PauseTimeCount,
					null,
					7640741938284527,
					false
					,[
					[
						1,
						[
							2,
							"LevelTime"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2818242388756982,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1293724502594874,
						false
						,[
						[
							7,
							[
								20,
								4,
								cr.plugins_.CAMFTimeManager.prototype.exps.GetTimeValue,
								false,
								null
								,[
[
									2,
									"LevelTime"
								]
								]
							]
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								23,
								"3StarTime"
							]
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						2689102310983146,
						false
						,[
						[
							0,
							[
								0,
								2
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						7067483694275384,
						false
						,[
						[
							11,
							"StarCount"
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8125631634041517,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4487167684195622,
						false
						,[
						[
							7,
							[
								20,
								4,
								cr.plugins_.CAMFTimeManager.prototype.exps.GetTimeValue,
								false,
								null
								,[
[
									2,
									"LevelTime"
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								23,
								"3StarTime"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6799185835316892,
						false
						,[
						[
							7,
							[
								20,
								4,
								cr.plugins_.CAMFTimeManager.prototype.exps.GetTimeValue,
								false,
								null
								,[
[
									2,
									"LevelTime"
								]
								]
							]
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								23,
								"2StarTime"
							]
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						4804727603218416,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2285216927953919,
						false
						,[
						[
							11,
							"StarCount"
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5297950373748348,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						455310551731066,
						false
						,[
						[
							7,
							[
								20,
								4,
								cr.plugins_.CAMFTimeManager.prototype.exps.GetTimeValue,
								false,
								null
								,[
[
									2,
									"LevelTime"
								]
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								23,
								"2StarTime"
							]
						]
						]
					]
					],
					[
					[
						31,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						9980759352469448,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						810788504273864,
						false
						,[
						[
							11,
							"StarCount"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2976414710451002,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4592955968048225,
						false
						,[
						[
							7,
							[
								20,
								2,
								cr.plugins_.Arr.prototype.exps.At,
								false,
								null
								,[
[
									23,
									"CurrentLevel"
								]
,[
									0,
									2
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						2,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						6521379404336928,
						false
						,[
						[
							0,
							[
								23,
								"CurrentLevel"
							]
						]
,						[
							0,
							[
								0,
								2
							]
						]
,						[
							7,
							[
								20,
								4,
								cr.plugins_.CAMFTimeManager.prototype.exps.GetTimeValue,
								false,
								null
								,[
[
									2,
									"LevelTime"
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8715591627893598,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						9084725783322139,
						false
					]
					],
					[
					[
						2,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						9620788745072696,
						false
						,[
						[
							0,
							[
								23,
								"CurrentLevel"
							]
						]
,						[
							0,
							[
								0,
								2
							]
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.min
								,[
[
									20,
									2,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										23,
										"CurrentLevel"
									]
,[
										0,
										2
									]
									]
								]
,[
									20,
									4,
									cr.plugins_.CAMFTimeManager.prototype.exps.GetTimeValue,
									false,
									null
									,[
[
										2,
										"LevelTime"
									]
									]
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2975393957359825,
					[
					],
					[
					[
						2,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						5170974732536536,
						false
						,[
						[
							0,
							[
								23,
								"CurrentLevel"
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						2,
						cr.plugins_.Arr.prototype.acts.SetXY,
						null,
						2465425823050684,
						false
						,[
						[
							0,
							[
								4,
								[
									23,
									"CurrentLevel"
								]
								,[
									0,
									1
								]
							]
						]
,						[
							0,
							[
								0,
								1
							]
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						2,
						cr.plugins_.Arr.prototype.acts.SetX,
						null,
						7495179096159206,
						false
						,[
						[
							0,
							[
								23,
								"CurrentLevel"
							]
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.max
								,[
[
									20,
									2,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										23,
										"CurrentLevel"
									]
									]
								]
,[
									23,
									"StarCount"
								]
								]
							]
						]
						]
					]
,					[
						3,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						9738191643375292,
						false
						,[
						[
							1,
							[
								2,
								"Save"
							]
						]
,						[
							7,
							[
								20,
								2,
								cr.plugins_.Arr.prototype.exps.AsJSON,
								true,
								null
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "LevelCondition"],
			false,
			null,
			6429352805149656,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6429352805149656,
				false
				,[
				[
					1,
					[
						2,
						"LevelCondition"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7065659794215383,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8036326673382997,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3146031777770644,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								6
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4614947647040952,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								8
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7148733921890452,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6111824385255412,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8261674614409213,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								8
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7344328258793391,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								9
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6306815226022883,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8205378168221962,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5082446864367947,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								7
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4605220804233171,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								8
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4138055451042617,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2560139941428735,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9980594168543443,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								8
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9213709258528127,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8806688093511741,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7688839179412702,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4241459794752141,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								8
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7282054432483194,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2885035234862357,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3043778943210587,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2595801440970241,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								9
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9335102390597798,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								11
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7826565439952274,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8870297936899947,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							6
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4615254689622469,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								7
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2623685044151639,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								8
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1811358079616146,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5241617541868761,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6201901858426954,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								8
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9938244185997453,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5433974095495551,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5116125104435163,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							8
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9217146397317908,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4616849217220138,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								13
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5379923655932461,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6328593163586992,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							9
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9716605058711741,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3953055012815601,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2872903069422266,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2091443715166652,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							10
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2398004751431407,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6802623126996477,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6931487038492657,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7985159120167555,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							11
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5029431975162268,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								11
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7418011342896969,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								13
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7105281941211281,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3337583148128224,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							12
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4370456821481882,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3396583214610124,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								13
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1085817757668299,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8647166439568719,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							13
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5138148171469731,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6474476762875926,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4557584402994129,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4972552608729157,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							14
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6232388159256946,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2629825077616502,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9255861377024611,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7441355492799944,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							15
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7791535221018299,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2332720074749207,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								13
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7192171759865394,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4054026122007431,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							18
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7025968316445115,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8816094078815603,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								14
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3868211987437957,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3960968733665515,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							17
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8731134134003856,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								10
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7445898916913902,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3866217299354569,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					88245059236767,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							18
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1590448694429394,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								11
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8628902807480998,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4769328803216069,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3532649855059864,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							19
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					437412445929753,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								13
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6789955285379984,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								16
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4692373524743817,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					332526450270805,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							20
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5693052448124828,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1092092666758594,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								18
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				313050245780534,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8151117686247704,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							21
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7470165948819117,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9478245740536044,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3456345265813433,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6552936550523899,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							22
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5289362423857741,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5028824775278461,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3378318512628167,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5148406841438725,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							23
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5275967460585462,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								14
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2245590254197297,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								17
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6228745800468783,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1806428248684041,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							24
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6968194426894566,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								16
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2734888065145793,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3607560223754663,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					7700435482117619,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							25
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4916621032202512,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								14
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2738748361348645,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								19
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9227183987253812,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2725484511047022,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							26
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1218915716995305,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								13
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2308762852490477,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								17
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5592526255042986,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4875958657519235,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							27
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9229939568532487,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								20
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6175750474887329,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								25
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2252707979507078,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					6785634020992792,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							28
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2035590122378801,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								22
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1383065265179669,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								26
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6282080041699998,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4289372397015774,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							29
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7209764962037186,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								17
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8594278138655769,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								24
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4986056363836445,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4160740004728949,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1995181162237336,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								9
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7821665113081374,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								12
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5879265672066277,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5176478456463171,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							31
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2475555568030213,
					false
					,[
					[
						11,
						"3StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								15
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7654076572738624,
					false
					,[
					[
						11,
						"2StarTime"
					]
,					[
						7,
						[
							6,
							[
								0,
								17
							]
							,[
								23,
								"Second"
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "SawThorn"],
			false,
			null,
			9142429771588872,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9142429771588872,
				false
				,[
				[
					1,
					[
						2,
						"SawThorn"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1742740199849193,
				[
				],
				[
				[
					14,
					cr.plugins_.Sprite.prototype.acts.RotateClockwise,
					null,
					4132457306286529,
					false
					,[
					[
						0,
						[
							0,
							10
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7418011931714615,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Every,
					null,
					0,
					false,
					false,
					false,
					9991925591870252,
					false
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					24,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPosByDistanceAngle,
					"MoveTo",
					1545200765272853,
					false
					,[
					[
						0,
						[
							6,
							[
								20,
								24,
								cr.plugins_.Sprite.prototype.exps.Height,
								false,
								null
							]
							,[
								1,
								0.75
							]
						]
					]
,					[
						0,
						[
							5,
							[
								20,
								24,
								cr.plugins_.Sprite.prototype.exps.Angle,
								false,
								null
							]
							,[
								0,
								90
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7711352571913281,
					false
					,[
					[
						0,
						[
							1,
							0.8
						]
					]
					]
				]
,				[
					24,
					cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPosByDistanceAngle,
					"MoveTo",
					1260175044986558,
					false
					,[
					[
						0,
						[
							6,
							[
								20,
								24,
								cr.plugins_.Sprite.prototype.exps.Height,
								false,
								null
							]
							,[
								1,
								0.75
							]
						]
					]
,					[
						0,
						[
							4,
							[
								20,
								24,
								cr.plugins_.Sprite.prototype.exps.Angle,
								false,
								null
							]
							,[
								0,
								90
							]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"UI E",
		[
		[
			1,
			"CongtrolBGSwitch",
			0,
			0,
false,false,6419345142661165,false
		]
,		[
			1,
			"UIOptionNum",
			0,
			0,
false,false,6665319319784265,false
		]
,		[
			0,
			null,
			false,
			null,
			216015013102489,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				8899922231652895,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				9470384511336986,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				846519266421356,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				41,
				cr.plugins_.SpriteFontPlus.prototype.acts.MoveToLayer,
				null,
				3837292421703171,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				26,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				5534059683616923,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.MoveToBottom,
				null,
				240790749319285,
				false
			]
,			[
				26,
				cr.plugins_.Sprite.prototype.acts.MoveToTop,
				null,
				8089496750369033,
				false
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			3847160402638492,
			[
			[
				1,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				904597653825791,
				false
				,[
				[
					9,
					27
				]
				]
			]
,			[
				0,
				cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
				null,
				0,
				false,
				false,
				false,
				5847105100828017,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
,				[
					3,
					9
				]
				]
			]
,			[
				6,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				5042009936148254,
				false
				,[
				[
					4,
					58
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4902917165348125,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					4507130701758517,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.timescale
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.LayerVisible,
					null,
					0,
					false,
					true,
					false,
					5937763023477189,
					false
					,[
					[
						5,
						[
							2,
							"ResultUI"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetTimescale,
					null,
					4766115039526201,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8303130625248633,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				611695606267417,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.timescale
					]
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				3161711028804489,
				false
				,[
				[
					1,
					[
						2,
						"UISys"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				2296778161198228,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3802554143609496,
				false
				,[
				[
					11,
					"UIPostJump"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.MoveToBottom,
				null,
				465595225777991,
				false
			]
,			[
				26,
				cr.plugins_.Sprite.prototype.acts.MoveToTop,
				null,
				4722859210011497,
				false
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			783464847970851,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				4292811689552848,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.timescale
					]
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetGroupActive,
				null,
				1808521514437389,
				false
				,[
				[
					1,
					[
						2,
						"UISys"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				2053217320122589,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			[true, "UISys"],
			false,
			null,
			663019218982597,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				663019218982597,
				false
				,[
				[
					1,
					[
						2,
						"UISys"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				[true, "UISelection"],
				false,
				null,
				1304845014374806,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					1304845014374806,
					false
					,[
					[
						1,
						[
							2,
							"UISelection"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7092598876975878,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3457056367828009,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								4
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9258092081325425,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5871942166030338,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4078875002044009,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						769673315231826,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							7,
							[
								0,
								4
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2704671120601918,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.CompareAxis,
						null,
						0,
						false,
						false,
						false,
						2465031526726213,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							1
						]
,						[
							8,
							4
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						9263559799721557,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						3260561581183519,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5062511807971038,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.CompareAxis,
						null,
						0,
						false,
						false,
						false,
						6449233280575849,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							1
						]
,						[
							8,
							2
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						6495673444344962,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						6301973373225652,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2683048346716147,
					[
					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.OnKey,
						null,
						1,
						false,
						false,
						false,
						2864673344047836,
						false
						,[
						[
							9,
							40
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						3061626583880641,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4503870671785989,
					[
					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.OnKey,
						null,
						1,
						false,
						false,
						false,
						3759540185915512,
						false
						,[
						[
							9,
							38
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						1475627528876607,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1942352313346902,
					[
					[
						41,
						cr.plugins_.SpriteFontPlus.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						1645476013075431,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"UIOptionNum"
							]
						]
						]
					]
					],
					[
					[
						41,
						cr.plugins_.SpriteFontPlus.prototype.acts.SetEffectEnabled,
						null,
						5176697490691657,
						false
						,[
						[
							3,
							0
						]
,						[
							1,
							[
								2,
								"SetColor"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					782320692137578,
					[
					[
						41,
						cr.plugins_.SpriteFontPlus.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						7788613774224915,
						false
						,[
						[
							10,
							0
						]
,						[
							8,
							1
						]
,						[
							7,
							[
								23,
								"UIOptionNum"
							]
						]
						]
					]
					],
					[
					[
						41,
						cr.plugins_.SpriteFontPlus.prototype.acts.SetEffectEnabled,
						null,
						6086600977733587,
						false
						,[
						[
							3,
							1
						]
,						[
							1,
							[
								2,
								"SetColor"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "UIPost"],
				false,
				null,
				5986404201666445,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					5986404201666445,
					false
					,[
					[
						1,
						[
							2,
							"UIPost"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8251670200341324,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3167328708395432,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						true,
						null,
						9942388660454106,
						[
						[
							0,
							cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
							null,
							0,
							false,
							false,
							false,
							29778356249711,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							1,
							cr.plugins_.Keyboard.prototype.cnds.OnKey,
							null,
							1,
							false,
							false,
							false,
							6392905753115122,
							false
							,[
							[
								9,
								13
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetTimescale,
							null,
							4235265064970212,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetLayerVisible,
							null,
							2779088404402214,
							false
							,[
							[
								5,
								[
									2,
									"UI"
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							3195448440352872,
							false
							,[
							[
								0,
								[
									1,
									0.2
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6177176912882134,
							false
							,[
							[
								11,
								"UIPostJump"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8936232498567908,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5306925245826121,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						true,
						null,
						2121166204288209,
						[
						[
							0,
							cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
							null,
							0,
							false,
							false,
							false,
							3121917479642662,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							1,
							cr.plugins_.Keyboard.prototype.cnds.OnKey,
							null,
							1,
							false,
							false,
							false,
							6731638935344106,
							false
							,[
							[
								9,
								13
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetTimescale,
							null,
							9528328779875803,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetLayerVisible,
							null,
							9768276599436837,
							false
							,[
							[
								5,
								[
									2,
									"UI"
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.GoToLayout,
							null,
							7819079082510701,
							false
							,[
							[
								6,
								"LevelPage"
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4978938577326919,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						836948024105056,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						true,
						null,
						8918841747428643,
						[
						[
							0,
							cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
							null,
							0,
							false,
							false,
							false,
							3663250106959895,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							1,
							cr.plugins_.Keyboard.prototype.cnds.OnKey,
							null,
							1,
							false,
							false,
							false,
							2599467738196052,
							false
							,[
							[
								9,
								13
							]
							]
						]
						],
						[
						[
							26,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							9842141842495391,
							false
							,[
							[
								0,
								[
									0,
									640
								]
							]
,							[
								0,
								[
									0,
									360
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1999182917548063,
							false
							,[
							[
								11,
								"CongtrolBGSwitch"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetGroupActive,
							null,
							1359066737311447,
							false
							,[
							[
								1,
								[
									2,
									"UISelection"
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetGroupActive,
							null,
							9850024902873424,
							false
							,[
							[
								1,
								[
									2,
									"UIPost"
								]
							]
,							[
								3,
								0
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					4923953561012406,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8868539905679376,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						true,
						null,
						8565929145075493,
						[
						[
							0,
							cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
							null,
							0,
							false,
							false,
							false,
							9508845704901287,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							1,
							cr.plugins_.Keyboard.prototype.cnds.OnKey,
							null,
							1,
							false,
							false,
							false,
							6329265100071244,
							false
							,[
							[
								9,
								13
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetTimescale,
							null,
							2934755666297371,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetLayerVisible,
							null,
							4345914454025801,
							false
							,[
							[
								5,
								[
									2,
									"UI"
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.GoToLayout,
							null,
							5545271726672467,
							false
							,[
							[
								6,
								"Menu"
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1325929289547834,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4181840863506581,
						false
						,[
						[
							11,
							"UIOptionNum"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								4
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						true,
						null,
						3552264071816562,
						[
						[
							0,
							cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
							null,
							0,
							false,
							false,
							false,
							2108125684766309,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							1,
							cr.plugins_.Keyboard.prototype.cnds.OnKey,
							null,
							1,
							false,
							false,
							false,
							2773611632172021,
							false
							,[
							[
								9,
								13
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetTimescale,
							null,
							1472711055857761,
							false
							,[
							[
								0,
								[
									1,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetLayerVisible,
							null,
							1586539563544481,
							false
							,[
							[
								5,
								[
									2,
									"UI"
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.Wait,
							null,
							2784467305671758,
							false
							,[
							[
								0,
								[
									1,
									0.2
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5446100428917021,
							false
							,[
							[
								11,
								"UIPostJump"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					5168591747279496,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
						null,
						0,
						false,
						false,
						false,
						765090289625344,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							1
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						2614601093759099,
						false
						,[
						[
							0,
							[
								1,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						8357473466824203,
						false
						,[
						[
							5,
							[
								2,
								"UI"
							]
						]
,						[
							3,
							0
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						9791821964739655,
						false
						,[
						[
							0,
							[
								1,
								0.2
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						92263768647519,
						false
						,[
						[
							11,
							"UIPostJump"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					[true, "Touch"],
					false,
					null,
					595308353861656,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						595308353861656,
						false
						,[
						[
							1,
							[
								2,
								"Touch"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						6134736315418387,
						[
						[
							6,
							cr.plugins_.Touch.prototype.cnds.OnTouchObject,
							null,
							1,
							false,
							false,
							false,
							7274078533481343,
							false
							,[
							[
								4,
								41
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							true,
							null,
							9651600778531902,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								1260103749181031,
								false
								,[
								[
									7,
									[
										21,
										41,
										false,
										null
										,0
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								2749382056609929,
								false
								,[
								[
									7,
									[
										21,
										41,
										false,
										null
										,0
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										4
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetTimescale,
								null,
								6826320553957599,
								false
								,[
								[
									0,
									[
										1,
										1
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetLayerVisible,
								null,
								6917798580633808,
								false
								,[
								[
									5,
									[
										2,
										"UI"
									]
								]
,								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.Wait,
								null,
								5224272724222338,
								false
								,[
								[
									0,
									[
										1,
										0.2
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetVar,
								null,
								1891283463913795,
								false
								,[
								[
									11,
									"UIPostJump"
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3756567613562755,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								8510902354082495,
								false
								,[
								[
									7,
									[
										21,
										41,
										false,
										null
										,0
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetTimescale,
								null,
								2809967762206535,
								false
								,[
								[
									0,
									[
										1,
										1
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetLayerVisible,
								null,
								5085505077953751,
								false
								,[
								[
									5,
									[
										2,
										"UI"
									]
								]
,								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.GoToLayout,
								null,
								920527206841454,
								false
								,[
								[
									6,
									"LevelPage"
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							6108397289423053,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								6355335958786439,
								false
								,[
								[
									7,
									[
										21,
										41,
										false,
										null
										,0
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										3
									]
								]
								]
							]
							],
							[
							[
								-1,
								cr.system_object.prototype.acts.SetTimescale,
								null,
								9593037316196792,
								false
								,[
								[
									0,
									[
										1,
										1
									]
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetLayerVisible,
								null,
								8696905162048085,
								false
								,[
								[
									5,
									[
										2,
										"UI"
									]
								]
,								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.GoToLayout,
								null,
								4909147248036391,
								false
								,[
								[
									6,
									"Menu"
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "ControlBG"],
				false,
				null,
				8512215259483065,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					8512215259483065,
					false
					,[
					[
						1,
						[
							2,
							"ControlBG"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					802329505649573,
					[
					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.OnKey,
						null,
						1,
						false,
						false,
						false,
						6211810338511088,
						false
						,[
						[
							9,
							27
						]
						]
					]
,					[
						0,
						cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
						null,
						0,
						false,
						false,
						false,
						4180450504190243,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							1
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						2504560741648407,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							7633883885859573,
							false
							,[
							[
								11,
								"CongtrolBGSwitch"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							26,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							5002068415640201,
							false
							,[
							[
								0,
								[
									0,
									640
								]
							]
,							[
								0,
								[
									0,
									1280
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7138296317413961,
							false
							,[
							[
								11,
								"CongtrolBGSwitch"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetGroupActive,
							null,
							9348476135062919,
							false
							,[
							[
								1,
								[
									2,
									"UIPost"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetGroupActive,
							null,
							9347995378995148,
							false
							,[
							[
								1,
								[
									2,
									"UISelection"
								]
							]
,							[
								3,
								1
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"LevelPage E",
		[
		[
			1,
			"StarKongregate",
			0,
			0,
false,false,124993366890077,false
		]
,		[
			1,
			"Levels",
			0,
			0,
false,false,1101768357656318,false
		]
,		[
			0,
			null,
			false,
			null,
			1136668340748716,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				7557340992166032,
				false
			]
			],
			[
			[
				34,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				2502631999712698,
				false
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				4438428910032219,
				[
				],
				[
				[
					56,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					1839132659620698,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					57,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					9013100334277014,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					6601191557639191,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					55,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					6448317633062358,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					58,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					1389038020722875,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7809790394150283,
				[
				[
					3,
					cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
					null,
					0,
					false,
					false,
					false,
					4326448393493701,
					false
					,[
					[
						1,
						[
							2,
							"Save"
						]
					]
					]
				]
				],
				[
				[
					2,
					cr.plugins_.Arr.prototype.acts.JSONLoad,
					null,
					7533336954278291,
					false
					,[
					[
						1,
						[
							20,
							3,
							cr.plugins_.WebStorage.prototype.exps.LocalValue,
							true,
							null
							,[
[
								2,
								"Save"
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6210871647504815,
					false
					,[
					[
						11,
						"StarKongregate"
					]
,					[
						7,
						[
							4,
							[
								4,
								[
									4,
									[
										4,
										[
											4,
											[
												4,
												[
													4,
													[
														4,
														[
															4,
															[
																4,
																[
																	4,
																	[
																		4,
																		[
																			4,
																			[
																				4,
																				[
																					4,
																					[
																						4,
																						[
																							4,
																							[
																								4,
																								[
																									4,
																									[
																										4,
																										[
																											4,
																											[
																												4,
																												[
																													4,
																													[
																														4,
																														[
																															4,
																															[
																																4,
																																[
																																	4,
																																	[
																																		4,
																																		[
																																			4,
																																			[
																																				4,
																																				[
																																					4,
																																					[
																																						20,
																																						2,
																																						cr.plugins_.Arr.prototype.exps.At,
																																						false,
																																						null
																																						,[
[
																																							0,
																																							0
																																						]
																																						]
																																					]
																																					,[
																																						20,
																																						2,
																																						cr.plugins_.Arr.prototype.exps.At,
																																						false,
																																						null
																																						,[
[
																																							0,
																																							1
																																						]
																																						]
																																					]
																																				]
																																				,[
																																					20,
																																					2,
																																					cr.plugins_.Arr.prototype.exps.At,
																																					false,
																																					null
																																					,[
[
																																						0,
																																						2
																																					]
																																					]
																																				]
																																			]
																																			,[
																																				20,
																																				2,
																																				cr.plugins_.Arr.prototype.exps.At,
																																				false,
																																				null
																																				,[
[
																																					0,
																																					3
																																				]
																																				]
																																			]
																																		]
																																		,[
																																			20,
																																			2,
																																			cr.plugins_.Arr.prototype.exps.At,
																																			false,
																																			null
																																			,[
[
																																				0,
																																				4
																																			]
																																			]
																																		]
																																	]
																																	,[
																																		20,
																																		2,
																																		cr.plugins_.Arr.prototype.exps.At,
																																		false,
																																		null
																																		,[
[
																																			0,
																																			5
																																		]
																																		]
																																	]
																																]
																																,[
																																	20,
																																	2,
																																	cr.plugins_.Arr.prototype.exps.At,
																																	false,
																																	null
																																	,[
[
																																		0,
																																		6
																																	]
																																	]
																																]
																															]
																															,[
																																20,
																																2,
																																cr.plugins_.Arr.prototype.exps.At,
																																false,
																																null
																																,[
[
																																	0,
																																	7
																																]
																																]
																															]
																														]
																														,[
																															20,
																															2,
																															cr.plugins_.Arr.prototype.exps.At,
																															false,
																															null
																															,[
[
																																0,
																																8
																															]
																															]
																														]
																													]
																													,[
																														20,
																														2,
																														cr.plugins_.Arr.prototype.exps.At,
																														false,
																														null
																														,[
[
																															0,
																															9
																														]
																														]
																													]
																												]
																												,[
																													20,
																													2,
																													cr.plugins_.Arr.prototype.exps.At,
																													false,
																													null
																													,[
[
																														0,
																														10
																													]
																													]
																												]
																											]
																											,[
																												20,
																												2,
																												cr.plugins_.Arr.prototype.exps.At,
																												false,
																												null
																												,[
[
																													0,
																													11
																												]
																												]
																											]
																										]
																										,[
																											20,
																											2,
																											cr.plugins_.Arr.prototype.exps.At,
																											false,
																											null
																											,[
[
																												0,
																												12
																											]
																											]
																										]
																									]
																									,[
																										20,
																										2,
																										cr.plugins_.Arr.prototype.exps.At,
																										false,
																										null
																										,[
[
																											0,
																											13
																										]
																										]
																									]
																								]
																								,[
																									20,
																									2,
																									cr.plugins_.Arr.prototype.exps.At,
																									false,
																									null
																									,[
[
																										0,
																										14
																									]
																									]
																								]
																							]
																							,[
																								20,
																								2,
																								cr.plugins_.Arr.prototype.exps.At,
																								false,
																								null
																								,[
[
																									0,
																									15
																								]
																								]
																							]
																						]
																						,[
																							20,
																							2,
																							cr.plugins_.Arr.prototype.exps.At,
																							false,
																							null
																							,[
[
																								0,
																								16
																							]
																							]
																						]
																					]
																					,[
																						20,
																						2,
																						cr.plugins_.Arr.prototype.exps.At,
																						false,
																						null
																						,[
[
																							0,
																							17
																						]
																						]
																					]
																				]
																				,[
																					20,
																					2,
																					cr.plugins_.Arr.prototype.exps.At,
																					false,
																					null
																					,[
[
																						0,
																						18
																					]
																					]
																				]
																			]
																			,[
																				20,
																				2,
																				cr.plugins_.Arr.prototype.exps.At,
																				false,
																				null
																				,[
[
																					0,
																					19
																				]
																				]
																			]
																		]
																		,[
																			20,
																			2,
																			cr.plugins_.Arr.prototype.exps.At,
																			false,
																			null
																			,[
[
																				0,
																				20
																			]
																			]
																		]
																	]
																	,[
																		20,
																		2,
																		cr.plugins_.Arr.prototype.exps.At,
																		false,
																		null
																		,[
[
																			0,
																			21
																		]
																		]
																	]
																]
																,[
																	20,
																	2,
																	cr.plugins_.Arr.prototype.exps.At,
																	false,
																	null
																	,[
[
																		0,
																		22
																	]
																	]
																]
															]
															,[
																20,
																2,
																cr.plugins_.Arr.prototype.exps.At,
																false,
																null
																,[
[
																	0,
																	23
																]
																]
															]
														]
														,[
															20,
															2,
															cr.plugins_.Arr.prototype.exps.At,
															false,
															null
															,[
[
																0,
																24
															]
															]
														]
													]
													,[
														20,
														2,
														cr.plugins_.Arr.prototype.exps.At,
														false,
														null
														,[
[
															0,
															25
														]
														]
													]
												]
												,[
													20,
													2,
													cr.plugins_.Arr.prototype.exps.At,
													false,
													null
													,[
[
														0,
														26
													]
													]
												]
											]
											,[
												20,
												2,
												cr.plugins_.Arr.prototype.exps.At,
												false,
												null
												,[
[
													0,
													27
												]
												]
											]
										]
										,[
											20,
											2,
											cr.plugins_.Arr.prototype.exps.At,
											false,
											null
											,[
[
												0,
												28
											]
											]
										]
									]
									,[
										20,
										2,
										cr.plugins_.Arr.prototype.exps.At,
										false,
										null
										,[
[
											0,
											29
										]
										]
									]
								]
								,[
									20,
									2,
									cr.plugins_.Arr.prototype.exps.At,
									false,
									null
									,[
[
										0,
										30
									]
									]
								]
							]
							,[
								20,
								2,
								cr.plugins_.Arr.prototype.exps.At,
								false,
								null
								,[
[
									0,
									31
								]
								]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7007812598436261,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					9675428559566593,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					4434687075789511,
					false
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							20,
							2,
							cr.plugins_.Arr.prototype.exps.At,
							false,
							null
							,[
[
								21,
								34,
								false,
								null
								,0
							]
,[
								0,
								1
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6024062129748039,
				[
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					8025844625450908,
					false
					,[
					[
						10,
						1
					]
,					[
						7,
						[
							20,
							2,
							cr.plugins_.Arr.prototype.exps.At,
							false,
							null
							,[
[
								21,
								34,
								false,
								null
								,0
							]
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7380082870853844,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				8773998325740388,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				8906307399588056,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				31,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				3295598537466194,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				32,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				1885452130261442,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				30,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				3176689382514543,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				7330308944843007,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				3232147421451691,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				7298101277782488,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				31,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				6802676921754113,
				false
			]
,			[
				33,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				560984733519515,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				30,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				354883876430913,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				32,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				3101881033526949,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				28,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				703652553059366,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				5484546971053765,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				30,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				2543851325893742,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				32,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				7294832020856263,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				33,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				6901559252792271,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.ZMoveToObject,
				null,
				635522856955924,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					30
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				9891786094895763,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				6887669245116215,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				41,
				cr.plugins_.SpriteFontPlus.prototype.acts.MoveToLayer,
				null,
				1302029997369051,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				26,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				4496276523419843,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.MoveToBottom,
				null,
				8610746830631053,
				false
			]
,			[
				26,
				cr.plugins_.Sprite.prototype.acts.MoveToTop,
				null,
				6471618241067493,
				false
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8931906391314861,
			[
			[
				34,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				9069613885212071,
				false
				,[
				[
					10,
					1
				]
,				[
					8,
					4
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetAnim,
				null,
				4161645456131916,
				false
				,[
				[
					1,
					[
						2,
						"star"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				8524794246106055,
				false
				,[
				[
					0,
					[
						5,
						[
							21,
							34,
							false,
							null
							,1
						]
						,[
							0,
							1
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9545167181878185,
			[
			[
				34,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				1217934631487305,
				false
				,[
				[
					10,
					1
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetAnim,
				null,
				2832799193622171,
				false
				,[
				[
					1,
					[
						2,
						"lock"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				2243445061452468,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8074275778495932,
					false
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8646468654478564,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5522249550899755,
				[
				[
					34,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3419130959400246,
					false
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					34,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1449350462152262,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4051230490341257,
			[
			],
			[
			[
				36,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				3035854365629188,
				false
				,[
				[
					7,
					[
						10,
						[
							2,
							"Level:"
						]
						,[
							4,
							[
								23,
								"CurrentLevel"
							]
							,[
								0,
								1
							]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6063501040899957,
			[
			[
				-1,
				cr.system_object.prototype.cnds.ForEach,
				null,
				0,
				true,
				false,
				false,
				8281416176367605,
				false
				,[
				[
					4,
					34
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3859634593752568,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1347568369315414,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							21,
							34,
							false,
							null
							,0
						]
					]
					]
				]
				],
				[
				[
					35,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					6355458515028871,
					false
					,[
					[
						0,
						[
							5,
							[
								20,
								34,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								2
							]
						]
					]
,					[
						0,
						[
							5,
							[
								20,
								34,
								cr.plugins_.Sprite.prototype.exps.Y,
								false,
								null
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7954800708088362,
			[
			[
				1,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				8909593098212361,
				false
				,[
				[
					9,
					89
				]
				]
			]
			],
			[
			[
				3,
				cr.plugins_.WebStorage.prototype.acts.ClearLocal,
				null,
				6410189193695657,
				false
			]
			]
		]
,		[
			0,
			[true, "GamepadSelection"],
			false,
			null,
			6546172089104712,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6546172089104712,
				false
				,[
				[
					1,
					[
						2,
						"GamepadSelection"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1508567788433935,
				[
				[
					0,
					cr.plugins_.gamepad.prototype.cnds.CompareAxis,
					null,
					0,
					false,
					false,
					false,
					5244277231268501,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
,					[
						3,
						0
					]
,					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					2296965203652239,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7259484687401627,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7175668220067417,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								31
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					8463455934106347,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						5620919075010044,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						4622625220122517,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5320429323335658,
				[
				[
					0,
					cr.plugins_.gamepad.prototype.cnds.CompareAxis,
					null,
					0,
					false,
					false,
					false,
					9149226731350571,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
,					[
						3,
						0
					]
,					[
						8,
						2
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					7228871431350878,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5406091653981437,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9877700120894554,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					786191527303675,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						1286070407933238,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						8448323297235697,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "KeyboardSelection"],
			false,
			null,
			8130525947894097,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8130525947894097,
				false
				,[
				[
					1,
					[
						2,
						"KeyboardSelection"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				7479910662110749,
				[
				[
					1,
					cr.plugins_.Keyboard.prototype.cnds.OnKey,
					null,
					1,
					false,
					false,
					false,
					4329467539791392,
					false
					,[
					[
						9,
						40
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4854777541678406,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						612837362546358,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								24
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					9689360423556774,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						5828497764767466,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						4691876582440544,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							7,
							[
								0,
								8
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6671969169190482,
				[
				[
					1,
					cr.plugins_.Keyboard.prototype.cnds.OnKey,
					null,
					1,
					false,
					false,
					false,
					5030421968319404,
					false
					,[
					[
						9,
						38
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7707193704356781,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1560763206416598,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								7
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					6206473718703358,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						7371059355300696,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						5053824859515477,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							7,
							[
								0,
								-8
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1508567788433935,
				[
				[
					1,
					cr.plugins_.Keyboard.prototype.cnds.OnKey,
					null,
					1,
					false,
					false,
					false,
					3870997727934142,
					false
					,[
					[
						9,
						39
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7259484687401627,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7175668220067417,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								31
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					8463455934106347,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						5620919075010044,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						4622625220122517,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5320429323335658,
				[
				[
					1,
					cr.plugins_.Keyboard.prototype.cnds.OnKey,
					null,
					1,
					false,
					false,
					false,
					37842521307713,
					false
					,[
					[
						9,
						37
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5406091653981437,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9877700120894554,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					786191527303675,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						1286070407933238,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						8448323297235697,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			1255486715117687,
			[
			[
				0,
				cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
				null,
				0,
				false,
				false,
				false,
				2907592817110112,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				1,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				7711960065154879,
				false
				,[
				[
					9,
					13
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				300392023237247,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					9764706032603615,
					false
					,[
					[
						4,
						34
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					782392406515199,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9193179980816023,
						false
						,[
						[
							7,
							[
								21,
								34,
								false,
								null
								,2
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8081747044857658,
						false
						,[
						[
							7,
							[
								21,
								34,
								false,
								null
								,0
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"CurrentLevel"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.GoToLayoutByName,
						null,
						6490710000384558,
						false
						,[
						[
							1,
							[
								2,
								"UIPost"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			6339974130311941,
			[
			[
				0,
				cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
				null,
				0,
				false,
				false,
				false,
				545094975532301,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				1,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				6053560992995312,
				false
				,[
				[
					9,
					27
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				356118712744208,
				false
				,[
				[
					6,
					"Menu"
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Kongregate"],
			false,
			null,
			7872512715287092,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7872512715287092,
				false
				,[
				[
					1,
					[
						2,
						"Kongregate"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3213655019207507,
				[
				],
				[
				[
					46,
					cr.plugins_.Spritefont2.prototype.acts.SetText,
					null,
					2807272797339273,
					false
					,[
					[
						7,
						[
							10,[
								23,
								"StarKongregate"
							]
							,
							[
								2,
								"PONTOS"
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9666309423774898,
				[
				[
					6,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					1324902824067705,
					false
					,[
					[
						4,
						47
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4434694778378604,
					[
					[
						5,
						cr.plugins_.Kongregate.prototype.cnds.IsGuest,
						null,
						0,
						false,
						false,
						false,
						1783935838615314,
						false
					]
					],
					[
					[
						5,
						cr.plugins_.Kongregate.prototype.acts.ShowSignInBox,
						null,
						3533740463590242,
						false
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2393574902568792,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						9477537620146164,
						false
					]
					],
					[
					[
						5,
						cr.plugins_.Kongregate.prototype.acts.SubmitStat,
						null,
						1907907695540542,
						false
						,[
						[
							1,
							[
								2,
								"Stars"
							]
						]
,						[
							0,
							[
								23,
								"StarKongregate"
							]
						]
						]
					]
,					[
						48,
						cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
						"MoveTo",
						3807295117988882,
						false
						,[
						[
							0,
							[
								20,
								48,
								cr.plugins_.Spritefont2.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								0,
								30
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						5309064321765772,
						false
						,[
						[
							0,
							[
								0,
								2
							]
						]
						]
					]
,					[
						48,
						cr.behaviors.Rex_MoveTo.prototype.acts.SetTargetPos,
						"MoveTo",
						3672084574679493,
						false
						,[
						[
							0,
							[
								20,
								48,
								cr.plugins_.Spritefont2.prototype.exps.X,
								false,
								null
							]
						]
,						[
							0,
							[
								0,
								-32
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Touch"],
			false,
			null,
			8507731519118926,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8507731519118926,
				false
				,[
				[
					1,
					[
						2,
						"Touch"
					]
				]
				]
			]
			],
			[
			]
		]
,		[
			0,
			null,
			false,
			null,
			7761780451255159,
			[
			[
				6,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				4219470995750181,
				false
				,[
				[
					4,
					34
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5243594173694186,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6221626845368484,
					false
					,[
					[
						7,
						[
							21,
							34,
							false,
							null
							,2
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4113405511700881,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						7,
						[
							21,
							34,
							false,
							null
							,0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.GoToLayoutByName,
					null,
					1966900561254013,
					false
					,[
					[
						1,
						[
							2,
							"UIPost"
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Menu E",
		[
		[
			2,
			"CharacterControl E",
			false
		]
,		[
			0,
			null,
			false,
			null,
			7382075935709253,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5162401025222966,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				6174847584159506,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				8971134405191316,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				41,
				cr.plugins_.SpriteFontPlus.prototype.acts.MoveToLayer,
				null,
				6274780556572164,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				26,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				7448619984176045,
				false
				,[
				[
					5,
					[
						2,
						"UI"
					]
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.MoveToBottom,
				null,
				170173814626263,
				false
			]
,			[
				26,
				cr.plugins_.Sprite.prototype.acts.MoveToTop,
				null,
				5689311716674297,
				false
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				7625468080292817,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				31,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				7906417760404684,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				32,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				523057686124668,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				30,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				739302433768271,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				860981653260644,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				5594102612069338,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				6593105817365229,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				31,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				3417140492536871,
				false
			]
,			[
				33,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				9924349334722072,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				30,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				2876909728057079,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				32,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				350322568374202,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				28,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				9793425527579876,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				3338091278755988,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				30,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				4349942069963376,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				32,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				5844927321247544,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				33,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				77215113032268,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.ZMoveToObject,
				null,
				548280933964202,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					30
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				267809936211066,
				[
				],
				[
				[
					56,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					4330027816443153,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					58,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					3054618278973674,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					57,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					8114721485125335,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					54,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					5946568920319727,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
,				[
					55,
					cr.plugins_.Sprite.prototype.acts.MoveToLayer,
					null,
					1484532171318982,
					false
					,[
					[
						5,
						[
							2,
							"TouchPad"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			3685817878309568,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5931503551062988,
				false
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				6220151182880414,
				false
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				6855318946414724,
				false
				,[
				[
					5,
					[
						2,
						"StartButton"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4500987177709861,
				false
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				7346120059327844,
				false
				,[
				[
					5,
					[
						2,
						"StartButton"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			null,
			4191473346336989,
			[
			[
				0,
				cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
				null,
				0,
				false,
				false,
				false,
				9837461731807926,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
,				[
					3,
					9
				]
				]
			]
,			[
				1,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				3939662346698185,
				false
				,[
				[
					9,
					13
				]
				]
			]
,			[
				6,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				6798252066705772,
				false
				,[
				[
					4,
					58
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				8484043435892333,
				false
				,[
				[
					6,
					"LevelPage"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8092486250793522,
			[
			[
				6,
				cr.plugins_.Touch.prototype.cnds.OnTouchObject,
				null,
				1,
				false,
				false,
				false,
				1879871531302872,
				false
				,[
				[
					4,
					43
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5721592302444899,
				[
				[
					43,
					cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					4401672689163611,
					false
					,[
					[
						10,
						0
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					43,
					cr.plugins_.Spritefont2.prototype.acts.SetVisible,
					null,
					4086052285287175,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"UIPost E",
		[
		[
			0,
			null,
			false,
			null,
			9941458148539329,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5498812445977673,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				9822661314359913,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Lv"
						]
						,[
							23,
							"CurrentLevel"
						]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"ResultUI E",
		[
		[
			1,
			"RetryNext",
			0,
			0,
false,false,6578920607596501,false
		]
,		[
			0,
			null,
			false,
			null,
			5659821565225105,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				6950357773531954,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				1157342787930281,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				31,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				3733555568413181,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				32,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				2688190580236553,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				30,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				2419502095003472,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				69068696782042,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				8089214217908547,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Spritefont2.prototype.acts.MoveToLayer,
				null,
				7169358837554443,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
,			[
				31,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				4656875859171717,
				false
			]
,			[
				33,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				388699043099179,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				30,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				9498876470221139,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				32,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				3701322426977177,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				28,
				cr.behaviors.Pin.prototype.acts.Pin,
				"Pin",
				1922733930013069,
				false
				,[
				[
					4,
					31
				]
,				[
					3,
					0
				]
				]
			]
,			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				9191436413486629,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				30,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				2120239336518944,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				32,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				8087654274078202,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				33,
				cr.plugins_.Spritefont2.prototype.acts.ZMoveToObject,
				null,
				92407377151572,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					31
				]
				]
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.ZMoveToObject,
				null,
				6764767585267893,
				false
				,[
				[
					3,
					0
				]
,				[
					4,
					30
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1136041783184267,
			[
			[
				50,
				cr.plugins_.Sprite.prototype.cnds.OnCollision,
				null,
				0,
				false,
				false,
				true,
				7814590863538499,
				false
				,[
				[
					4,
					51
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetLayerVisible,
				null,
				4104173274916745,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				31,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5971785366832047,
				false
				,[
				[
					0,
					[
						0,
						640
					]
				]
,				[
					0,
					[
						0,
						360
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				5905468652183507,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8006430479542926,
					false
					,[
					[
						11,
						"CurrentLevel"
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							31
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					3158159733071046,
					false
					,[
					[
						5,
						[
							2,
							"AllComplete"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1402923112010907,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3425595469890267,
				false
				,[
				[
					11,
					"RetryNext"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						-1
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				108539329259837,
				false
				,[
				[
					0,
					[
						20,
						30,
						cr.plugins_.Spritefont2.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						30,
						cr.plugins_.Spritefont2.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5680426039004119,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3377408659990874,
				false
				,[
				[
					11,
					"RetryNext"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				9957251543181039,
				false
				,[
				[
					0,
					[
						20,
						33,
						cr.plugins_.Spritefont2.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						33,
						cr.plugins_.Spritefont2.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6654093188886882,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2352677764833547,
				false
				,[
				[
					11,
					"RetryNext"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1528217704804602,
				false
				,[
				[
					0,
					[
						20,
						32,
						cr.plugins_.Spritefont2.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						32,
						cr.plugins_.Spritefont2.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			685905904626557,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				7463582780567708,
				false
				,[
				[
					11,
					"RetryNext"
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						-1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2573744907597206,
				false
				,[
				[
					11,
					"RetryNext"
				]
,				[
					7,
					[
						0,
						-1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7524772565845991,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4858732776455508,
				false
				,[
				[
					11,
					"RetryNext"
				]
,				[
					8,
					4
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2978893624820983,
				false
				,[
				[
					11,
					"RetryNext"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			453339558872295,
			[
			[
				-1,
				cr.system_object.prototype.cnds.LayerVisible,
				null,
				0,
				false,
				false,
				false,
				2498399849287326,
				false
				,[
				[
					5,
					[
						2,
						"ResultUI"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8568997783100534,
				[
				[
					0,
					cr.plugins_.gamepad.prototype.cnds.CompareAxis,
					null,
					0,
					false,
					false,
					false,
					8261382486677755,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
,					[
						3,
						0
					]
,					[
						8,
						2
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					796944811486426,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					6074073144937433,
					false
					,[
					[
						11,
						"RetryNext"
					]
,					[
						7,
						[
							0,
							-1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4967382023186541,
				[
				[
					0,
					cr.plugins_.gamepad.prototype.cnds.CompareAxis,
					null,
					0,
					false,
					false,
					false,
					8315806957263848,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
,					[
						3,
						0
					]
,					[
						8,
						4
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					4510797636824561,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4546996450164921,
					false
					,[
					[
						11,
						"RetryNext"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6595351235551188,
				[
				[
					1,
					cr.plugins_.Keyboard.prototype.cnds.OnKey,
					null,
					1,
					false,
					false,
					false,
					8165701936266469,
					false
					,[
					[
						9,
						37
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					900736061456678,
					false
					,[
					[
						11,
						"RetryNext"
					]
,					[
						7,
						[
							0,
							-1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4851315444235352,
				[
				[
					1,
					cr.plugins_.Keyboard.prototype.cnds.OnKey,
					null,
					1,
					false,
					false,
					false,
					1182271302923092,
					false
					,[
					[
						9,
						39
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					6685243128590689,
					false
					,[
					[
						11,
						"RetryNext"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6302243435398857,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					8475611963556423,
					false
					,[
					[
						11,
						"RetryNext"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							-1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					9985997355343929,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
						null,
						0,
						false,
						false,
						false,
						4189031441514262,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							0
						]
						]
					]
,					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.OnKey,
						null,
						1,
						false,
						false,
						false,
						8760688785425432,
						false
						,[
						[
							9,
							13
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.RestartLayout,
						null,
						9407594493763321,
						false
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5473298003728589,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4759491112098536,
					false
					,[
					[
						11,
						"RetryNext"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					589929057074522,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
						null,
						0,
						false,
						false,
						false,
						4583946276590282,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							0
						]
						]
					]
,					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.OnKey,
						null,
						1,
						false,
						false,
						false,
						6902208884338515,
						false
						,[
						[
							9,
							13
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						7661241835966347,
						false
						,[
						[
							6,
							"LevelPage"
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1150656821566805,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5844250038614898,
					false
					,[
					[
						11,
						"RetryNext"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					true,
					null,
					9205796178640155,
					[
					[
						0,
						cr.plugins_.gamepad.prototype.cnds.OnButtonDown,
						null,
						0,
						false,
						false,
						false,
						6983915099820714,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							3,
							0
						]
						]
					]
,					[
						1,
						cr.plugins_.Keyboard.prototype.cnds.OnKey,
						null,
						1,
						false,
						false,
						false,
						6303926660368993,
						false
						,[
						[
							9,
							13
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						9626495538802549,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							751270956407813,
							false
							,[
							[
								11,
								"CurrentLevel"
							]
,							[
								8,
								5
							]
,							[
								7,
								[
									0,
									31
								]
							]
							]
						]
						],
						[
						]
					]
,					[
						0,
						null,
						false,
						null,
						9445724056321539,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							2399681058595978,
							false
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.GoToLayoutByName,
							null,
							1482105938425898,
							false
							,[
							[
								1,
								[
									10,
									[
										2,
										"Lv"
									]
									,[
										4,
										[
											23,
											"CurrentLevel"
										]
										,[
											0,
											1
										]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.AddVar,
							null,
							6351922698873184,
							false
							,[
							[
								11,
								"CurrentLevel"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			236074664032824,
			[
			[
				28,
				cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				3295102830838341,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				8703564316418111,
				false
				,[
				[
					7,
					[
						20,
						4,
						cr.plugins_.CAMFTimeManager.prototype.exps.ConvertNumberToMMSSMM,
						true,
						null
						,[
[
							23,
							"2StarTime"
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4328468416141183,
			[
			[
				28,
				cr.plugins_.Spritefont2.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				5492582533656049,
				false
				,[
				[
					10,
					0
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				28,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				4007592878630195,
				false
				,[
				[
					7,
					[
						20,
						4,
						cr.plugins_.CAMFTimeManager.prototype.exps.ConvertNumberToMMSSMM,
						true,
						null
						,[
[
							23,
							"3StarTime"
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Touch"],
			false,
			null,
			9503773711417701,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9503773711417701,
				false
				,[
				[
					1,
					[
						2,
						"Touch"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6499919719480389,
				[
				[
					6,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					9492991250184081,
					false
					,[
					[
						4,
						33
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					2369177880200697,
					false
					,[
					[
						6,
						"LevelPage"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9787032938607983,
				[
				[
					6,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					2188207668716853,
					false
					,[
					[
						4,
						30
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.RestartLayout,
					null,
					283968093896813,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3217877385558977,
				[
				[
					6,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					6747406863885741,
					false
					,[
					[
						4,
						32
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8952747039412658,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6337841133065325,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								31
							]
						]
						]
					]
					],
					[
					]
				]
,				[
					0,
					null,
					false,
					null,
					299093715447111,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						7368201232407528,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.GoToLayoutByName,
						null,
						7139389738025378,
						false
						,[
						[
							1,
							[
								10,
								[
									2,
									"Lv"
								]
								,[
									4,
									[
										23,
										"CurrentLevel"
									]
									,[
										0,
										1
									]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						9778952360346291,
						false
						,[
						[
							11,
							"CurrentLevel"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"Loader E",
		[
		[
			0,
			null,
			false,
			null,
			6086086774117724,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				1138844847444178,
				false
			]
			],
			[
			[
				45,
				cr.plugins_.TiledBg.prototype.acts.SetWidth,
				null,
				3237847373018498,
				false
				,[
				[
					0,
					[
						6,
						[
							19,
							cr.system_object.prototype.exps.loadingprogress
						]
						,[
							0,
							400
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8095150484565201,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLoadFinished,
				null,
				1,
				false,
				false,
				false,
				5280738663610055,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				8770092808549591,
				false
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				3224099938420497,
				false
				,[
				[
					6,
					"Menu"
				]
				]
			]
			]
		]
		]
	]
	],
	"media/",
	false,
	1280,
	720,
	4,
	true,
	true,
	false,
	"1.0.0.3",
	true,
	true,
	3,
	0,
	5382,
	false,
	true,
	[
	]
];};
